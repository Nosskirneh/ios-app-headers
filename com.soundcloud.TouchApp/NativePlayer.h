//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "Player-Protocol.h"
#import "VolumeAdjustable-Protocol.h"

@class AVPlayer, AVPlayerLayer, AudioController, NSArray, NSString, NativePlayerLoader, PlayerStateTransition, RACDisposable, RACSubject, _TtC8Playback44NativePlayerItemToAnalyticsDiagnosticsMapper;
@protocol PlayerDelegate, PlayerPerformanceTagger, _TtP8Features13PlayQueueItem_;

@interface NativePlayer : NSObject <Player, VolumeAdjustable>
{
    id <_TtP8Features13PlayQueueItem_> _item;
    id <PlayerDelegate> delegate;
    AudioController *_audioController;
    NativePlayerLoader *_playerLoader;
    id <PlayerPerformanceTagger> _performanceTagger;
    _TtC8Playback44NativePlayerItemToAnalyticsDiagnosticsMapper *_itemToDiagnosticsMapper;
    RACSubject *_isPlayingSubject;
    RACSubject *_preparedSubject;
    unsigned long long _playState;
    PlayerStateTransition *_playStateTransition;
    AVPlayer *_player;
    double _itemDuration;
    RACDisposable *_playerConfigurationDisposable;
    RACDisposable *_playerObservationDisposable;
    NSArray *_playerNotificationsTokens;
}

@property(retain, nonatomic) NSArray *playerNotificationsTokens; // @synthesize playerNotificationsTokens=_playerNotificationsTokens;
@property(retain, nonatomic) RACDisposable *playerObservationDisposable; // @synthesize playerObservationDisposable=_playerObservationDisposable;
@property(retain, nonatomic) RACDisposable *playerConfigurationDisposable; // @synthesize playerConfigurationDisposable=_playerConfigurationDisposable;
@property(nonatomic) double itemDuration; // @synthesize itemDuration=_itemDuration;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) PlayerStateTransition *playStateTransition; // @synthesize playStateTransition=_playStateTransition;
@property(nonatomic) unsigned long long playState; // @synthesize playState=_playState;
@property(retain, nonatomic) RACSubject *preparedSubject; // @synthesize preparedSubject=_preparedSubject;
@property(readonly, nonatomic) RACSubject *isPlayingSubject; // @synthesize isPlayingSubject=_isPlayingSubject;
@property(readonly, nonatomic) _TtC8Playback44NativePlayerItemToAnalyticsDiagnosticsMapper *itemToDiagnosticsMapper; // @synthesize itemToDiagnosticsMapper=_itemToDiagnosticsMapper;
@property(readonly, nonatomic) id <PlayerPerformanceTagger> performanceTagger; // @synthesize performanceTagger=_performanceTagger;
@property(readonly, nonatomic) NativePlayerLoader *playerLoader; // @synthesize playerLoader=_playerLoader;
@property(readonly, nonatomic) AudioController *audioController; // @synthesize audioController=_audioController;
@property(nonatomic) __weak id <PlayerDelegate> delegate; // @synthesize delegate;
@property(readonly, nonatomic) id <_TtP8Features13PlayQueueItem_> item; // @synthesize item=_item;
- (void).cxx_destruct;
- (void)unsubscribePlayerNotifications;
- (void)tagBufferUnderrun;
- (void)handlePlaybackStalledNotification;
- (id)subscribeStalled;
- (void)handleFailedToPlayToEndNotification;
- (id)subscribeError;
- (void)handleDidPlayToEndTimeNotification;
- (id)subscribeCompletion;
- (void)subscribePlayerItemNotifications;
- (void)setVolume:(double)arg1;
- (void)reloadTrackAndResume;
- (_Bool)playerIsAtEnd;
- (_Bool)isTryingToPlay;
- (_Bool)isBufferedToEndOfTrack;
- (double)maxBufferTime:(id)arg1;
- (double)timeIntervalFromTime:(CDStruct_198678f7)arg1;
- (CDUnknownBlockType)timerUpdateNotification;
- (id)subscribeIsStopped;
- (id)bufferingSignal;
- (id)isPlayingSignal;
- (void)updatePlayPauseStateForRateChange;
- (id)subscribeIsPlayingChanges;
- (id)subscribeCurrentTime;
- (id)subscribeStatus;
- (id)observeChanges;
- (void)removePlayerObservations;
- (void)createPlayerObservations;
- (void)performSeek:(double)arg1;
- (void)preparePlayer:(id)arg1;
- (void)prepare;
- (id)preparationFinishedSignal;
- (void)resetPreparation;
- (void)prepareIfNeeded;
- (void)transitionToError:(id)arg1;
@property(readonly, nonatomic) NSString *playerName;
@property(readonly, nonatomic) _Bool canKeepUpWithBuffer;
@property(readonly, nonatomic) double progressDuration;
@property(readonly, nonatomic) double bufferDuration;
@property(readonly, nonatomic) unsigned long long currentPlayState;
@property(readonly, nonatomic) double fullDuration;
@property(readonly, nonatomic) double playableDuration;
- (void)pause;
- (void)seekToTime:(double)arg1;
- (void)play;
- (void)prepareToPlay;
@property(readonly, nonatomic) AVPlayerLayer *layer;
- (id)playerLayer;
@property(readonly, nonatomic) _Bool isPlayingOffline;
@property(readonly, nonatomic) _Bool canPreloadItem;
@property(readonly, nonatomic) unsigned long long playerType;
- (void)dealloc;
- (id)initWithPlayerLoader:(id)arg1 item:(id)arg2 audioController:(id)arg3 performanceTagger:(id)arg4 itemToDiagnosticsMapper:(id)arg5;
- (id)initWithPlayerLoader:(id)arg1 item:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

