//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "OfflineContentDataSourcing-Protocol.h"

@class AuthUserNotificationFactory, NSDictionary, NSSet, OfflineContentDataObserver, RACScheduler, RACSubject;
@protocol _TtP4Core10TechLogger_;

@interface OfflineContentDataSource : NSObject <OfflineContentDataSourcing>
{
    OfflineContentDataObserver *_contentDataObserver;
    id _allTracksObservationDisposable;
    id _likedTracksObservationDisposable;
    id _playlistTracksObservationDisposable;
    RACSubject *_likedTracksSubject;
    RACSubject *_userPostedOrLikedPlaylistsSubject;
    RACSubject *_syncableTracksSubject;
    RACSubject *_unsyncableTracksSubject;
    AuthUserNotificationFactory *_userNotificationFactory;
    id _userNotificationDisposable;
    NSDictionary *_postedOrLikedPlaylists;
    NSSet *_likedTracks;
    NSSet *_syncableTracks;
    NSSet *_unsyncableTracks;
    id <_TtP4Core10TechLogger_> _techLogger;
    RACScheduler *_scheduler;
}

@property(readonly, nonatomic) RACScheduler *scheduler; // @synthesize scheduler=_scheduler;
@property(readonly, nonatomic) id <_TtP4Core10TechLogger_> techLogger; // @synthesize techLogger=_techLogger;
@property(retain) NSSet *unsyncableTracks; // @synthesize unsyncableTracks=_unsyncableTracks;
@property(retain) NSSet *syncableTracks; // @synthesize syncableTracks=_syncableTracks;
@property(retain) NSSet *likedTracks; // @synthesize likedTracks=_likedTracks;
@property(retain) NSDictionary *postedOrLikedPlaylists; // @synthesize postedOrLikedPlaylists=_postedOrLikedPlaylists;
@property(retain, nonatomic) id userNotificationDisposable; // @synthesize userNotificationDisposable=_userNotificationDisposable;
@property(readonly, nonatomic) AuthUserNotificationFactory *userNotificationFactory; // @synthesize userNotificationFactory=_userNotificationFactory;
@property(readonly, nonatomic) RACSubject *unsyncableTracksSubject; // @synthesize unsyncableTracksSubject=_unsyncableTracksSubject;
@property(readonly, nonatomic) RACSubject *syncableTracksSubject; // @synthesize syncableTracksSubject=_syncableTracksSubject;
@property(readonly, nonatomic) RACSubject *userPostedOrLikedPlaylistsSubject; // @synthesize userPostedOrLikedPlaylistsSubject=_userPostedOrLikedPlaylistsSubject;
@property(readonly, nonatomic) RACSubject *likedTracksSubject; // @synthesize likedTracksSubject=_likedTracksSubject;
@property(retain, nonatomic) id playlistTracksObservationDisposable; // @synthesize playlistTracksObservationDisposable=_playlistTracksObservationDisposable;
@property(retain, nonatomic) id likedTracksObservationDisposable; // @synthesize likedTracksObservationDisposable=_likedTracksObservationDisposable;
@property(retain, nonatomic) id allTracksObservationDisposable; // @synthesize allTracksObservationDisposable=_allTracksObservationDisposable;
@property(readonly, nonatomic) OfflineContentDataObserver *contentDataObserver; // @synthesize contentDataObserver=_contentDataObserver;
- (void).cxx_destruct;
- (void)populateLikedTracksCache;
- (void)populateSyncableAndUnsyncableTracksCache;
- (void)populateUserPostedOrLikedPlaylistsCache;
- (void)syncFetchedResultsControllers;
- (void)observeCurrentUser;
- (void)startObserving;
- (id)observeUnsyncableTracks:(CDUnknownBlockType)arg1;
- (id)observeSyncableTracks:(CDUnknownBlockType)arg1;
- (id)observePostedOrLikedPlaylists:(CDUnknownBlockType)arg1;
- (id)observeLikedTracks:(CDUnknownBlockType)arg1;
- (id)initWithUserNotificationFactory:(id)arg1 contentDataObserver:(id)arg2 techLogger:(id)arg3 scheduler:(id)arg4;
- (id)init;

@end

