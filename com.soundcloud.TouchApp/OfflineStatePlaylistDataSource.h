//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "OfflineStatePlaylistDataSourcing-Protocol.h"

@class NSDictionary, NSLock, RACScheduler, RACSubject;
@protocol OfflineContentDataSourcing, OfflineStateTrackDataSourcing, OfflineUserConfigDataSourcing;

@interface OfflineStatePlaylistDataSource : NSObject <OfflineStatePlaylistDataSourcing>
{
    RACSubject *_subject;
    struct NSDictionary *_trackStatesByPlaylistUrns;
    id <OfflineStateTrackDataSourcing> _tracksDataSource;
    id <OfflineUserConfigDataSourcing> _userConfigDataSource;
    id <OfflineContentDataSourcing> _contentDataSource;
    id _userConfigObservationToken;
    id _contentObservationToken;
    id _tracksObservationToken;
    NSLock *_lock;
    RACScheduler *_scheduler;
}

@property(readonly, nonatomic) RACScheduler *scheduler; // @synthesize scheduler=_scheduler;
@property(readonly, nonatomic) NSLock *lock; // @synthesize lock=_lock;
@property(retain, nonatomic) id tracksObservationToken; // @synthesize tracksObservationToken=_tracksObservationToken;
@property(retain, nonatomic) id contentObservationToken; // @synthesize contentObservationToken=_contentObservationToken;
@property(retain, nonatomic) id userConfigObservationToken; // @synthesize userConfigObservationToken=_userConfigObservationToken;
@property(readonly, nonatomic) id <OfflineContentDataSourcing> contentDataSource; // @synthesize contentDataSource=_contentDataSource;
@property(readonly, nonatomic) id <OfflineUserConfigDataSourcing> userConfigDataSource; // @synthesize userConfigDataSource=_userConfigDataSource;
@property(readonly, nonatomic) id <OfflineStateTrackDataSourcing> tracksDataSource; // @synthesize tracksDataSource=_tracksDataSource;
@property(retain) NSDictionary *trackStatesByPlaylistUrns; // @synthesize trackStatesByPlaylistUrns=_trackStatesByPlaylistUrns;
@property(readonly, nonatomic) RACSubject *subject; // @synthesize subject=_subject;
- (void).cxx_destruct;
- (id)reduceStatesFromPlaylistTracksUrns:(id)arg1 tracksStateByUrn:(id)arg2;
- (void)populateWithUserConfig:(id)arg1 postedOrLikedPlaylists:(id)arg2 tracksStateByUrn:(id)arg3;
- (void)observe;
- (id)observeStateForUrn:(id)arg1 withObserver:(CDUnknownBlockType)arg2;
- (id)offlinePlaylists;
- (id)stateForUrn:(id)arg1;
- (id)initWithOfflineContentDataSource:(id)arg1 tracksDataSource:(id)arg2 userConfigDataSource:(id)arg3 scheduler:(id)arg4 useReplaySubject:(_Bool)arg5;
- (id)initWithOfflineContentDataSource:(id)arg1 tracksDataSource:(id)arg2 userConfigDataSource:(id)arg3 useReplaySubject:(_Bool)arg4;
- (id)initWithInmediateSchedulerAndOfflineContentDataSource:(id)arg1 tracksDataSource:(id)arg2 userConfigDataSource:(id)arg3 useReplaySubject:(_Bool)arg4;

@end

