//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ANGTouchViewController.h"

#import "ANGOptionsSelectorDelegate-Protocol.h"
#import "ANGRecordNavigationControllerProtocol-Protocol.h"
#import "ANGUserVideoPlayerCollectionCellDelegate-Protocol.h"
#import "ANGVideoHandlerDelegate-Protocol.h"
#import "LoaderDelegate-Protocol.h"
#import "SHKShareItemDelegate-Protocol.h"
#import "SHKSharerDelegate-Protocol.h"
#import "SHKSharersViewDelegate-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"

@class ANGContentSectionList, ANGEnginePlayerVideoHandler, ANGUserVideo, ANGUserVideoPlayerCollectionViewCell, AVPlayerLayer, ContentSectionLoader, JPSVolumeButtonHandler, NSDate, NSMutableArray, NSString, NSTimer, UICollectionView, UserVideoVolumeView, VolumeViewToken;

@interface ANGUserVideoPlayerViewController : ANGTouchViewController <UICollectionViewDelegate, UICollectionViewDataSource, ANGUserVideoPlayerCollectionCellDelegate, LoaderDelegate, SHKSharerDelegate, SHKShareItemDelegate, SHKSharersViewDelegate, ANGVideoHandlerDelegate, ANGOptionsSelectorDelegate, ANGRecordNavigationControllerProtocol>
{
    VolumeViewToken *volumeViewToken;
    _Bool _didLayoutSubviews;
    _Bool _isInBackground;
    _Bool _viewIsShown;
    _Bool _userIsDragging;
    _Bool _optionsMenuShown;
    _Bool _isInterrupted;
    _Bool _isKeyboardShowing;
    _Bool _didSetPlayingIndexOnce;
    _Bool _loadingVideos;
    UICollectionView *_collectionView;
    NSMutableArray *_videoQueue;
    NSMutableArray *_cellsArray;
    AVPlayerLayer *_playerLayer;
    ANGContentSectionList *_section;
    long long _playingIndex;
    id _playerTimeObserver;
    long long _requestedPlayingIndex;
    double _lastDownloadProgress;
    double _lastPlayProgress;
    NSDate *_lastIndicatorOfLifeDate;
    ANGUserVideo *_userVideoBeingShared;
    ANGUserVideo *_requestLikesAndPlaysVideo;
    NSTimer *_likesAndPlaysTimer;
    long long _requestPlaysAndLikesCounter;
    ContentSectionLoader *_loader;
    JPSVolumeButtonHandler *_volumeHandler;
    UserVideoVolumeView *_volumeView;
    NSTimer *_volumeViewTimer;
    ANGUserVideoPlayerCollectionViewCell *_displayedPlayerCell;
    NSString *_currentGravity;
    ANGEnginePlayerVideoHandler *_videoHandler;
    ANGUserVideo *_currentVideoOptions;
}

@property(retain, nonatomic) ANGUserVideo *currentVideoOptions; // @synthesize currentVideoOptions=_currentVideoOptions;
@property _Bool loadingVideos; // @synthesize loadingVideos=_loadingVideos;
@property(retain, nonatomic) ANGEnginePlayerVideoHandler *videoHandler; // @synthesize videoHandler=_videoHandler;
@property(retain, nonatomic) NSString *currentGravity; // @synthesize currentGravity=_currentGravity;
@property(retain, nonatomic) ANGUserVideoPlayerCollectionViewCell *displayedPlayerCell; // @synthesize displayedPlayerCell=_displayedPlayerCell;
@property(retain, nonatomic) NSTimer *volumeViewTimer; // @synthesize volumeViewTimer=_volumeViewTimer;
@property(retain, nonatomic) UserVideoVolumeView *volumeView; // @synthesize volumeView=_volumeView;
@property(retain, nonatomic) JPSVolumeButtonHandler *volumeHandler; // @synthesize volumeHandler=_volumeHandler;
@property(retain, nonatomic) ContentSectionLoader *loader; // @synthesize loader=_loader;
@property(nonatomic) long long requestPlaysAndLikesCounter; // @synthesize requestPlaysAndLikesCounter=_requestPlaysAndLikesCounter;
@property(retain, nonatomic) NSTimer *likesAndPlaysTimer; // @synthesize likesAndPlaysTimer=_likesAndPlaysTimer;
@property(retain, nonatomic) ANGUserVideo *requestLikesAndPlaysVideo; // @synthesize requestLikesAndPlaysVideo=_requestLikesAndPlaysVideo;
@property(retain, nonatomic) ANGUserVideo *userVideoBeingShared; // @synthesize userVideoBeingShared=_userVideoBeingShared;
@property _Bool didSetPlayingIndexOnce; // @synthesize didSetPlayingIndexOnce=_didSetPlayingIndexOnce;
@property(retain, nonatomic) NSDate *lastIndicatorOfLifeDate; // @synthesize lastIndicatorOfLifeDate=_lastIndicatorOfLifeDate;
@property double lastPlayProgress; // @synthesize lastPlayProgress=_lastPlayProgress;
@property double lastDownloadProgress; // @synthesize lastDownloadProgress=_lastDownloadProgress;
@property(nonatomic) long long requestedPlayingIndex; // @synthesize requestedPlayingIndex=_requestedPlayingIndex;
@property(retain, nonatomic) id playerTimeObserver; // @synthesize playerTimeObserver=_playerTimeObserver;
@property(nonatomic) _Bool isKeyboardShowing; // @synthesize isKeyboardShowing=_isKeyboardShowing;
@property(nonatomic) _Bool isInterrupted; // @synthesize isInterrupted=_isInterrupted;
@property(nonatomic) _Bool optionsMenuShown; // @synthesize optionsMenuShown=_optionsMenuShown;
@property(nonatomic) _Bool userIsDragging; // @synthesize userIsDragging=_userIsDragging;
@property(nonatomic) _Bool viewIsShown; // @synthesize viewIsShown=_viewIsShown;
@property(nonatomic) _Bool isInBackground; // @synthesize isInBackground=_isInBackground;
@property(nonatomic) long long playingIndex; // @synthesize playingIndex=_playingIndex;
@property(retain, nonatomic) ANGContentSectionList *section; // @synthesize section=_section;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) NSMutableArray *cellsArray; // @synthesize cellsArray=_cellsArray;
@property(retain, nonatomic) NSMutableArray *videoQueue; // @synthesize videoQueue=_videoQueue;
@property _Bool didLayoutSubviews; // @synthesize didLayoutSubviews=_didLayoutSubviews;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (void)videoLoadSuccessful:(id)arg1;
- (void)videoEndedBuffering:(id)arg1;
- (void)videoEnded:(id)arg1;
- (void)videoBeganBuffering:(id)arg1;
- (void)failedToLoadVideo:(id)arg1;
- (_Bool)hasMoreItems;
- (void)loadMoreUserVideos;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)playbackCheck;
- (void)_requestPlaysAndLikesStartingWithVideo:(id)arg1;
- (void)requestPlaysAndLikesStartingWithVideo:(id)arg1;
- (void)invalidateTimer;
- (void)requestPlaysAndLikesWithTimer;
- (void)deleteUserVideoFile;
- (void)sharerStartedSending:(id)arg1;
- (void)sharerCancelledSending:(id)arg1;
- (void)sharer:(id)arg1 failedWithError:(id)arg2 shouldRelogin:(_Bool)arg3;
- (void)sharerFinishedSending:(id)arg1;
- (_Bool)sharerViewIsAboutToShowShareOption;
- (void)sharerViewCancelClicked;
- (void)sharingCancelled;
- (_Bool)aboutToShareItem:(id)arg1 withSharer:(id)arg2;
- (void)enterBackgroundMode;
- (void)handleAudioSessionInterruption:(id)arg1;
- (void)currentItemDidReachEnd;
- (id)playerObservers;
- (void)createHandlerWithUserVideo:(id)arg1;
- (void)setupPlayerQueue;
- (void)loadingFailed:(id)arg1 withError:(id)arg2;
- (void)loadingFinished:(id)arg1;
- (id)reportReasons;
- (void)showReportViewSender:(id)arg1 userVideo:(id)arg2;
- (void)enterForegroundMode;
- (void)dismissShareView:(id)arg1;
- (void)postPressedOnVideo:(id)arg1;
- (void)videoDeleted:(id)arg1;
- (void)closeButtonPressed;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)saveVideoToCameraRoll:(id)arg1;
- (void)saveToCameraRollVideo:(id)arg1;
- (void)createNewExpressionFromVideo:(id)arg1;
- (void)goToProfileForVideo:(id)arg1;
- (void)shareVideo:(id)arg1;
- (void)goToSongPageForVideo:(id)arg1;
- (void)goToViewsForVideo:(id)arg1;
- (void)goToLikesForVideo:(id)arg1;
- (void)goToCommentsForVideo:(id)arg1;
- (void)reportVideoClicked;
- (void)saveToCameraRollClicked;
- (void)recordExpressionClicked;
- (void)goToProfileClicked;
- (void)shareClicked;
- (void)deleteClicked;
- (void)optionsButton:(id)arg1 pressedOnVideo:(id)arg2;
- (id)optionsForSection:(unsigned long long)arg1;
- (unsigned long long)optionsSelectorNumberOfRowsForSection:(unsigned long long)arg1;
- (id)optionsSelectorTitleForSection:(unsigned long long)arg1;
- (unsigned long long)optionsSelectorNumberOfSections;
- (void)optionSelected:(id)arg1 valueChanged:(unsigned long long)arg2;
- (void)optionSelectorDidCancel;
- (id)getOptions;
- (void)showGenericError;
- (_Bool)shouldHideHorizontalOptionsButton:(id)arg1;
- (void)reportRegisterAction;
- (void)goToNextVideo;
- (void)doubleTapReceived;
- (void)tapRecieved:(id)arg1;
- (void)closePlayer:(id)arg1;
- (void)addTapGestureRecognizers;
- (void)addSwipeToCloseGestureRecognizer;
- (void)postNotificationToPlayAndReloadItem:(_Bool)arg1;
- (void)_playCurrentlyDisplayedVideo;
- (void)playCurrentlyDisplayedVideo;
- (void)refreshPlayState;
- (_Bool)isNewVideoShowingInScrollView:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)keyboardSizeChanged:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)keyboardWillHide:(id)arg1;
- (void)showOfflineError;
- (void)connectionStateDidChange:(id)arg1;
- (void)unregisterNotifications;
- (void)registerNotifications;
- (void)navigationWillAppear;
- (void)navigationDidDisappear;
- (void)navigationDidAppear;
- (void)_toggleShowHideVolumeView:(id)arg1;
- (void)toggleShowHideVolumeView;
- (void)addVolumeView;
- (void)viewDidLayoutSubviews;
- (struct CGSize)collectionViewCellSize;
- (id)playerQueue;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (_Bool)hidesNavigationBarWithNoControls;
- (_Bool)hidesNavigationBar;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)cleanQueueFromArray:(id)arg1;
- (id)initWithQueue:(id)arg1 index:(long long)arg2 section:(id)arg3 loader:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

