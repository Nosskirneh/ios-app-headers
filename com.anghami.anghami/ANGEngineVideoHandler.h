//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVAssetResourceLoaderDelegate-Protocol.h"
#import "LoaderDelegate-Protocol.h"

@class AVPlayerItem, AVQueuePlayer, AVURLAsset, NSArray, NSDate, NSDictionary, NSString, PlayerLayerView;
@protocol ANGVideoHandlerDelegate;

@interface ANGEngineVideoHandler : NSObject <AVAssetResourceLoaderDelegate, LoaderDelegate>
{
    _Bool _isLoading;
    _Bool _isLoaded;
    _Bool _isFailed;
    _Bool _isBuffering;
    _Bool _wasToldToPlay;
    _Bool _isHLS;
    _Bool _shouldLoop;
    _Bool _shouldPlayMuted;
    AVQueuePlayer *_player;
    PlayerLayerView *_videoPlayerView;
    double _duration;
    NSArray *_availableResolutions;
    NSDictionary *_selectedResolution;
    unsigned long long _numberOfInterruptions;
    id <ANGVideoHandlerDelegate> _delegate;
    AVPlayerItem *_playerItem;
    NSString *_downloadSignature;
    NSDate *_lastProgressChangedDate;
    double _lastDownloadProgress;
    double _lastPlayProgress;
    AVURLAsset *_playerAsset;
    NSString *_cachedMasterPlaylistData;
    NSDate *_beginLoadDate;
    NSDate *_beginPlayDate;
    NSDate *_latestLoadBeginDate;
    double _bufferTimeAfterStart;
    NSString *_hlsDataLocalPath;
    NSString *_hlsDataRootURL;
    struct CGSize _videoNaturalSize;
    struct CGSize _lastResolution;
}

+ (void)cleanHlsTempData;
+ (id)hlsDataCachePath;
@property(retain, nonatomic) NSString *hlsDataRootURL; // @synthesize hlsDataRootURL=_hlsDataRootURL;
@property(retain, nonatomic) NSString *hlsDataLocalPath; // @synthesize hlsDataLocalPath=_hlsDataLocalPath;
@property(nonatomic) double bufferTimeAfterStart; // @synthesize bufferTimeAfterStart=_bufferTimeAfterStart;
@property(retain, nonatomic) NSDate *latestLoadBeginDate; // @synthesize latestLoadBeginDate=_latestLoadBeginDate;
@property(retain, nonatomic) NSDate *beginPlayDate; // @synthesize beginPlayDate=_beginPlayDate;
@property(retain, nonatomic) NSDate *beginLoadDate; // @synthesize beginLoadDate=_beginLoadDate;
@property(retain, nonatomic) NSString *cachedMasterPlaylistData; // @synthesize cachedMasterPlaylistData=_cachedMasterPlaylistData;
@property(retain, nonatomic) AVURLAsset *playerAsset; // @synthesize playerAsset=_playerAsset;
@property(nonatomic) double lastPlayProgress; // @synthesize lastPlayProgress=_lastPlayProgress;
@property(nonatomic) double lastDownloadProgress; // @synthesize lastDownloadProgress=_lastDownloadProgress;
@property(retain, nonatomic) NSDate *lastProgressChangedDate; // @synthesize lastProgressChangedDate=_lastProgressChangedDate;
@property(retain, nonatomic) NSString *downloadSignature; // @synthesize downloadSignature=_downloadSignature;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property _Bool shouldPlayMuted; // @synthesize shouldPlayMuted=_shouldPlayMuted;
@property _Bool shouldLoop; // @synthesize shouldLoop=_shouldLoop;
@property(nonatomic) __weak id <ANGVideoHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool isHLS; // @synthesize isHLS=_isHLS;
@property(nonatomic) struct CGSize lastResolution; // @synthesize lastResolution=_lastResolution;
@property(nonatomic) unsigned long long numberOfInterruptions; // @synthesize numberOfInterruptions=_numberOfInterruptions;
@property(retain, nonatomic) NSDictionary *selectedResolution; // @synthesize selectedResolution=_selectedResolution;
@property(retain, nonatomic) NSArray *availableResolutions; // @synthesize availableResolutions=_availableResolutions;
@property(nonatomic) _Bool wasToldToPlay; // @synthesize wasToldToPlay=_wasToldToPlay;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) struct CGSize videoNaturalSize; // @synthesize videoNaturalSize=_videoNaturalSize;
@property(nonatomic) _Bool isBuffering; // @synthesize isBuffering=_isBuffering;
@property(retain, nonatomic) PlayerLayerView *videoPlayerView; // @synthesize videoPlayerView=_videoPlayerView;
@property(nonatomic) _Bool isFailed; // @synthesize isFailed=_isFailed;
@property(nonatomic) _Bool isLoaded; // @synthesize isLoaded=_isLoaded;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(retain, nonatomic) AVQueuePlayer *player; // @synthesize player=_player;
- (void).cxx_destruct;
- (void)reportViewedAmplitudeEvents;
- (void)sendRegisterActionModeSwitch:(_Bool)arg1;
- (void)loadingFailed:(id)arg1 withError:(id)arg2;
- (void)loadingFinished:(id)arg1;
- (void)startDownloadLoader;
- (void)setVideoViewingMode:(id)arg1;
- (void)toggleVideoViewingMode;
@property(readonly, nonatomic) NSDictionary *qosData;
@property(readonly, nonatomic) double bufferTimeBeforeStart;
@property(readonly, nonatomic) double timeElapsed;
- (id)handlerID;
- (void)destroy;
- (void)pause;
- (_Bool)isCurrentDeviceRemote;
- (void)play;
@property(readonly, nonatomic) double downloadProgress;
- (void)dealloc;
- (id)notificationDictionary;
- (id)notificationObject;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)playerItemKeyPaths;
- (void)videoFailedToPlay:(id)arg1;
- (void)itemDidFinishPlaying:(id)arg1;
- (void)startPlayingAsset:(id)arg1 atOffset:(double)arg2;
- (void)prepareToPlayAsset:(id)arg1 withKeys:(id)arg2;
- (void)loadAssetWithURLString:(id)arg1;
- (void)startVideoStreamingWithLocation:(id)arg1 signature:(id)arg2 hlsGZIPData:(id)arg3;
- (id)expandGZIPData:(id)arg1;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)loadSubPlaylist:(id)arg1 loadingRequest:(id)arg2;
- (void)loadMasterPlaylist:(id)arg1 loadingRequest:(id)arg2;
- (id)loadHLSDataFromDiskForUrlString:(id)arg1;
- (void)sanityCheck;
- (void)startLoadWithDelegate:(id)arg1;
- (id)initWithDuration:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

