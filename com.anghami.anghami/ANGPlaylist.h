//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "RLMObject.h"

#import "ANGNativeAdObject-Protocol.h"
#import "ActionableItem-Protocol.h"
#import "NSCoding-Protocol.h"
#import "NSCopying-Protocol.h"

@class ANGContentSectionContainer, ANGNativeAd, ANGPlaylistChangeset, NSArray, NSDate, NSDictionary, NSNumber, NSString, RLMArray, RLMLinkingObjects, Selector, UIImage;
@protocol ANGPlaylistSong, RLMInt;

@interface ANGPlaylist : RLMObject <ActionableItem, NSCopying, NSCoding, ANGNativeAdObject>
{
    NSString *_ownerFromDb;
    NSDate *_sharedTimeFromDb;
    long long _typeFromDb;
    _Bool _isUserPlaylist;
    _Bool _isBigImagePlaylist;
    _Bool _canEditPlaylist;
    _Bool _isTopPlaylist;
    _Bool _isNotShareable;
    _Bool _isSponsored;
    _Bool _isCoverArtPending;
    _Bool _hasVideo;
    _Bool _isFeatured;
    _Bool _isCollaborative;
    _Bool _isShowFollowButton;
    _Bool _isNotFollowable;
    _Bool _isSortedAlphabetically;
    _Bool _disableSkipLimit;
    _Bool _disableQueueRestrictions;
    _Bool _disablePlayerRestrictions;
    _Bool _disableAds;
    _Bool _hideCreator;
    _Bool _isCreatorLinkDisabled;
    _Bool _discardAds;
    _Bool _isPublic;
    _Bool _downloaded;
    NSString *_playlistId;
    NSString *_playlistName;
    long long _numberOfFollowers;
    NSString *_coverArtId;
    NSString *_squareCoverArtId;
    NSString *_summary;
    NSString *_year;
    NSDate *_subscribedTime;
    NSString *_genericId;
    NSString *_coverArtMeta;
    long long _limitNumberSongs;
    NSString *_squareImageTempUrl;
    NSDate *_creationDate;
    NSString *_creatorName;
    NSString *_creatorID;
    NSString *_creatorImage;
    NSDate *_sortDate;
    NSDate *_sortDateLastPlayed;
    NSNumber<RLMInt> *_smartPlaylistType;
    NSString *_collaborativeURL;
    NSString *_collaborativeToken;
    NSString *_collaborativeText;
    NSString *_adText;
    NSString *_adImageUrl;
    NSString *_adTapUrl;
    NSArray *_contextSongs;
    Selector *_selector;
    NSArray *_hashTags;
    NSString *_extras;
    NSString *_tagId;
    NSString *_hashFromServer;
    unsigned long long _countFromServer;
    NSDate *_serverUpdateTime;
    NSString *_supertitle;
    NSString *_superTitleColor;
    ANGContentSectionContainer *_cachedSectionsContainer;
    ANGPlaylistChangeset *_latestChangeset;
    RLMLinkingObjects *_changesets;
    ANGNativeAd *_nativeAdLocal;
    NSString *_localAdTagParams;
    RLMArray<ANGPlaylistSong> *_songsStorage;
}

+ (id)validNameFromName:(id)arg1;
+ (id)cacheKeyFromMeta:(id)arg1 andPlaylistId:(id)arg2;
+ (id)createPlaylistWithName:(id)arg1 songs:(id)arg2 collaborative:(_Bool)arg3 squareImageTempUrl:(id)arg4 userAction:(_Bool)arg5;
+ (id)createPlaylistWithName:(id)arg1 songs:(id)arg2 collaborative:(_Bool)arg3 userAction:(_Bool)arg4;
+ (void)createPlaylistFromSongs:(id)arg1 collaborativeOnByDefault:(_Bool)arg2 andSource:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)createPlaylistFromSongs:(id)arg1 collaborativeOnByDefault:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)createPlaylistFromSongs:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (_Bool)updatePlaylistFromRemote:(id)arg1 canCreate:(_Bool)arg2 inRealm:(id)arg3;
+ (void)startPlaylistDatabaseMonitor;
+ (id)allDisplayablePlaylists;
+ (id)storedPlaylistsWithIsUserPlaylist:(_Bool)arg1;
+ (id)allSubscribedStoredPlaylists;
+ (id)allOwnStoredPlaylists;
+ (id)_allEditablePlaylists;
+ (_Bool)hasEditablePlaylists;
+ (id)allEditablePlaylists;
+ (id)managedDownloadsPlaylist;
+ (id)managedLikesPlaylist;
+ (id)downloadsPlaylist;
+ (id)likesPlaylist;
+ (id)storedOwnPlaylistForCaseInsensitiveName:(id)arg1;
+ (id)storedOwnPlaylistForName:(id)arg1;
+ (id)unmanagedStoredPlaylistForId:(id)arg1;
+ (id)storedPlaylistForId:(id)arg1;
+ (_Bool)allowsAddingSongs:(id)arg1;
+ (id)undisplayablePlaylistsNames;
+ (id)reservedPlaylistNames;
+ (void)setReservedPlaylistsNotDownloaded;
+ (void)reportDownloadedPlaylists;
+ (id)createLocalPlaylistWithRemote:(id)arg1 inRealm:(id)arg2;
+ (id)filterUniquePlaylists:(id)arg1;
+ (id)allPlaylistsOfType:(long long)arg1;
+ (void)importOldPlaylists;
+ (void)showAddedToPlaylistNotification:(id)arg1;
+ (void)applyRemoveFromDownloadsForSongIds:(id)arg1 inRealm:(id)arg2 reason:(id)arg3 exceptPlaylistId:(id)arg4;
+ (void)logChangesets:(id)arg1;
+ (id)ignoredProperties;
+ (id)linkingObjectsProperties;
+ (id)primaryKey;
@property(nonatomic) _Bool downloaded; // @synthesize downloaded=_downloaded;
@property(nonatomic) _Bool isPublic; // @synthesize isPublic=_isPublic;
@property(retain, nonatomic) RLMArray<ANGPlaylistSong> *songsStorage; // @synthesize songsStorage=_songsStorage;
@property(copy) NSString *localAdTagParams; // @synthesize localAdTagParams=_localAdTagParams;
@property(readonly, nonatomic) ANGNativeAd *nativeAdLocal; // @synthesize nativeAdLocal=_nativeAdLocal;
@property(readonly) RLMLinkingObjects *changesets; // @synthesize changesets=_changesets;
@property(retain, nonatomic) ANGPlaylistChangeset *latestChangeset; // @synthesize latestChangeset=_latestChangeset;
@property(retain, nonatomic) ANGContentSectionContainer *cachedSectionsContainer; // @synthesize cachedSectionsContainer=_cachedSectionsContainer;
@property(nonatomic) _Bool discardAds; // @synthesize discardAds=_discardAds;
@property(readonly, nonatomic) NSString *superTitleColor; // @synthesize superTitleColor=_superTitleColor;
@property(readonly, nonatomic) NSString *supertitle; // @synthesize supertitle=_supertitle;
@property _Bool isCreatorLinkDisabled; // @synthesize isCreatorLinkDisabled=_isCreatorLinkDisabled;
@property _Bool hideCreator; // @synthesize hideCreator=_hideCreator;
@property(readonly, nonatomic) NSDate *serverUpdateTime; // @synthesize serverUpdateTime=_serverUpdateTime;
@property(readonly, nonatomic) unsigned long long countFromServer; // @synthesize countFromServer=_countFromServer;
@property(readonly, nonatomic) NSString *hashFromServer; // @synthesize hashFromServer=_hashFromServer;
@property(nonatomic) _Bool disableAds; // @synthesize disableAds=_disableAds;
@property(nonatomic) _Bool disablePlayerRestrictions; // @synthesize disablePlayerRestrictions=_disablePlayerRestrictions;
@property(nonatomic) _Bool disableQueueRestrictions; // @synthesize disableQueueRestrictions=_disableQueueRestrictions;
@property(nonatomic) _Bool disableSkipLimit; // @synthesize disableSkipLimit=_disableSkipLimit;
@property(retain, nonatomic) NSString *tagId; // @synthesize tagId=_tagId;
@property(retain, nonatomic) NSString *extras; // @synthesize extras=_extras;
@property(retain, nonatomic) NSArray *hashTags; // @synthesize hashTags=_hashTags;
@property(retain, nonatomic) Selector *selector; // @synthesize selector=_selector;
@property(retain, nonatomic) NSArray *contextSongs; // @synthesize contextSongs=_contextSongs;
@property(nonatomic) _Bool isSortedAlphabetically; // @synthesize isSortedAlphabetically=_isSortedAlphabetically;
@property(retain, nonatomic) NSString *adTapUrl; // @synthesize adTapUrl=_adTapUrl;
@property(retain, nonatomic) NSString *adImageUrl; // @synthesize adImageUrl=_adImageUrl;
@property(retain, nonatomic) NSString *adText; // @synthesize adText=_adText;
@property(nonatomic) _Bool isNotFollowable; // @synthesize isNotFollowable=_isNotFollowable;
@property(nonatomic) _Bool isShowFollowButton; // @synthesize isShowFollowButton=_isShowFollowButton;
@property(retain, nonatomic) NSString *collaborativeText; // @synthesize collaborativeText=_collaborativeText;
@property(retain, nonatomic) NSString *collaborativeToken; // @synthesize collaborativeToken=_collaborativeToken;
@property(retain, nonatomic) NSString *collaborativeURL; // @synthesize collaborativeURL=_collaborativeURL;
@property _Bool isCollaborative; // @synthesize isCollaborative=_isCollaborative;
@property(retain, nonatomic) NSNumber<RLMInt> *smartPlaylistType; // @synthesize smartPlaylistType=_smartPlaylistType;
@property(retain, nonatomic) NSDate *sortDateLastPlayed; // @synthesize sortDateLastPlayed=_sortDateLastPlayed;
@property(retain, nonatomic) NSDate *sortDate; // @synthesize sortDate=_sortDate;
@property(retain, nonatomic) NSString *creatorImage; // @synthesize creatorImage=_creatorImage;
@property(retain, nonatomic) NSString *creatorID; // @synthesize creatorID=_creatorID;
@property(retain, nonatomic) NSString *creatorName; // @synthesize creatorName=_creatorName;
@property _Bool isFeatured; // @synthesize isFeatured=_isFeatured;
@property(nonatomic) _Bool hasVideo; // @synthesize hasVideo=_hasVideo;
@property(nonatomic) _Bool isCoverArtPending; // @synthesize isCoverArtPending=_isCoverArtPending;
@property(nonatomic) _Bool isSponsored; // @synthesize isSponsored=_isSponsored;
@property(nonatomic) _Bool isNotShareable; // @synthesize isNotShareable=_isNotShareable;
@property(nonatomic) _Bool isTopPlaylist; // @synthesize isTopPlaylist=_isTopPlaylist;
@property(retain, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(retain, nonatomic) NSString *squareImageTempUrl; // @synthesize squareImageTempUrl=_squareImageTempUrl;
@property(nonatomic) long long limitNumberSongs; // @synthesize limitNumberSongs=_limitNumberSongs;
@property(nonatomic) _Bool canEditPlaylist; // @synthesize canEditPlaylist=_canEditPlaylist;
@property(retain, nonatomic) NSString *coverArtMeta; // @synthesize coverArtMeta=_coverArtMeta;
@property(retain, nonatomic) NSString *genericId; // @synthesize genericId=_genericId;
@property(retain, nonatomic) NSDate *subscribedTime; // @synthesize subscribedTime=_subscribedTime;
@property(nonatomic) _Bool isBigImagePlaylist; // @synthesize isBigImagePlaylist=_isBigImagePlaylist;
@property(retain, nonatomic) NSString *year; // @synthesize year=_year;
@property(retain, nonatomic) NSString *summary; // @synthesize summary=_summary;
@property(nonatomic) _Bool isUserPlaylist; // @synthesize isUserPlaylist=_isUserPlaylist;
@property(retain, nonatomic) NSString *squareCoverArtId; // @synthesize squareCoverArtId=_squareCoverArtId;
@property(retain, nonatomic) NSString *coverArtId; // @synthesize coverArtId=_coverArtId;
@property(nonatomic) long long numberOfFollowers; // @synthesize numberOfFollowers=_numberOfFollowers;
@property(retain, nonatomic) NSString *playlistName; // @synthesize playlistName=_playlistName;
@property(retain, nonatomic) NSString *playlistId; // @synthesize playlistId=_playlistId;
- (void).cxx_destruct;
@property(readonly) _Bool canInviteToCollaborative;
@property(readonly, nonatomic) _Bool isReservedPlaylist;
- (void)externalSetIsSortedAlphabetically:(_Bool)arg1;
- (_Bool)loadCoverArtInAsyncImageView:(id)arg1 size:(int)arg2;
- (void)uploadPlaylistCustomCoverArt:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) UIImage *cachedSquareImage;
@property(readonly, nonatomic) UIImage *customPersistentCoverArt;
- (id)persistentMeta;
@property(readonly, nonatomic) NSString *storedPlaylistHash;
- (id)videoAdMessage;
- (id)adId;
- (id)largeImageDownloadSpecWithSize:(long long)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)consolidateChangesets;
@property(readonly, nonatomic) _Bool hasTemporaryId;
@property(readonly, nonatomic) NSArray *songIds;
@property(readonly, copy) NSString *description;
- (void)externalSetCollaborative:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)externalSetPublic:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)externalSetName:(id)arg1;
- (void)externalUpdateWithSongList:(id)arg1;
- (void)externalMoveSongAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)externalRemoveSongsForArtist:(id)arg1;
- (void)externalRemoveSongs:(id)arg1;
- (void)externalRemoveSong:(id)arg1;
- (void)externalAddSongs:(id)arg1;
- (void)externalAddSong:(id)arg1;
- (void)modifyAndPostWithBlock:(CDUnknownBlockType)arg1;
- (void)refreshDownloadedSongs;
@property(readonly, nonatomic) ANGNativeAd *polarNativeAd;
@property(readonly, nonatomic) _Bool isNativeAd;
- (void)setCachedAd:(id)arg1;
- (void)loadSongsFromJSONArray:(id)arg1;
@property(readonly) NSArray *reversedSongs;
@property(readonly, nonatomic) NSArray *allSongs;
@property(readonly, nonatomic) unsigned long long playlistDuration;
@property(readonly, nonatomic) _Bool isCurrentlyPlaying;
- (_Bool)isGeneric;
- (_Bool)isEqualToCurrentPlayQueue;
@property(readonly, nonatomic) _Bool isPublicPlaylist;
@property(readonly, nonatomic) _Bool isEditablePlaylist;
@property(readonly, nonatomic) _Bool isOwnPlaylist;
@property(readonly, nonatomic) _Bool isFollowed;
@property(readonly, nonatomic) _Bool isDisableEditing;
@property(readonly) unsigned long long displayCount;
@property(readonly, nonatomic) unsigned long long count;
- (void)subscribeAndDownload:(_Bool)arg1;
- (void)subscribe;
- (void)unsubscribe;
- (void)deletePlaylist;
- (void)clearPlaylist;
@property(readonly, nonatomic) _Bool isPlaylistDownloaded;
@property(readonly) NSString *displayName;
@property(readonly) NSString *playlistDisplayName;
- (void)updateSortDate;
- (void)cleanOldChangesets;
@property(readonly, nonatomic) _Bool hasUnsyncedData;
- (long long)compare:(id)arg1;
@property(readonly, nonatomic) ANGPlaylistChangeset *earliestUnsyncedChange;
- (void)updateSongsStorage:(id)arg1;
- (void)updateWithSongList:(id)arg1;
- (void)moveSongAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeSongs:(id)arg1;
- (void)addSongs:(id)arg1;
- (_Bool)canAddSongs:(id)arg1 showAlert:(_Bool)arg2;
- (_Bool)canAddSong:(id)arg1 showAlert:(_Bool)arg2;
- (_Bool)externalContainsSongs:(id)arg1;
- (_Bool)externalContainsSong:(id)arg1;
- (void)updateSongsFrom:(id)arg1 inRealm:(id)arg2;
- (void)applyRemoveFromDownloadsForSongIds:(id)arg1 inRealm:(id)arg2 reason:(id)arg3;
- (void)updateAllFrom:(id)arg1 inRealm:(id)arg2;
- (void)retryCustomUpload;
- (void)setPlayedNow;
- (void)updateMetadataFrom:(id)arg1 updateEvenIfEmpty:(_Bool)arg2 inRealm:(id)arg3 canReuploadCoverArt:(_Bool)arg4;
- (void)updateMetadataFrom:(id)arg1 inRealm:(id)arg2;
- (_Bool)needsUpdateFrom:(id)arg1;
@property(readonly) NSDictionary *adTagParams;
- (void)loadOldSongs;
- (id)initWithResultSet:(id)arg1;
- (id)dictionary;
- (id)initWithAttributeDictionary:(id)arg1;
- (id)initWithTBXMLElement:(struct _TBXMLElement *)arg1;
- (id)initWithCoder:(id)arg1 fromOldFormat:(_Bool)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithMetadataOnly:(_Bool)arg1 withZone:(struct _NSZone *)arg2;
- (id)copyWithMetadataOnly:(_Bool)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)callCompletionBlock:(id)arg1;
- (void)composeImages;
- (void)downloadImageFailedForCoverArtId:(id)arg1;
- (void)downloadedImage:(id)arg1 coverArtId:(id)arg2;
- (void)generateCoverArtForArtIds:(id)arg1;
- (void)generateCoverArtForServer;
- (void)generateCoverArtForLocal;
- (void)generateCoverArtForListOfSongs:(id)arg1 style:(long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)generateCoverArtWithStyle:(long long)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)cancelGenerateCoverArt;
- (void)setCoverArtImages:(id)arg1;
- (id)coverArtImages;
- (void)setCoverArtIds:(id)arg1;
- (id)coverArtIds;
- (void)setCoverArtCompletionBlock:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)coverArtCompletionBlock;
- (void)setPlaylistCoverStyle:(long long)arg1;
- (long long)playlistCoverStyle;
- (unsigned long long)numberOfRequiredCovers;
- (id)imageDownloadSpecWithSize:(long long)arg1;
- (id)peekPopActions;
- (_Bool)isFollowable;
- (void)shareWithSource:(id)arg1;
- (void)playShuffled;
- (void)playNow;
- (void)playPlaylistShuffled:(_Bool)arg1;
- (void)playNext;
- (void)getSongsWithButtonType:(int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addToPlaylist;
- (void)removeFromDownloads;
- (id)_removeFromDownloads;
- (_Bool)downloadSource:(id)arg1;
- (_Bool)download;
- (unsigned long long)downloadStatus;
- (void)unfollow;
- (void)followFrom:(id)arg1 disableReporting:(_Bool)arg2;
- (void)follow;
- (id)subtitleText;
- (id)titleText;
- (void)loadData:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isReligious;
@property(readonly) Class superclass;

@end

