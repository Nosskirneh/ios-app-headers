//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ANGSong, NSDate, NSDictionary, NSNumber, NSString, UIView;
@protocol ANGLocalPlayerImpl, ANGPlayerImpl, ANGVideoPlayerImpl, ANGVideoPlayerProvider;

@interface ANGPlayerManager : NSObject
{
    long long _playSource;
    _Bool _enabled;
    NSDate *lastPeriodicTimeCheck;
    _Bool _switchToVideoModeOnNextPlayQueue;
    _Bool _videoStreamTypeSupportsResolutionSelection;
    _Bool _isCurrentlyRestrictedInBackground;
    NSObject<ANGPlayerImpl> *_currentPlayer;
    long long _playLocation;
    struct CGSize _currentVideoSize;
}

+ (id)playSourceString:(long long)arg1;
+ (_Bool)playSourceIsHeader:(long long)arg1;
+ (_Bool)playSourceIsShuffle:(long long)arg1;
+ (void)enableEngine;
+ (id)sharedInstance;
@property(nonatomic) long long playLocation; // @synthesize playLocation=_playLocation;
@property(retain, nonatomic) NSObject<ANGPlayerImpl> *currentPlayer; // @synthesize currentPlayer=_currentPlayer;
@property(readonly, nonatomic) _Bool isCurrentlyRestrictedInBackground; // @synthesize isCurrentlyRestrictedInBackground=_isCurrentlyRestrictedInBackground;
@property(readonly, nonatomic) _Bool videoStreamTypeSupportsResolutionSelection; // @synthesize videoStreamTypeSupportsResolutionSelection=_videoStreamTypeSupportsResolutionSelection;
@property(nonatomic) struct CGSize currentVideoSize; // @synthesize currentVideoSize=_currentVideoSize;
@property(nonatomic) _Bool switchToVideoModeOnNextPlayQueue; // @synthesize switchToVideoModeOnNextPlayQueue=_switchToVideoModeOnNextPlayQueue;
- (void).cxx_destruct;
- (void)checkIntentsFiles;
- (_Bool)isConnectedToExternalDevice;
- (void)setAudioSessionDefaultCategory;
- (void)setAudioSessionRecordAndPlayCategory;
- (void)setAudioSessionCategory:(id)arg1;
- (void)localSeekToPosition:(double)arg1;
- (_Bool)initializeAudioSession;
@property(nonatomic) _Bool videoModeOn;
- (void)sendExternalPlayerProgress;
- (void)updateLockscreenInfo;
@property(readonly, nonatomic) NSNumber *lookaheadSeconds;
- (void)periodicTimeCheck;
- (void)refreshCurrentPlayerCanRunInBackground:(_Bool)arg1;
- (void)refreshCurrentPlayer;
- (void)_refreshCurrentPlayer;
- (void)preloadAdsAfterConnecting;
@property(readonly, nonatomic) NSDictionary *playSourceDict;
@property(nonatomic) long long playSource;
- (_Bool)isBufferingPreview;
- (_Bool)isThisSongPreview:(id)arg1;
- (_Bool)isPreviewPlaying;
- (void)endPreviewingSong;
- (void)startPreviewingSong:(id)arg1;
@property(readonly, nonatomic) ANGSong *currentDisplaySong;
- (double)totalTimeElapsedInSong:(id)arg1;
- (void)shouldIgnorePlayEvents:(_Bool)arg1;
@property(retain, nonatomic) NSDictionary *selectedVideoResolution;
- (id)getAvailableVideoResolutions;
@property(readonly, nonatomic) NSString *outputRouteName;
@property(readonly, nonatomic) NSString *filteredOutputRoute;
@property(readonly, nonatomic) NSString *outputRoute;
- (id)downloadingFilePathForSong:(id)arg1;
- (_Bool)songIsCurrentlyPlayingAndNotFailed:(id)arg1;
- (void)setViewingMode:(id)arg1;
- (void)toggleVideoViewingMode;
- (struct CGSize)sizeForVideo:(id)arg1;
- (_Bool)videoPlayerReadyForVideo:(id)arg1;
- (double)downloadProgressForSong:(id)arg1;
- (double)durationOfSong:(id)arg1;
- (_Bool)seekToSeconds:(double)arg1 inSong:(id)arg2;
- (double)timeElapsedInSong:(id)arg1;
- (void)breakInterruptionSource:(id)arg1;
- (void)endSeeking;
- (void)beginSeekingBackward;
- (void)beginSeekingForward;
- (void)discardLoadedAds;
- (void)stopAndClearStreams;
- (void)togglePlayPause;
- (void)reportPlaySource;
- (void)pause;
- (void)play:(_Bool)arg1;
@property(readonly, nonatomic) UIView *videoPlayerView;
@property(readonly, nonatomic) _Bool isAudioAdPlaying;
@property(readonly, nonatomic) _Bool isBuffering;
@property(readonly, nonatomic) _Bool isPlayingLocally;
@property(readonly, nonatomic) _Bool isPlaying;
@property(readonly, nonatomic) id <ANGVideoPlayerProvider> videoPlayerProvider;
@property(readonly, nonatomic) NSObject<ANGLocalPlayerImpl> *currentLocalPlayer;
@property(readonly, nonatomic) NSObject<ANGVideoPlayerImpl> *currentVideoPlayer;
- (void)enableEngine;

@end

