//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ANGSectionedContentSongsListViewController.h"

#import "ANGAsyncImageViewDelegate-Protocol.h"
#import "ANGOptionsSelectorDelegate-Protocol.h"
#import "HashTagButtonDelegate-Protocol.h"
#import "PushRequestProtocol-Protocol.h"
#import "TitleLabelTapDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UITextFieldDelegate-Protocol.h"
#import "_TtP7Anghami28ANGScreenshotManagerDelegate_-Protocol.h"

@class ANGGeneratePlaylistCoverAction, ANGSong, ANGTooltip, GADBannerView, NSArray, NSDictionary, NSString, PlaylistDataLoader, UITapGestureRecognizer;

@interface ANGSectionedContentPlaylistViewController : ANGSectionedContentSongsListViewController <UIGestureRecognizerDelegate, HashTagButtonDelegate, PushRequestProtocol, TitleLabelTapDelegate, ANGOptionsSelectorDelegate, ANGAsyncImageViewDelegate, _TtP7Anghami28ANGScreenshotManagerDelegate_, UITextFieldDelegate>
{
    _Bool _shouldPlay;
    _Bool _disableLoaderAutoPlay;
    _Bool _didPlayOnce;
    unsigned long long _songsOriginalDisplayType;
    _Bool _shouldScrollToSongsSection;
    ANGTooltip *_currentToolTip;
    PlaylistDataLoader *_playlistLoader;
    UITapGestureRecognizer *_adHeaderImageTap;
    GADBannerView *_activeLeaderBoard;
    NSDictionary *_serverParams;
    NSArray *_songs;
    NSString *_source;
    _Bool _sortedAlphabetically;
    NSString *_lastSearchText;
    ANGSong *_currentDownloadSong;
    unsigned long long _numDownloaded;
    _Bool _isOwnPlaylist;
    _Bool _disableEditing;
    _Bool _isEditablePlaylist;
    _Bool _showInvite;
    ANGGeneratePlaylistCoverAction *_generateCoverAction;
    _Bool _didLoadCoverArtId;
    _Bool _isShowingTitleSelector;
    _Bool finishedLoading;
    _Bool shouldRefreshForSuggestions;
    _Bool hasRefreshedSuggestions;
}

@property(nonatomic) _Bool shouldScrollToSongsSection; // @synthesize shouldScrollToSongsSection=_shouldScrollToSongsSection;
- (void).cxx_destruct;
- (void)searchBarEditing:(_Bool)arg1;
- (id)objectToShareWhenScreenshotDetected;
- (long long)headerPlaySource;
- (long long)headerShuffleSource;
- (_Bool)canChangeOrder;
- (_Bool)hasButtonsView;
- (long long)enginePlaySource;
- (_Bool)isInEditMode;
- (id)getPlaylist;
- (void)uploadCoverArt:(id)arg1 controller:(id)arg2;
@property(readonly, nonatomic) _Bool supportsSorting;
- (_Bool)disableLoaderAutoPlay;
- (_Bool)availableInOfflineMode;
- (_Bool)headerBackgroundGradientViewVisible;
- (void)showAllForSection:(id)arg1;
- (_Bool)supportsEmptyView;
- (void)generateCoverArtFromSongsAndBypassCache:(_Bool)arg1;
- (_Bool)isLikedPlaylist;
- (_Bool)loaderIsLoading;
- (_Bool)playlistIsCollaborative;
- (_Bool)playlistHasSongs;
- (id)searchPlaceholder;
- (void)performSearchWithText:(id)arg1;
- (void)loadingFinished:(id)arg1;
- (void)updateDataSourcePlaylist:(id)arg1;
- (void)loadingFailed:(id)arg1 withError:(id)arg2;
- (id)loader;
- (void)adViewDidReceiveAd:(id)arg1;
- (id)customAdParameters;
- (id)adSizes;
- (_Bool)supportsMultipleAdSizes;
- (id)userWarningWhenStoppingDownloads;
- (id)userWarningWhenRemovingFromDownloads;
- (unsigned long long)downloadStatus;
- (double)downloadProgress;
- (void)removeSongsFromDownloads;
- (void)performDownloadSongs;
- (void)downloadSongs;
- (void)reportDownloadButtonAnalytics;
- (id)downloadSource;
- (id)listOfSongsToDownload;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (id)tableView:(id)arg1 targetIndexPathForMoveFromRowAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)deleteSong:(id)arg1;
- (id)addSongsView;
- (void)exitEditMode;
- (void)enterEditMode;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)didTapHeaderMainButton;
- (id)headerMainButtonTitle;
- (void)hashTagButtonPressed:(id)arg1;
- (void)renamePlaylist;
- (void)deletePlaylist;
- (void)openServerPlaylistSelectorOptions;
- (void)titleButtonPressed;
- (void)showSelectorOrSortOptions;
- (void)filterPressed;
- (void)didFinishPushRequestWithStatus:(_Bool)arg1;
- (_Bool)showGetPushAlert;
- (void)shufflePressed;
- (void)radioAction:(id)arg1;
- (void)unfollowPlaylist;
- (void)followActionCanShowReview:(_Bool)arg1;
- (void)followUnfollowPressed;
- (void)deleteButtonAction:(id)arg1;
- (id)clearMessage;
- (void)clearSongs;
- (void)adImageTapped;
- (void)playPlaylistShuffled:(_Bool)arg1;
- (void)collabToggleAction:(id)arg1;
- (void)publicToggleAction:(id)arg1;
- (void)addSongsAction;
- (void)playAction:(id)arg1;
- (void)presentContextSheet:(id)arg1;
- (void)sharePressed;
- (double)leaderBoardHeight;
- (void)subtitleLabelTapped;
- (id)headerSubtitle;
- (void)setupArtistOverlay;
- (id)songsContentSection;
- (void)showHideTableFooterView;
- (void)contentSectionsUpdated;
- (void)updateContentSection;
- (void)playlistInfoUpdated;
- (void)reloadData;
- (void)showCollabInviteScreen;
- (void)inviteFriendsPressed;
- (void)leavePressed;
- (_Bool)shareButtonAllowed;
- (_Bool)followButtonAllowed;
- (id)headerBarImageViewLabels;
- (id)defaultHeaderButtons;
- (void)setupHeaderImageSubviews;
- (void)addHeaderButtons;
- (_Bool)canEditWithoutBeingOwner;
- (_Bool)allowsEditing;
- (_Bool)shouldShowUploadCoverButton;
- (_Bool)shouldShowByUserOverlay;
- (void)setHeaderImage:(id)arg1 fade:(_Bool)arg2;
- (void)asyncImageSet:(id)arg1;
- (void)loadCoverArtImageViewImage;
- (void)reloadHeader;
- (void)reloadTitle;
- (void)playlistRecordModified:(id)arg1;
- (void)refreshServerData:(id)arg1;
- (void)playlistHasSyncedWithServer:(id)arg1;
- (void)playlistCreated:(id)arg1;
- (void)unregisterForNotifications;
- (void)registerForNotifications;
- (void)constructPlayQueueForSection:(id)arg1 atIndex:(unsigned long long)arg2 isVideoPlayQueue:(_Bool)arg3 showPlayerForVideo:(_Bool)arg4;
- (_Bool)sortedAlphabetically;
- (void)optionSelected:(id)arg1 valueChanged:(unsigned long long)arg2 andRowString:(id)arg3;
- (void)optionSelected:(id)arg1 valueChanged:(unsigned long long)arg2;
- (void)handleOptButtonItemWithName:(id)arg1;
- (id)optionsForSection:(unsigned long long)arg1;
- (id)optionsSelectorImageNameForSection:(unsigned long long)arg1;
- (id)optionsSelectorTitleForSection:(unsigned long long)arg1;
- (unsigned long long)optionsSelectorNumberOfRowsForSection:(unsigned long long)arg1;
- (unsigned long long)optionsSelectorNumberOfSections;
- (id)songs;
- (id)arrayOfTitleSelectorRows;
- (void)optButtonPressed;
- (void)addOptOrContextSheetButton;
- (struct CGRect)frameForToolTipType:(long long)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (_Bool)shouldShowGhostTown;
- (_Bool)containsSuggestionsSection;
- (id)getSuggestionsSection;
- (_Bool)containsSuggestionsOrSongsSection;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)findFirstSongUITableViewCell;
- (void)connectionStateDidChange:(id)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)findFirstSongCover;
- (void)showTooltipWithType:(long long)arg1;
- (id)amplitudeEventPageTitle;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)playlistAnalyticEvent;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithPlaylist:(id)arg1 parameters:(id)arg2 play:(_Bool)arg3 disableLoaderAutoPlay:(_Bool)arg4 source:(id)arg5 showInvite:(_Bool)arg6;
- (id)initWithPlaylist:(id)arg1 parameters:(id)arg2 play:(_Bool)arg3 disableLoaderAutoPlay:(_Bool)arg4 source:(id)arg5;
- (id)initWithPlaylist:(id)arg1 parameters:(id)arg2 play:(_Bool)arg3 disableLoaderAutoPlay:(_Bool)arg4;
- (id)initWithPlaylist:(id)arg1 parameters:(id)arg2 play:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

