//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ANGBassProcHandlerDelegate-Protocol.h"
#import "ANGSongDownloaderDelegate-Protocol.h"

@class ANGAudioStreamState, ANGBassProcHandler, ANGError, ANGSong, ANGSongDownloader, ANGSongReportingInfo, DownloadLoader, NSData, NSDate, NSDictionary, NSString;
@protocol ANGAudioStreamDelegate;

@interface ANGAudioStream : NSObject <ANGSongDownloaderDelegate, ANGBassProcHandlerDelegate>
{
    unsigned long long _progressErrorCount;
    double _lastProgressCheckTime;
    double _lastProgress;
    _Bool _disableLatencyCalculations;
    NSDate *_didStreamEndDate;
    _Bool _markedAsPlayed;
    _Bool _didStreamEnd;
    _Bool _isAllowedToPlay;
    _Bool _isFullyRead;
    _Bool _didShareSong;
    _Bool _didIndexSong;
    _Bool _wasStopped;
    _Bool _isEnding;
    _Bool _isInStoriesMode;
    _Bool _didAddToRecentlyPlayed;
    _Bool _didCheckDownloadAllowed;
    _Bool _downloadShouldBeStopped;
    _Bool _didSeekFail;
    _Bool _isRetryingSetReadyToPlayWhenInScrub;
    int _bassErrorCode;
    unsigned int _outputStream;
    unsigned int _mixerStream;
    ANGSongDownloader *_songDownloader;
    ANGSong *_song;
    NSString *_filePath;
    NSData *_data;
    unsigned long long _status;
    unsigned long long _failureReason;
    ANGError *_downloadError;
    double _lastReportedPosition;
    id <ANGAudioStreamDelegate> _delegate;
    ANGSongReportingInfo *_songReportingInfo;
    DownloadLoader *_invalidatingLoader;
    unsigned long long _bytesReadFromFile;
    ANGBassProcHandler *_bassProcHandler;
    unsigned long long _baseBytesDownloadedForBuffering;
    unsigned long long _bytesDownloadedSoFar;
    unsigned long long _lastSeekPosition;
    unsigned long long _totalBytesPlayed;
    unsigned long long _totalBytesPlayedSinceReset;
    unsigned long long _dataStreamSize;
    NSString *_notAllowedToPlayMessage;
    NSDictionary *_notAllowedToPlayDialog;
    unsigned long long _lastCreateStreamsAttempt;
    NSDate *_beginEndingDate;
    NSDate *_bufferingStartDate;
    double _firstBufferingTime;
    double _otherBufferingTimes;
    double _totalUserWaitTime;
    unsigned long long _numInterruptions;
    double _savedTotalTimePlayed;
    NSString *_originalRetrievalMode;
    unsigned long long _scrubbingOffset;
    double _scrubbingPosition;
    double _savedSeekPosition;
}

@property(nonatomic) double savedSeekPosition; // @synthesize savedSeekPosition=_savedSeekPosition;
@property(nonatomic) _Bool isRetryingSetReadyToPlayWhenInScrub; // @synthesize isRetryingSetReadyToPlayWhenInScrub=_isRetryingSetReadyToPlayWhenInScrub;
@property(nonatomic) _Bool didSeekFail; // @synthesize didSeekFail=_didSeekFail;
@property(nonatomic) double scrubbingPosition; // @synthesize scrubbingPosition=_scrubbingPosition;
@property(nonatomic) unsigned long long scrubbingOffset; // @synthesize scrubbingOffset=_scrubbingOffset;
@property(retain, nonatomic) NSString *originalRetrievalMode; // @synthesize originalRetrievalMode=_originalRetrievalMode;
@property(nonatomic) double savedTotalTimePlayed; // @synthesize savedTotalTimePlayed=_savedTotalTimePlayed;
@property(nonatomic) unsigned long long numInterruptions; // @synthesize numInterruptions=_numInterruptions;
@property(nonatomic) double totalUserWaitTime; // @synthesize totalUserWaitTime=_totalUserWaitTime;
@property(nonatomic) double otherBufferingTimes; // @synthesize otherBufferingTimes=_otherBufferingTimes;
@property(nonatomic) double firstBufferingTime; // @synthesize firstBufferingTime=_firstBufferingTime;
@property(retain, nonatomic) NSDate *bufferingStartDate; // @synthesize bufferingStartDate=_bufferingStartDate;
@property(nonatomic) _Bool downloadShouldBeStopped; // @synthesize downloadShouldBeStopped=_downloadShouldBeStopped;
@property(retain, nonatomic) NSDate *beginEndingDate; // @synthesize beginEndingDate=_beginEndingDate;
@property(nonatomic) unsigned long long lastCreateStreamsAttempt; // @synthesize lastCreateStreamsAttempt=_lastCreateStreamsAttempt;
@property(retain, nonatomic) NSDictionary *notAllowedToPlayDialog; // @synthesize notAllowedToPlayDialog=_notAllowedToPlayDialog;
@property(retain, nonatomic) NSString *notAllowedToPlayMessage; // @synthesize notAllowedToPlayMessage=_notAllowedToPlayMessage;
@property(nonatomic) unsigned long long dataStreamSize; // @synthesize dataStreamSize=_dataStreamSize;
@property(nonatomic) _Bool didCheckDownloadAllowed; // @synthesize didCheckDownloadAllowed=_didCheckDownloadAllowed;
@property(nonatomic) unsigned long long totalBytesPlayedSinceReset; // @synthesize totalBytesPlayedSinceReset=_totalBytesPlayedSinceReset;
@property(nonatomic) unsigned long long totalBytesPlayed; // @synthesize totalBytesPlayed=_totalBytesPlayed;
@property(nonatomic) unsigned long long lastSeekPosition; // @synthesize lastSeekPosition=_lastSeekPosition;
@property(nonatomic) unsigned int mixerStream; // @synthesize mixerStream=_mixerStream;
@property(nonatomic) unsigned int outputStream; // @synthesize outputStream=_outputStream;
@property(nonatomic) unsigned long long bytesDownloadedSoFar; // @synthesize bytesDownloadedSoFar=_bytesDownloadedSoFar;
@property(nonatomic) unsigned long long baseBytesDownloadedForBuffering; // @synthesize baseBytesDownloadedForBuffering=_baseBytesDownloadedForBuffering;
@property(retain, nonatomic) ANGBassProcHandler *bassProcHandler; // @synthesize bassProcHandler=_bassProcHandler;
@property(nonatomic) unsigned long long bytesReadFromFile; // @synthesize bytesReadFromFile=_bytesReadFromFile;
@property(nonatomic) _Bool didAddToRecentlyPlayed; // @synthesize didAddToRecentlyPlayed=_didAddToRecentlyPlayed;
@property(nonatomic) _Bool isInStoriesMode; // @synthesize isInStoriesMode=_isInStoriesMode;
@property(retain, nonatomic) DownloadLoader *invalidatingLoader; // @synthesize invalidatingLoader=_invalidatingLoader;
@property(retain, nonatomic) ANGSongReportingInfo *songReportingInfo; // @synthesize songReportingInfo=_songReportingInfo;
@property(nonatomic) _Bool isEnding; // @synthesize isEnding=_isEnding;
@property(nonatomic) _Bool wasStopped; // @synthesize wasStopped=_wasStopped;
@property(nonatomic) _Bool didIndexSong; // @synthesize didIndexSong=_didIndexSong;
@property(nonatomic) _Bool didShareSong; // @synthesize didShareSong=_didShareSong;
@property(nonatomic) _Bool isFullyRead; // @synthesize isFullyRead=_isFullyRead;
@property(nonatomic) _Bool isAllowedToPlay; // @synthesize isAllowedToPlay=_isAllowedToPlay;
@property(nonatomic) _Bool didStreamEnd; // @synthesize didStreamEnd=_didStreamEnd;
@property(nonatomic) _Bool markedAsPlayed; // @synthesize markedAsPlayed=_markedAsPlayed;
@property(nonatomic) __weak id <ANGAudioStreamDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double lastReportedPosition; // @synthesize lastReportedPosition=_lastReportedPosition;
@property(nonatomic) int bassErrorCode; // @synthesize bassErrorCode=_bassErrorCode;
@property(retain, nonatomic) ANGError *downloadError; // @synthesize downloadError=_downloadError;
@property(nonatomic) unsigned long long failureReason; // @synthesize failureReason=_failureReason;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
@property(retain, nonatomic) ANGSong *song; // @synthesize song=_song;
@property(retain, nonatomic) ANGSongDownloader *songDownloader; // @synthesize songDownloader=_songDownloader;
- (void).cxx_destruct;
- (void)resumeOutputStream;
- (void)pauseOutputStream;
- (_Bool)reinitBassStreamWithMixer:(unsigned int)arg1 oldPosition:(double)arg2;
- (_Bool)isProgressing;
- (void)sanityCheck;
@property(readonly, copy) NSString *description;
- (void)reportPosition:(double)arg1;
- (void)reportPosition;
- (void)possiblyRestartDownload;
@property(readonly, nonatomic) NSString *downloadFileName;
@property(readonly, nonatomic) _Bool isPluggedIntoMixer;
@property(readonly, nonatomic) double downloadProgress;
- (void)slideVolumeFrom:(float)arg1 to:(float)arg2 time:(double)arg3;
- (void)unplugFromMixer;
- (void)plugIntoMixer:(unsigned int)arg1;
- (void)reset;
- (void)dealloc;
- (void)handler:(id)arg1 didSeekToPosition:(unsigned long long)arg2;
- (void)readBytes:(unsigned int)arg1 fromHandler:(id)arg2;
- (void)createOutputStream;
- (void)freeResources;
- (void)failWithStreamCreationError:(unsigned long long)arg1;
- (void)songDownloader:(id)arg1 wroteBytes:(unsigned long long)arg2 totalWritten:(unsigned long long)arg3;
- (unsigned long long)_createBassStreams;
- (unsigned long long)createBassStreams;
- (void)retryDownload;
- (void)resetFailureCountAndRetry;
- (void)retrySetScrubbingPosition;
- (void)songDownloader:(id)arg1 statusChangedFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)stopForReason:(unsigned long long)arg1;
- (void)stop;
- (void)sendRegisterActionWithReason:(unsigned long long)arg1;
- (id)qosData;
- (void)sendRegisterAction;
- (unsigned int)readDataIntoBuffer:(char *)arg1 readSize:(unsigned int)arg2;
@property(readonly, nonatomic) _Bool isBufferingInScrubMode;
- (void)retrySetStatusAvailableToPlayWhenInScrub;
- (void)switchToScrubMode;
- (_Bool)_setPosition:(double)arg1 isInternal:(_Bool)arg2;
- (_Bool)setPosition:(double)arg1;
@property(readonly, nonatomic) double totalTimePlayed;
@property(readonly, nonatomic) double position;
- (double)mixerStreamLatency;
@property(readonly, nonatomic) unsigned long long bitRate;
- (void)displayNotAllowedToPlayMessage;
@property(readonly, nonatomic) ANGAudioStreamState *currentState;
@property(readonly, nonatomic) _Bool isInvalidated;
- (void)handleNewSongObjectForCachedSong:(id)arg1;
- (void)startDownloadWithExistingDownloadLoader:(id)arg1;
- (void)startDownload;
- (id)initWithData:(id)arg1 isInStoriesMode:(_Bool)arg2;
- (id)initWithFilePath:(id)arg1 isInStoriesMode:(_Bool)arg2;
- (id)initWithSong:(id)arg1 isInStoriesMode:(_Bool)arg2;
- (id)initWithSong:(id)arg1 savedState:(id)arg2 isInStoriesMode:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

