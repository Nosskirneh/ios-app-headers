//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AnghamiViewController.h"

#import "DERPCachingPagingViewDelegate-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "_TtP7Anghami28ANGScreenshotManagerDelegate_-Protocol.h"

@class ANGAnimatedDownloadButton, ANGAnimatedLikeButton, ANGAnimatedPlayButton, ANGBlockingTooltipViewController, ANGEnginePlayerVideoHandler, ANGFullScreenTooltip, ANGSong, ANGTooltip, AnghamiConnectionStatusBar, CAGradientLayer, DERPCachingPagingView, MCProgressBarView, MarqueeLabel, NSLayoutConstraint, NSOperationQueue, NSString, NSTimer, OBSlider, PlayQueueNavigationController, UIButton, UIImage, UIImageView, UILabel, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIStackView, UISwipeGestureRecognizer, UITapGestureRecognizer, UIView;
@protocol ActionableItem, AnghamiPlayerDelegate;

@interface PlayerViewController : AnghamiViewController <_TtP7Anghami28ANGScreenshotManagerDelegate_, DERPCachingPagingViewDelegate, UIActionSheetDelegate, UIGestureRecognizerDelegate>
{
    _Bool isPlayingSong;
    NSOperationQueue *_imageLoadingQueue;
    ANGTooltip *_sleepTimerToolTip;
    ANGTooltip *_audioDevicesTooltip;
    ANGTooltip *_lyricsToolTip;
    ANGTooltip *_queueToolTip;
    ANGTooltip *_dislikeToolTip;
    id <ActionableItem> _secondarySharableItem;
    _Bool playerVisible;
    _Bool _playerVideoWasEnabled;
    NSTimer *_likesAndPlaysTimer;
    NSLayoutConstraint *_notificationBarHeight;
    _Bool didShowDetailsBGButton;
    _Bool _pauseSlider;
    _Bool _isPlayQueueShowing;
    _Bool _fullscreenVideoWasShowingBeforeAd;
    _Bool _isPlayQueueAnimating;
    _Bool _viewPagerDisabled;
    id <AnghamiPlayerDelegate> _delegate;
    UIView *_headerBarView;
    AnghamiConnectionStatusBar *_notificationBar;
    UIButton *_hideButton;
    DERPCachingPagingView *_pagingView;
    UILabel *_artistLabel;
    MarqueeLabel *_songLabel;
    UILabel *_queueTypeLabel;
    UILabel *_queueLabel;
    UIView *_mainView;
    NSLayoutConstraint *_mainViewBottom;
    NSLayoutConstraint *_mainViewTop;
    PlayQueueNavigationController *_playQueueNav;
    UIView *_controlsView;
    UIButton *_actionButton;
    UIButton *_prevButton;
    UIStackView *_actionsView;
    ANGAnimatedPlayButton *_playButton;
    UIButton *_nextButton;
    UIButton *_audioRoutesButton;
    UIButton *_queueButton;
    UIButton *_currentDeviceButton;
    UIButton *_repeat;
    UIButton *_shuffle;
    UIButton *_shareButton;
    ANGAnimatedDownloadButton *_downloadButton;
    NSTimer *_progressTimer;
    unsigned long long _byteOffset;
    OBSlider *_progressSlider;
    MCProgressBarView *_progressView;
    UILabel *_elapsedTimeLabel;
    UILabel *_remainingTimeLabel;
    UIImage *_apTintImage;
    UIImage *_apOriginalImage;
    ANGAnimatedLikeButton *_likeButton;
    UIButton *_dislikeButton;
    ANGFullScreenTooltip *_likeTooltip;
    ANGBlockingTooltipViewController *_downloadToolTip;
    UITapGestureRecognizer *_artistLabelTapRecognizer;
    UITapGestureRecognizer *_navBarTapRecognizer;
    UILongPressGestureRecognizer *_sleepTimerRecognizer;
    UISwipeGestureRecognizer *_swipeToClose_iPad;
    UIImageView *_downloadingOverlay;
    double _downloadingOverlayFullWidth;
    NSLayoutConstraint *_downloadingOverlayWidthConstraint;
    ANGSong *_requestPlaysAndLikesSong;
    unsigned long long _requestPlaysAndLikesCounter;
    UIPanGestureRecognizer *_playQueuePan;
    UIView *_backgroundView;
    UIView *_bgPlayerVideoBlackOverlayView;
    CAGradientLayer *_bgPlayerVideoBlackOverlay;
    ANGEnginePlayerVideoHandler *_playerVideoHandler;
}

+ (void)updateLastPagingIndex:(long long)arg1;
@property(retain, nonatomic) ANGEnginePlayerVideoHandler *playerVideoHandler; // @synthesize playerVideoHandler=_playerVideoHandler;
@property(retain, nonatomic) CAGradientLayer *bgPlayerVideoBlackOverlay; // @synthesize bgPlayerVideoBlackOverlay=_bgPlayerVideoBlackOverlay;
@property(nonatomic) __weak UIView *bgPlayerVideoBlackOverlayView; // @synthesize bgPlayerVideoBlackOverlayView=_bgPlayerVideoBlackOverlayView;
@property(nonatomic) _Bool viewPagerDisabled; // @synthesize viewPagerDisabled=_viewPagerDisabled;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) _Bool isPlayQueueAnimating; // @synthesize isPlayQueueAnimating=_isPlayQueueAnimating;
@property(retain, nonatomic) UIPanGestureRecognizer *playQueuePan; // @synthesize playQueuePan=_playQueuePan;
@property(nonatomic) unsigned long long requestPlaysAndLikesCounter; // @synthesize requestPlaysAndLikesCounter=_requestPlaysAndLikesCounter;
@property(retain, nonatomic) ANGSong *requestPlaysAndLikesSong; // @synthesize requestPlaysAndLikesSong=_requestPlaysAndLikesSong;
@property(nonatomic) _Bool fullscreenVideoWasShowingBeforeAd; // @synthesize fullscreenVideoWasShowingBeforeAd=_fullscreenVideoWasShowingBeforeAd;
@property(retain, nonatomic) NSLayoutConstraint *downloadingOverlayWidthConstraint; // @synthesize downloadingOverlayWidthConstraint=_downloadingOverlayWidthConstraint;
@property(nonatomic) double downloadingOverlayFullWidth; // @synthesize downloadingOverlayFullWidth=_downloadingOverlayFullWidth;
@property(retain, nonatomic) UIImageView *downloadingOverlay; // @synthesize downloadingOverlay=_downloadingOverlay;
@property(retain, nonatomic) UISwipeGestureRecognizer *swipeToClose_iPad; // @synthesize swipeToClose_iPad=_swipeToClose_iPad;
@property(retain, nonatomic) UILongPressGestureRecognizer *sleepTimerRecognizer; // @synthesize sleepTimerRecognizer=_sleepTimerRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *navBarTapRecognizer; // @synthesize navBarTapRecognizer=_navBarTapRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *artistLabelTapRecognizer; // @synthesize artistLabelTapRecognizer=_artistLabelTapRecognizer;
@property(nonatomic) __weak ANGBlockingTooltipViewController *downloadToolTip; // @synthesize downloadToolTip=_downloadToolTip;
@property(nonatomic) __weak ANGFullScreenTooltip *likeTooltip; // @synthesize likeTooltip=_likeTooltip;
@property(nonatomic) _Bool isPlayQueueShowing; // @synthesize isPlayQueueShowing=_isPlayQueueShowing;
@property(retain, nonatomic) UIButton *dislikeButton; // @synthesize dislikeButton=_dislikeButton;
@property(retain, nonatomic) ANGAnimatedLikeButton *likeButton; // @synthesize likeButton=_likeButton;
@property(retain, nonatomic) UIImage *apOriginalImage; // @synthesize apOriginalImage=_apOriginalImage;
@property(retain, nonatomic) UIImage *apTintImage; // @synthesize apTintImage=_apTintImage;
@property(retain, nonatomic) UILabel *remainingTimeLabel; // @synthesize remainingTimeLabel=_remainingTimeLabel;
@property(retain, nonatomic) UILabel *elapsedTimeLabel; // @synthesize elapsedTimeLabel=_elapsedTimeLabel;
@property(retain, nonatomic) MCProgressBarView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) OBSlider *progressSlider; // @synthesize progressSlider=_progressSlider;
@property(nonatomic) unsigned long long byteOffset; // @synthesize byteOffset=_byteOffset;
@property(nonatomic) _Bool pauseSlider; // @synthesize pauseSlider=_pauseSlider;
@property(retain, nonatomic) NSTimer *progressTimer; // @synthesize progressTimer=_progressTimer;
@property(retain, nonatomic) ANGAnimatedDownloadButton *downloadButton; // @synthesize downloadButton=_downloadButton;
@property(retain, nonatomic) UIButton *shareButton; // @synthesize shareButton=_shareButton;
@property(retain, nonatomic) UIButton *shuffle; // @synthesize shuffle=_shuffle;
@property(retain, nonatomic) UIButton *repeat; // @synthesize repeat=_repeat;
@property(retain, nonatomic) UIButton *currentDeviceButton; // @synthesize currentDeviceButton=_currentDeviceButton;
@property(retain, nonatomic) UIButton *queueButton; // @synthesize queueButton=_queueButton;
@property(retain, nonatomic) UIButton *audioRoutesButton; // @synthesize audioRoutesButton=_audioRoutesButton;
@property(retain, nonatomic) UIButton *nextButton; // @synthesize nextButton=_nextButton;
@property(retain, nonatomic) ANGAnimatedPlayButton *playButton; // @synthesize playButton=_playButton;
@property(nonatomic) __weak UIStackView *actionsView; // @synthesize actionsView=_actionsView;
@property(retain, nonatomic) UIButton *prevButton; // @synthesize prevButton=_prevButton;
@property(retain, nonatomic) UIButton *actionButton; // @synthesize actionButton=_actionButton;
@property(retain, nonatomic) UIView *controlsView; // @synthesize controlsView=_controlsView;
@property(retain, nonatomic) PlayQueueNavigationController *playQueueNav; // @synthesize playQueueNav=_playQueueNav;
@property(retain, nonatomic) NSLayoutConstraint *mainViewTop; // @synthesize mainViewTop=_mainViewTop;
@property(retain, nonatomic) NSLayoutConstraint *mainViewBottom; // @synthesize mainViewBottom=_mainViewBottom;
@property(retain, nonatomic) UIView *mainView; // @synthesize mainView=_mainView;
@property(nonatomic) __weak UILabel *queueLabel; // @synthesize queueLabel=_queueLabel;
@property(nonatomic) __weak UILabel *queueTypeLabel; // @synthesize queueTypeLabel=_queueTypeLabel;
@property(retain, nonatomic) MarqueeLabel *songLabel; // @synthesize songLabel=_songLabel;
@property(retain, nonatomic) UILabel *artistLabel; // @synthesize artistLabel=_artistLabel;
@property(retain, nonatomic) DERPCachingPagingView *pagingView; // @synthesize pagingView=_pagingView;
@property(retain, nonatomic) UIButton *hideButton; // @synthesize hideButton=_hideButton;
@property(retain, nonatomic) AnghamiConnectionStatusBar *notificationBar; // @synthesize notificationBar=_notificationBar;
@property(retain, nonatomic) UIView *headerBarView; // @synthesize headerBarView=_headerBarView;
@property(retain, nonatomic) id <AnghamiPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setupBackgroundView;
- (void)setBackgroundViewGradientColor:(id)arg1;
- (void)loadBackgroundViewGradient;
- (_Bool)showDownloadTooltip;
- (id)objectToShareWhenScreenshotDetected;
- (void)logAmplitudeEventDropImageForSong:(id)arg1;
- (_Bool)isStarWars;
- (_Bool)isChristmas;
- (void)checkForEasterEggs;
- (void)animateUIControls:(_Bool)arg1 andShouldHideControls:(_Bool)arg2 andShouldAnimateBlackOverlay:(_Bool)arg3 andIsEntireAnimationAnimated:(_Bool)arg4;
- (void)cancelHideUIAlphaAction;
- (void)showUIAlpha;
- (void)startHideUIAlphaActionWithDelay:(int)arg1;
- (void)hideUIAlphaWithNormalDelay;
- (void)hideUIAlpha;
- (void)handleBGVideoPlayerTap;
- (void)setupControlsBlackOverlay;
- (void)updateBgPlayerVideoState;
- (id)getVisibleBGVideoController;
- (id)getVisibleBGVideoPlayerProgressBar;
- (void)updateVisibleBGVideoPlayerProgressBar:(double)arg1;
- (void)pagingViewDidScrollToIndex:(long long)arg1;
- (void)pagingViewWillBeginDraggingManually:(id)arg1;
- (void)pagingViewDidScrollManually:(id)arg1;
- (void)updateProgressViewStatus;
- (void)updatePrevButtonStatus;
- (void)updateCoverArtScrollStatus;
- (void)updateRepeatButtonStatus;
- (void)updateActionButtonsStatus;
- (void)updateFeaturesStatus;
- (void)translatePlayQueue:(double)arg1;
- (void)playQueuePanned:(id)arg1;
- (void)enablePagerScroll;
- (void)disablePagerScroll;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_hidePlayQueueAnimated:(_Bool)arg1;
- (void)hidePlayQueueAnimated:(_Bool)arg1;
- (void)_showPlayQueueAnimated:(_Bool)arg1;
- (void)showPlayQueueAnimated:(_Bool)arg1;
- (void)showPlayQueue:(id)arg1;
- (void)createPlayQueueViewController;
- (void)songsInfoUpdated:(id)arg1;
- (void)requestPlaysAndLikesStartingWithSong:(id)arg1;
- (void)requestPlaysAndLikesWithTimer;
- (void)attemptToShowSmallTooltips;
- (_Bool)showLikeTooltip;
- (_Bool)isTooltipShowing;
- (_Bool)isFullPlayerShowing;
- (id)blockingTooltips;
- (id)fullScreenTooltips;
- (id)smallTooltips;
- (void)shareAction:(id)arg1;
- (void)previousRadioSongDisabled:(id)arg1;
- (void)skipLimitReachedAction:(id)arg1;
@property(readonly, nonatomic) ANGSong *currentSong;
- (void)refreshButtons;
- (void)ShuffleSelected:(id)arg1;
- (void)RepeatSelected:(id)arg1;
- (void)enableControls;
- (void)disableControls;
- (_Bool)shouldPan;
- (void)adjustIpadStatusBar;
- (void)offlineModeToggled:(id)arg1;
- (void)whyAdsTapped;
- (void)audioAdDidEnd;
- (void)audioAdWillPlay;
- (void)hideConnectionNotificationBarAnimated:(_Bool)arg1;
- (void)showConnectionNotificationBarAnimated:(_Bool)arg1;
- (void)updateLikeSongButtonAnimated:(_Bool)arg1;
- (void)updateLikeSongButtonAnimated;
- (void)updateLikeSongButton;
- (void)updateDislikeSongButton;
- (void)showOnLikeToolTip;
- (void)likeSong:(id)arg1;
- (void)openActionButton:(id)arg1;
- (void)bgPlayerTopLyricsButtonPressed:(id)arg1;
- (void)bgPlayerTopVideoButtonPressed:(id)arg1;
- (void)showAudioRouteOptions:(id)arg1;
- (void)hideFullPlayer:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)hideFullPlayer:(id)arg1;
- (void)updateSlider;
- (void)updateSongTimeLabels;
- (void)updateSongPosition:(double)arg1;
- (void)songDownloadAmountChanged:(id)arg1;
- (void)songPositionChanged:(id)arg1;
- (void)movedSlider:(id)arg1;
- (void)sliderValueChanged:(id)arg1;
- (void)touchedSlider:(id)arg1;
- (void)nextButtonPressed:(id)arg1;
- (void)playButtonPressed:(id)arg1;
- (void)prevButtonPressed:(id)arg1;
- (void)dislikeButtonPressed:(id)arg1;
- (void)downloadSong:(id)arg1;
- (void)setLoadingSpinner:(_Bool)arg1 andForceAnimation:(_Bool)arg2;
- (void)setPauseButtonImage:(_Bool)arg1 andForceAnimation:(_Bool)arg2;
- (void)setPlayButtonImage:(_Bool)arg1 andForceAnimation:(_Bool)arg2;
- (void)refreshDownloadingOverlayWithProgress:(double)arg1;
- (void)toggleActionButtonUserAction:(_Bool)arg1;
- (void)toggleActionButton;
- (_Bool)shouldShowDownloadBarForSong:(id)arg1;
- (void)initSongInfo:(id)arg1;
- (void)changeConstraintRelationToEqual:(id *)arg1;
- (void)changeConstraintRelationToGreaterThanOrEqualTo:(id *)arg1;
- (void)initSongInfo;
- (void)initQueueInfo;
- (void)initTitleInfo:(id)arg1;
- (id)currentDisplaySong;
- (void)pagingView:(id)arg1 pageDidReceiveTap:(id)arg2 gestureRecognizer:(id)arg3;
- (void)pagingViewPreventedBackwardsGesture:(id)arg1;
- (void)refreshBackgroundPlayerVideo;
- (void)pagingView:(id)arg1 didChangePages:(long long)arg2;
- (unsigned long long)infinitePagingControllerCurrentIndex:(id)arg1;
- (unsigned long long)totalNumberOfPages;
- (float)scaleFactorForZoomedInPage:(id)arg1;
- (float)scaleFactorForZoomedOutPage:(id)arg1;
- (id)viewControllerForPageAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)currentPlaylistChangedInternal;
- (void)currentPlaylistChanged;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)videoModeToggled;
- (void)videoDurationUpdated:(id)arg1;
- (void)fullscreenVideoPlayerWillHide;
- (void)orientationChanged:(id)arg1;
- (void)currentSongInfoChanged;
- (void)sodUpdated;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidEnterForeground:(id)arg1;
- (void)registerForNotifications;
- (id)downloadInfoChangedNotifications;
- (void)updatePlayButton:(_Bool)arg1 andForceAnimation:(_Bool)arg2;
- (void)updatePlayButton:(_Bool)arg1;
- (void)updatePlayButton;
- (id)playStatusChangedNotifications;
- (void)unregisterForNotifications;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)artistTapAction:(id)arg1;
- (void)showSubscribeScreenForOffline:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)playerIsHidingOrHidden;
- (_Bool)playerIsShowingOrShown;
- (void)sleepTimerAction:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppearOnce:(_Bool)arg1;
- (void)viewDidLoad;
- (void)detectedAirplayChromecastAvailability;
- (void)logAnalyticsEvent;
- (void)updateQueueButtonState;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

