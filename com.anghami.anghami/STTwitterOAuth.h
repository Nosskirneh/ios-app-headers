//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "STTwitterProtocol-Protocol.h"

@class NSString;

@interface STTwitterOAuth : NSObject <STTwitterProtocol>
{
    double _timeoutInSeconds;
    NSString *_username;
    NSString *_password;
    NSString *_oauthConsumerName;
    NSString *_oauthConsumerKey;
    NSString *_oauthConsumerSecret;
    NSString *_oauthRequestToken;
    NSString *_oauthRequestTokenSecret;
    NSString *_oauthAccessToken;
    NSString *_oauthAccessTokenSecret;
    NSString *_testOauthNonce;
    NSString *_testOauthTimestamp;
}

+ (id)oauthSignatureWithHTTPMethod:(id)arg1 url:(id)arg2 parameters:(id)arg3 consumerSecret:(id)arg4 tokenSecret:(id)arg5;
+ (id)signatureBaseStringWithHTTPMethod:(id)arg1 url:(id)arg2 allParametersUnsorted:(id)arg3;
+ (id)parametersDictionariesSortedByKey:(id)arg1;
+ (id)oauthHeaderValueWithParameters:(id)arg1;
+ (id)stringFromParametersDictionaries:(id)arg1;
+ (id)encodedParametersDictionaries:(id)arg1;
+ (id)twitterOAuthWithConsumerName:(id)arg1 consumerKey:(id)arg2 consumerSecret:(id)arg3 username:(id)arg4 password:(id)arg5;
+ (id)twitterOAuthWithConsumerName:(id)arg1 consumerKey:(id)arg2 consumerSecret:(id)arg3 oauthToken:(id)arg4 oauthTokenSecret:(id)arg5;
+ (id)twitterOAuthWithConsumerName:(id)arg1 consumerKey:(id)arg2 consumerSecret:(id)arg3;
@property(retain, nonatomic) NSString *testOauthTimestamp; // @synthesize testOauthTimestamp=_testOauthTimestamp;
@property(retain, nonatomic) NSString *testOauthNonce; // @synthesize testOauthNonce=_testOauthNonce;
@property(retain, nonatomic) NSString *oauthAccessTokenSecret; // @synthesize oauthAccessTokenSecret=_oauthAccessTokenSecret;
@property(retain, nonatomic) NSString *oauthAccessToken; // @synthesize oauthAccessToken=_oauthAccessToken;
@property(retain, nonatomic) NSString *oauthRequestTokenSecret; // @synthesize oauthRequestTokenSecret=_oauthRequestTokenSecret;
@property(retain, nonatomic) NSString *oauthRequestToken; // @synthesize oauthRequestToken=_oauthRequestToken;
@property(retain, nonatomic) NSString *oauthConsumerSecret; // @synthesize oauthConsumerSecret=_oauthConsumerSecret;
@property(retain, nonatomic) NSString *oauthConsumerKey; // @synthesize oauthConsumerKey=_oauthConsumerKey;
@property(retain, nonatomic) NSString *oauthConsumerName; // @synthesize oauthConsumerName=_oauthConsumerName;
@property(retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(retain, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) double timeoutInSeconds; // @synthesize timeoutInSeconds=_timeoutInSeconds;
- (void).cxx_destruct;
- (id)postResource:(id)arg1 baseURLString:(id)arg2 parameters:(id)arg3 successBlock:(CDUnknownBlockType)arg4 errorBlock:(CDUnknownBlockType)arg5;
- (id)postResource:(id)arg1 baseURLString:(id)arg2 parameters:(id)arg3 oauthCallback:(id)arg4 successBlock:(CDUnknownBlockType)arg5 errorBlock:(CDUnknownBlockType)arg6;
- (id)postResource:(id)arg1 baseURLString:(id)arg2 parameters:(id)arg3 progressBlock:(CDUnknownBlockType)arg4 successBlock:(CDUnknownBlockType)arg5 errorBlock:(CDUnknownBlockType)arg6;
- (id)fetchResource:(id)arg1 HTTPMethod:(id)arg2 baseURLString:(id)arg3 parameters:(id)arg4 oauthCallback:(id)arg5 uploadProgressBlock:(CDUnknownBlockType)arg6 downloadProgressBlock:(CDUnknownBlockType)arg7 successBlock:(CDUnknownBlockType)arg8 errorBlock:(CDUnknownBlockType)arg9;
- (id)fetchResource:(id)arg1 HTTPMethod:(id)arg2 baseURLString:(id)arg3 parameters:(id)arg4 uploadProgressBlock:(CDUnknownBlockType)arg5 downloadProgressBlock:(CDUnknownBlockType)arg6 successBlock:(CDUnknownBlockType)arg7 errorBlock:(CDUnknownBlockType)arg8;
- (id)OAuthEchoHeadersToVerifyCredentials;
- (void)signRequest:(id)arg1;
- (void)signRequest:(id)arg1 isMediaUpload:(_Bool)arg2;
- (void)signRequest:(id)arg1 isMediaUpload:(_Bool)arg2 oauthCallback:(id)arg3;
- (void)postAccessTokenRequestWithPIN:(id)arg1 successBlock:(CDUnknownBlockType)arg2 errorBlock:(CDUnknownBlockType)arg3;
- (void)postXAuthAccessTokenRequestWithUsername:(id)arg1 password:(id)arg2 successBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;
- (void)postReverseOAuthTokenRequest:(CDUnknownBlockType)arg1 errorBlock:(CDUnknownBlockType)arg2;
- (void)postTokenRequest:(CDUnknownBlockType)arg1 oauthCallback:(id)arg2 errorBlock:(CDUnknownBlockType)arg3;
- (void)postTokenRequest:(CDUnknownBlockType)arg1 authenticateInsteadOfAuthorize:(_Bool)arg2 forceLogin:(id)arg3 screenName:(id)arg4 oauthCallback:(id)arg5 errorBlock:(CDUnknownBlockType)arg6;
- (id)oauthVersion;
- (id)oauthTimestamp;
- (id)oauthSignatureMethod;
- (void)verifyCredentialsWithSuccessBlock:(CDUnknownBlockType)arg1 errorBlock:(CDUnknownBlockType)arg2;
- (_Bool)canVerifyCredentials;
- (id)oauthNonce;
- (id)loginTypeDescription;
- (id)consumerName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

