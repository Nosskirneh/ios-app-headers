//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ANGAudioStreamDelegate-Protocol.h"
#import "ANGGoogleCastControllerDelegate-Protocol.h"
#import "ANGLocalPlayerImpl-Protocol.h"
#import "ANGPlayerImpl-Protocol.h"
#import "ANGVideoHandlerDelegate-Protocol.h"
#import "ANGVideoPlayerImpl-Protocol.h"
#import "ANGYoutubeVideoHandlerDelegate-Protocol.h"

@class ANGAdLoader, ANGAudioAdStream, ANGAudioStream, ANGAudioStreamState, ANGGoogleCastController, ANGGoogleCastPlayer, ANGPlayQueue, ANGSong, ANGVastAd, AdPopupViewController, NSArray, NSDate, NSDictionary, NSMutableDictionary, NSNumber, NSString, NSTimer;
@protocol ANGVideoPlayerProvider;

@interface ANGAudioEngine : NSObject <ANGAudioStreamDelegate, ANGVideoHandlerDelegate, ANGGoogleCastControllerDelegate, ANGYoutubeVideoHandlerDelegate, ANGPlayerImpl, ANGVideoPlayerImpl, ANGLocalPlayerImpl>
{
    _Bool _shouldResumeAfterInterruption;
    _Bool _isInterrupted;
    _Bool _ignorePlayqueueChanges;
    NSMutableDictionary *_specialAdPlayTimes;
    _Bool _previewInterruptedSong;
    _Bool _currentSongIsPreviewing;
    _Bool _deviceIsLocked;
    NSTimer *_restrictInBackgroundTimer;
    _Bool _mixerNeedsRestart;
    _Bool _ignorePlayEvents;
    _Bool _lastSkipDueToFailure;
    unsigned int _eq[5];
    _Bool _didAddMixerStream;
    NSDictionary *_selectedVideoResolution;
    _Bool _videoModeOn;
    _Bool _isDestroyed;
    ANGAudioStreamState *_loadedStreamState;
    _Bool _audioSessionInitialized;
    _Bool _shouldResumeAfterSleep;
    NSArray *_pluggedInStreamsBeforeSleep;
    NSString *_lastDitchAdLoadSongId;
    _Bool _isPlaying;
    _Bool _isInStoriesMode;
    _Bool _lastStopDueToConnectionFailure;
    _Bool _isPlayingVideoAd;
    _Bool _isPlayingInHouseAd;
    _Bool _isWaitingForOnlineMode;
    _Bool _isSettingVideoMode;
    _Bool _shouldPauseOnAudioAdEnd;
    _Bool _isCurrentlyRestrictedInBackground;
    unsigned int _mixerStream;
    ANGGoogleCastController *_castController;
    ANGAdLoader *_audioAdLoader;
    ANGAdLoader *_videoAdLoader;
    ANGAdLoader *_inHouseAdLoader;
    AdPopupViewController *_audioAdCompanion;
    ANGGoogleCastPlayer *_castPlayer;
    ANGVastAd *_audioAdModel;
    NSTimer *_volumePauseTimer;
    ANGAudioStream *_nextStream;
    ANGAudioStream *_previewStream;
    ANGAudioStream *_currentStream;
    ANGSong *_previewSong;
    NSNumber *_playQueueIndexOnFailure;
    ANGAudioAdStream *_audioAdStream;
    NSDate *_connectionFailureDate;
    NSDate *_lastPauseDate;
    ANGPlayQueue *_lastStoppedPlayQueue;
    NSTimer *_waitingForOnlineModeTimer;
    NSObject<ANGVideoPlayerProvider> *_videoHandler;
    ANGAudioStream *_crossfadeOutStream;
}

+ (void)callFailPlayReason:(unsigned long long)arg1 downloadError:(id)arg2 song:(id)arg3 bassErrorCode:(long long)arg4;
+ (id)audioStreamSavedState;
+ (void)saveAudioStreamState:(id)arg1;
+ (id)audioStreamStateSavePath;
+ (void)startBass;
+ (void)setupPriorityNotifications;
+ (void)playQueueChanged:(id)arg1;
+ (id)latestEngineInstance;
+ (void)updateCurrentActiveEngine;
+ (void)iterateActiveEngines:(CDUnknownBlockType)arg1;
@property(nonatomic) _Bool isCurrentlyRestrictedInBackground; // @synthesize isCurrentlyRestrictedInBackground=_isCurrentlyRestrictedInBackground;
@property(nonatomic) _Bool shouldPauseOnAudioAdEnd; // @synthesize shouldPauseOnAudioAdEnd=_shouldPauseOnAudioAdEnd;
@property(retain, nonatomic) ANGAudioStream *crossfadeOutStream; // @synthesize crossfadeOutStream=_crossfadeOutStream;
@property(nonatomic) _Bool isSettingVideoMode; // @synthesize isSettingVideoMode=_isSettingVideoMode;
@property(retain, nonatomic) NSObject<ANGVideoPlayerProvider> *videoHandler; // @synthesize videoHandler=_videoHandler;
@property(retain, nonatomic) NSTimer *waitingForOnlineModeTimer; // @synthesize waitingForOnlineModeTimer=_waitingForOnlineModeTimer;
@property(nonatomic) _Bool isWaitingForOnlineMode; // @synthesize isWaitingForOnlineMode=_isWaitingForOnlineMode;
@property(nonatomic) _Bool isPlayingInHouseAd; // @synthesize isPlayingInHouseAd=_isPlayingInHouseAd;
@property(nonatomic) _Bool isPlayingVideoAd; // @synthesize isPlayingVideoAd=_isPlayingVideoAd;
@property(retain, nonatomic) ANGPlayQueue *lastStoppedPlayQueue; // @synthesize lastStoppedPlayQueue=_lastStoppedPlayQueue;
@property(retain, nonatomic) NSDate *lastPauseDate; // @synthesize lastPauseDate=_lastPauseDate;
@property(retain, nonatomic) NSDate *connectionFailureDate; // @synthesize connectionFailureDate=_connectionFailureDate;
@property(nonatomic) _Bool lastStopDueToConnectionFailure; // @synthesize lastStopDueToConnectionFailure=_lastStopDueToConnectionFailure;
@property(retain, nonatomic) ANGAudioAdStream *audioAdStream; // @synthesize audioAdStream=_audioAdStream;
@property(retain, nonatomic) NSNumber *playQueueIndexOnFailure; // @synthesize playQueueIndexOnFailure=_playQueueIndexOnFailure;
@property(nonatomic) unsigned int mixerStream; // @synthesize mixerStream=_mixerStream;
@property(retain, nonatomic) ANGSong *previewSong; // @synthesize previewSong=_previewSong;
@property(retain, nonatomic) ANGAudioStream *currentStream; // @synthesize currentStream=_currentStream;
@property(retain, nonatomic) ANGAudioStream *previewStream; // @synthesize previewStream=_previewStream;
@property(retain, nonatomic) ANGAudioStream *nextStream; // @synthesize nextStream=_nextStream;
@property(retain, nonatomic) NSTimer *volumePauseTimer; // @synthesize volumePauseTimer=_volumePauseTimer;
@property(retain, nonatomic) ANGVastAd *audioAdModel; // @synthesize audioAdModel=_audioAdModel;
@property(retain, nonatomic) ANGGoogleCastPlayer *castPlayer; // @synthesize castPlayer=_castPlayer;
@property(retain, nonatomic) AdPopupViewController *audioAdCompanion; // @synthesize audioAdCompanion=_audioAdCompanion;
@property(retain, nonatomic) ANGAdLoader *inHouseAdLoader; // @synthesize inHouseAdLoader=_inHouseAdLoader;
@property(retain, nonatomic) ANGAdLoader *videoAdLoader; // @synthesize videoAdLoader=_videoAdLoader;
@property(retain, nonatomic) ANGAdLoader *audioAdLoader; // @synthesize audioAdLoader=_audioAdLoader;
@property(retain, nonatomic) ANGGoogleCastController *castController; // @synthesize castController=_castController;
@property(nonatomic) _Bool isInStoriesMode; // @synthesize isInStoriesMode=_isInStoriesMode;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long enginePriority;
@property(readonly, nonatomic) ANGPlayQueue *engineQueue;
- (void)youtubeVideoEnded:(id)arg1;
- (void)youtubeVideoEndedBuffering:(id)arg1;
- (void)youtubeVideoBeganBuffering:(id)arg1;
- (void)youtubeVideoLoadSuccessful:(id)arg1;
- (void)failedToLoadYoutubeVideo:(id)arg1;
- (_Bool)isCurrentVideoHandler:(id)arg1;
- (void)dealloc;
@property(readonly, nonatomic) _Bool needsProgressTimer;
- (void)releaseResources;
@property(readonly, nonatomic) ANGSong *currentPreviewingSong;
- (void)notifySongPlaybackStarted;
- (void)notifySongPlaybackPaused;
- (void)notifyStoppedBuffering;
- (void)notifyStartedBuffering;
- (void)reportPlaySource;
- (double)totalTimeElapsedInSong:(id)arg1;
- (void)shouldIgnorePlayEvents:(_Bool)arg1;
- (_Bool)videoStreamTypeSupportsResolutionSelection;
- (struct CGSize)currentVideoSize;
@property(retain, nonatomic) NSDictionary *selectedVideoResolution;
- (id)getAvailableVideoResolutions;
@property(readonly, nonatomic) _Bool isConnectedToExternalDevice;
@property(readonly, nonatomic) NSString *outputRouteName;
@property(readonly, nonatomic) NSString *filteredOutputRoute;
@property(readonly, nonatomic) NSString *outputRoute;
- (id)downloadingFilePathForSong:(id)arg1;
- (_Bool)songIsCurrentlyPlayingAndNotFailed:(id)arg1;
@property(readonly, nonatomic) ANGSong *currentDisplaySong;
@property(readonly, nonatomic) _Bool isBufferingPreview;
- (_Bool)isThisSongPreview:(id)arg1;
@property(readonly, nonatomic) _Bool isPreviewPlaying;
- (void)endPreviewingSong;
- (void)startPreviewingSong:(id)arg1;
- (void)setViewingMode:(id)arg1;
- (void)toggleVideoViewingMode;
- (struct CGSize)sizeForVideo:(id)arg1;
@property(nonatomic) _Bool videoModeOn;
- (_Bool)videoPlayerReadyForVideo:(id)arg1;
- (void)doneWaitingForOnlineMode;
- (double)progressForDevice:(id)arg1;
- (void)googleCastControllerDidDisconnectFromDevice:(id)arg1;
- (void)googleCastController:(id)arg1 didConnectToApplicationWithPlayer:(id)arg2;
- (void)googleCastControllerDidConnectToDevice:(id)arg1;
- (void)clearAudioAd;
- (void)discardLoadedAds;
- (_Bool)showInHouseAd;
- (void)showAudioAd;
- (_Bool)showVideoAd;
- (_Bool)showAd;
@property(readonly, nonatomic) _Bool isAudioAdPlaying;
- (_Bool)didPassInHouseAdThreshold;
- (_Bool)didPassAudioAdThreshold;
- (_Bool)didPassVideoAdThreshold;
- (_Bool)shouldShowAd;
- (_Bool)shouldShowInHouseAdOverride;
- (_Bool)shouldShowInHouseAd;
- (_Bool)shouldShowAudioAd;
- (_Bool)shouldShowVideoAd;
- (void)loadInHouseAdIfNecessary;
- (void)loadVideoAdIfNecessary;
- (void)loadAudioAdIfNecessary;
- (void)loadAdsIfNecessary;
- (void)preloadAdsAfterConnecting;
- (_Bool)hideAds;
- (long long)nextAdSlotWithFirstSlot:(long long)arg1;
- (long long)nextInHouseAdSlot;
- (long long)nextAudioAdSlot;
- (long long)nextVideoAdSlot;
- (void)endSeeking;
- (void)beginSeekingBackward;
- (void)beginSeekingForward;
- (void)sendLockScreenData:(id)arg1;
- (void)updateLockscreenInfo;
- (void)removeEQ;
- (void)addOrRemoveEQ;
- (void)eqChanged;
- (_Bool)seekToSeconds:(double)arg1 inSong:(id)arg2;
- (void)displayMessageOnSongFailure;
- (void)handleSongFailure;
- (void)showSongsSkippedMessage;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
- (void)audioStream:(id)arg1 statusChangedFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)handleInvalidationInStream:(id)arg1;
- (double)downloadProgressForSong:(id)arg1;
- (double)durationOfSong:(id)arg1;
- (double)timeElapsedInSong:(id)arg1;
- (void)stopAndClearStreams;
- (void)videoEnded:(id)arg1;
- (void)videoHandlerEnded:(id)arg1;
- (void)videoEndedBuffering:(id)arg1;
- (void)videoHandlerEndedBuffering:(id)arg1;
- (void)videoBeganBuffering:(id)arg1;
- (void)videoHandlerBeganBuffering:(id)arg1;
@property(readonly, nonatomic) _Bool isBuffering;
- (void)togglePlayPause;
- (void)_pauseFromInterruption:(_Bool)arg1 fromSleep:(_Bool)arg2 connectionFailure:(_Bool)arg3 bypassAudioAdCheck:(_Bool)arg4;
- (void)_pauseFromInterruption:(_Bool)arg1 connectionFailure:(_Bool)arg2 bypassAudioAdCheck:(_Bool)arg3;
- (void)pauseFromInterruption:(_Bool)arg1 connectionFailure:(_Bool)arg2 bypassAudioAdCheck:(_Bool)arg3;
- (void)pause;
- (void)crossfadeIntoNextSong;
- (void)audioStreamEnded:(id)arg1;
- (void)moveToNextSongOnEnd;
- (_Bool)isOnlineProhibitedForRecPlayQueue;
- (_Bool)isOfflineProhibited;
- (_Bool)performOfflineAndFreeCheck;
- (void)audioStream:(id)arg1 willEndIn:(double)arg2;
- (void)adEnded;
- (void)audioStream:(id)arg1 acquiredNewSongFromServer:(id)arg2 oldSong:(id)arg3;
- (void)audioStream:(id)arg1 positionChanged:(double)arg2;
- (void)resumeMixerWithRestart:(_Bool)arg1;
- (void)resumeMixer;
- (void)pauseMixer;
- (void)wakeUp;
- (void)goToSleep;
- (void)maybeUnplugForSleep:(id)arg1 pluggedInStreams:(id)arg2;
- (void)destroyVideoHandler;
- (_Bool)shouldCrossfadeIntoNextSong;
- (void)refreshStreams;
- (_Bool)shouldSwitchVideoModeOff;
- (void)videoLoadSuccessful:(id)arg1;
- (void)videoHandlerLoadSuccessful:(id)arg1;
- (void)failedToLoadVideo:(id)arg1;
- (void)failedToLoadVideoHandler:(id)arg1;
- (void)cleanTempCache;
- (void)kickEngineInShins;
- (id)playingStream;
- (_Bool)isCurrentDeviceRemote;
- (void)periodicTimeCheck;
- (void)saveStateForVideo;
- (void)saveStateForStream:(id)arg1;
- (void)showPlayDownloadsNotification;
- (void)showNoInternetNotification;
- (void)reportStopPlayQueue;
- (void)_play:(_Bool)arg1;
- (void)play:(_Bool)arg1;
- (void)maybeResetMixer;
- (_Bool)initializeAudioSession;
@property(readonly, nonatomic) id <ANGVideoPlayerProvider> videoPlayerProvider;
- (_Bool)isRestrictedInBackground;
- (_Bool)shouldRestrictInBackground;
- (void)sendSODProgress;
- (void)playQueueChanged:(id)arg1;
- (void)handleAudioRouteChange:(id)arg1;
- (void)breakInterruptionSource:(id)arg1;
- (void)handleInterruptionEnded;
- (void)handleInterruptionBegan;
- (void)handleInterruption:(id)arg1;
- (void)didGoOnline;
- (_Bool)initializeBass;
- (void)connectionStateDidChange;
- (void)didMoveToBackground;
- (id)engineMusicVideoHandler;
- (void)didBecomeActive;
@property(readonly, nonatomic) NSNumber *lookaheadSeconds;
- (void)_enforceRestrictInBackground;
- (void)enforceRestrictInBackground;
- (void)startMonitoringLockScreen;
- (void)startCastController;
- (void)pauseDueToLowVolume:(id)arg1;
- (void)onVolumeChanged:(float)arg1;
- (void)volumeChanged:(id)arg1;
- (id)loadAudioStreamSavedState;
- (id)init;
@property(readonly, nonatomic) _Bool isTopPriority;
- (void)postEnableSetup;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

