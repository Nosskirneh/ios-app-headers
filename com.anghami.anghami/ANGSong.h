//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "RLMObject.h"

#import "ActionableItem-Protocol.h"
#import "NSCoding-Protocol.h"
#import "NSCopying-Protocol.h"

@class ANGContentSectionContainer, ANGImageDownloadSpec, NSDate, NSDictionary, NSNumber, NSString;
@protocol RLMDouble, RLMInt;

@interface ANGSong : RLMObject <ActionableItem, NSCopying, NSCoding>
{
    _Bool _displayAsVideo;
    _Bool _hasExpressionButton;
    _Bool _hasDurationObserver;
    _Bool _discardArtist;
    _Bool _isExplicit;
    _Bool _isSingle;
    _Bool _isExclusive;
    _Bool _isOriginal;
    _Bool _storedHasLyrics;
    _Bool _isSponsored;
    _Bool _clearDetails;
    _Bool _bgPlayerDidPlayVideo;
    _Bool _hasPlayerVideo;
    _Bool _isDisabled;
    _Bool _local;
    _Bool _isReligious;
    _Bool _noUserVideo;
    _Bool _youtubeOnly;
    _Bool _isExclusiveVideo;
    _Bool _isSponsoredVideo;
    _Bool _videoOnly;
    _Bool _allowAudioDownload;
    _Bool _cachedAsVideo;
    _Bool _receivedSongInfo;
    _Bool _openView;
    _Bool _playOnOpenView;
    _Bool _discardAds;
    _Bool _disablePlayerRestrictions;
    int _rankChange;
    NSString *_title;
    NSString *_songId;
    NSString *_artistId;
    NSString *_artistName;
    NSString *_artistArtId;
    NSString *_debugURLData;
    NSString *_albumId;
    NSString *_albumName;
    NSString *_genre;
    NSString *_dropimage;
    NSString *_coverArtId;
    NSString *_genericId;
    NSNumber<RLMDouble> *_duration;
    NSNumber<RLMInt> *_storedBitrate;
    NSNumber<RLMInt> *_track;
    NSNumber<RLMInt> *_size;
    NSString *_sharedById;
    NSNumber<RLMInt> *_likes;
    NSString *_dominantColor;
    NSString *_details;
    long long _numberOfPlays;
    NSString *_extraButtonText;
    NSString *_extraButtonUrl;
    NSString *_extras;
    NSString *_noDownloadMessage;
    NSString *_keywords;
    NSString *_customButtonBackgroundColor;
    NSString *_customButtonTextColor;
    NSString *_customButtonIcon;
    NSString *_customButtonText;
    NSString *_customButtonLink;
    NSString *_contextSheetButtonIcon;
    NSString *_contextSheetButtonText;
    NSString *_contextSheetButtonLink;
    NSString *_disableDeeplinkString;
    NSString *_serverSignature;
    NSString *_videoId;
    NSString *_thumbnailId;
    NSNumber<RLMDouble> *_videoDuration;
    NSString *_youtubeUrl;
    ANGContentSectionContainer *_cachedSectionsContainer;
    NSString *_switchedSongId;
    NSString *_supertitle;
    NSString *_superTitleColor;
    NSDate *_releaseTimeStamp;
    NSString *_localAdTagParams;
    NSString *_localGetDownloadHeaders;
}

+ (id)loggableSongIds:(id)arg1;
+ (id)qualityStringForQuality:(id)arg1;
+ (void)setupRBTCodesCache;
+ (id)songFromDbResult:(id)arg1;
+ (long long)compareTrackNumber:(id)arg1 to:(id)arg2;
+ (id)sortedListOfSongs:(id)arg1;
+ (void)updateStarredSongIds;
+ (void)setupLikesCache;
@property(copy) NSString *localGetDownloadHeaders; // @synthesize localGetDownloadHeaders=_localGetDownloadHeaders;
@property(copy) NSString *localAdTagParams; // @synthesize localAdTagParams=_localAdTagParams;
@property(retain) NSDate *releaseTimeStamp; // @synthesize releaseTimeStamp=_releaseTimeStamp;
@property(nonatomic) _Bool disablePlayerRestrictions; // @synthesize disablePlayerRestrictions=_disablePlayerRestrictions;
@property(nonatomic) _Bool discardAds; // @synthesize discardAds=_discardAds;
@property(readonly, nonatomic) NSString *superTitleColor; // @synthesize superTitleColor=_superTitleColor;
@property(readonly, nonatomic) NSString *supertitle; // @synthesize supertitle=_supertitle;
@property(readonly, nonatomic) _Bool playOnOpenView; // @synthesize playOnOpenView=_playOnOpenView;
@property(readonly, nonatomic) _Bool openView; // @synthesize openView=_openView;
@property(readonly, nonatomic) NSString *switchedSongId; // @synthesize switchedSongId=_switchedSongId;
@property(readonly, nonatomic) _Bool receivedSongInfo; // @synthesize receivedSongInfo=_receivedSongInfo;
@property(readonly, nonatomic) ANGContentSectionContainer *cachedSectionsContainer; // @synthesize cachedSectionsContainer=_cachedSectionsContainer;
@property(readonly, nonatomic) _Bool cachedAsVideo; // @synthesize cachedAsVideo=_cachedAsVideo;
@property _Bool allowAudioDownload; // @synthesize allowAudioDownload=_allowAudioDownload;
@property _Bool videoOnly; // @synthesize videoOnly=_videoOnly;
@property _Bool isSponsoredVideo; // @synthesize isSponsoredVideo=_isSponsoredVideo;
@property _Bool isExclusiveVideo; // @synthesize isExclusiveVideo=_isExclusiveVideo;
@property(retain) NSString *youtubeUrl; // @synthesize youtubeUrl=_youtubeUrl;
@property _Bool youtubeOnly; // @synthesize youtubeOnly=_youtubeOnly;
@property(retain) NSNumber<RLMDouble> *videoDuration; // @synthesize videoDuration=_videoDuration;
@property(retain) NSString *thumbnailId; // @synthesize thumbnailId=_thumbnailId;
@property(retain) NSString *videoId; // @synthesize videoId=_videoId;
@property _Bool noUserVideo; // @synthesize noUserVideo=_noUserVideo;
@property(retain) NSString *serverSignature; // @synthesize serverSignature=_serverSignature;
@property(nonatomic) _Bool isReligious; // @synthesize isReligious=_isReligious;
@property(retain, nonatomic) NSString *disableDeeplinkString; // @synthesize disableDeeplinkString=_disableDeeplinkString;
@property _Bool local; // @synthesize local=_local;
@property(nonatomic) _Bool isDisabled; // @synthesize isDisabled=_isDisabled;
@property(retain, nonatomic) NSString *contextSheetButtonLink; // @synthesize contextSheetButtonLink=_contextSheetButtonLink;
@property(retain, nonatomic) NSString *contextSheetButtonText; // @synthesize contextSheetButtonText=_contextSheetButtonText;
@property(retain, nonatomic) NSString *contextSheetButtonIcon; // @synthesize contextSheetButtonIcon=_contextSheetButtonIcon;
@property(retain, nonatomic) NSString *customButtonLink; // @synthesize customButtonLink=_customButtonLink;
@property(retain, nonatomic) NSString *customButtonText; // @synthesize customButtonText=_customButtonText;
@property(retain, nonatomic) NSString *customButtonIcon; // @synthesize customButtonIcon=_customButtonIcon;
@property(retain, nonatomic) NSString *customButtonTextColor; // @synthesize customButtonTextColor=_customButtonTextColor;
@property(retain, nonatomic) NSString *customButtonBackgroundColor; // @synthesize customButtonBackgroundColor=_customButtonBackgroundColor;
@property(retain) NSString *keywords; // @synthesize keywords=_keywords;
@property(retain) NSString *noDownloadMessage; // @synthesize noDownloadMessage=_noDownloadMessage;
@property(retain) NSString *extras; // @synthesize extras=_extras;
@property _Bool hasPlayerVideo; // @synthesize hasPlayerVideo=_hasPlayerVideo;
@property _Bool bgPlayerDidPlayVideo; // @synthesize bgPlayerDidPlayVideo=_bgPlayerDidPlayVideo;
@property(retain) NSString *extraButtonUrl; // @synthesize extraButtonUrl=_extraButtonUrl;
@property(retain) NSString *extraButtonText; // @synthesize extraButtonText=_extraButtonText;
@property _Bool clearDetails; // @synthesize clearDetails=_clearDetails;
@property _Bool isSponsored; // @synthesize isSponsored=_isSponsored;
@property _Bool storedHasLyrics; // @synthesize storedHasLyrics=_storedHasLyrics;
@property _Bool isOriginal; // @synthesize isOriginal=_isOriginal;
@property _Bool isExclusive; // @synthesize isExclusive=_isExclusive;
@property _Bool isSingle; // @synthesize isSingle=_isSingle;
@property _Bool isExplicit; // @synthesize isExplicit=_isExplicit;
@property long long numberOfPlays; // @synthesize numberOfPlays=_numberOfPlays;
@property int rankChange; // @synthesize rankChange=_rankChange;
@property(retain) NSString *details; // @synthesize details=_details;
@property(retain) NSString *dominantColor; // @synthesize dominantColor=_dominantColor;
@property(retain) NSNumber<RLMInt> *likes; // @synthesize likes=_likes;
@property(retain) NSString *sharedById; // @synthesize sharedById=_sharedById;
@property(retain) NSNumber<RLMInt> *size; // @synthesize size=_size;
@property(retain) NSNumber<RLMInt> *track; // @synthesize track=_track;
@property(retain) NSNumber<RLMInt> *storedBitrate; // @synthesize storedBitrate=_storedBitrate;
@property(retain) NSNumber<RLMDouble> *duration; // @synthesize duration=_duration;
@property(retain) NSString *genericId; // @synthesize genericId=_genericId;
@property(retain) NSString *coverArtId; // @synthesize coverArtId=_coverArtId;
@property(retain) NSString *dropimage; // @synthesize dropimage=_dropimage;
@property(retain) NSString *genre; // @synthesize genre=_genre;
@property(retain) NSString *albumName; // @synthesize albumName=_albumName;
@property(retain) NSString *albumId; // @synthesize albumId=_albumId;
@property(retain) NSString *debugURLData; // @synthesize debugURLData=_debugURLData;
@property(retain) NSString *artistArtId; // @synthesize artistArtId=_artistArtId;
@property _Bool discardArtist; // @synthesize discardArtist=_discardArtist;
@property(retain) NSString *artistName; // @synthesize artistName=_artistName;
@property(retain) NSString *artistId; // @synthesize artistId=_artistId;
@property(retain) NSString *songId; // @synthesize songId=_songId;
@property(retain) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (_Bool)isTemporarilyDisabled;
@property(readonly) NSDictionary *getDownloadHeaders;
@property(readonly) NSDictionary *adTagParams;
- (_Bool)shouldShowExclusiveView;
- (_Bool)isNotPlayable;
- (void)markForOpenView;
- (void)markAsHasLyrics;
- (void)markForDisplayAsVideo;
- (id)cachedAsVideoCopy;
- (void)updateCachedSectionsContainer:(id)arg1;
- (void)updateWithSongInfo:(id)arg1;
- (void)markAsReceivedObjectInfo;
@property(readonly, nonatomic) _Bool displayAsVideo;
@property(readonly, nonatomic) _Bool isVideo;
@property(readonly, nonatomic) _Bool isVideoOnly;
@property(readonly, nonatomic) unsigned long long bitrate;
@property(readonly, nonatomic) NSDictionary *adjustProperties;
@property(readonly, nonatomic) _Bool canDisplayLyrics;
@property(readonly, nonatomic) _Bool hasLyrics;
- (_Bool)hasCachedLyrics;
@property(readonly, nonatomic) _Bool isOfflineRecommended;
@property(retain) NSString *RBTCode;
- (id)songCoverDownloadSpecs;
- (_Bool)songMatchesTerm:(id)arg1;
- (id)videoAdMessage;
- (id)adId;
- (id)imageDownloadSpecWithSize:(long long)arg1;
@property(readonly, nonatomic) ANGImageDownloadSpec *contextSheetButtonIconSpec;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToSong:(id)arg1;
- (_Bool)allFieldsEqualToSong:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)checkForSwitchedSongId;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSString *releaseDate;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDbResult:(id)arg1;
- (void)fillFromSong:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)dictionary;
@property(readonly, nonatomic) _Bool isAllowedOffline;
@property(readonly, nonatomic) _Bool hasExpressionButton;
- (id)initWithStandardizedAttributeDict:(id)arg1;
- (id)initWithAttributeDict:(id)arg1 videoReleaseDate:(_Bool)arg2;
- (id)initWithAttributeDict:(id)arg1;
- (id)stringFromSongDate:(id)arg1;
- (id)parseSongDateString:(id)arg1;
- (void)dealloc;
- (void)durationUpdated:(id)arg1;
- (void)addDurationObserver;
- (id)initWithTBXMLElement:(struct _TBXMLElement *)arg1;
- (struct _NSRange)getRangeToShare;
- (void)setRangeToShare:(struct _NSRange)arg1;
- (id)getAudioFileLocation;
- (void)setAudioFileLocation:(id)arg1;
- (id)getSongSharer;
- (void)setSongSharer:(id)arg1;
- (void)requestPlaysAndLikes;
- (void)removeFromCacheQueue;
- (_Bool)addToCacheQueue;
- (void)addSongToMyStory;
- (void)displayLyrics;
- (_Bool)isCurrentlyPlaying;
- (id)peekPopActions;
- (void)reportBadSongChoiceRadio;
- (_Bool)radioEnabled;
- (_Bool)supportsRBT;
- (void)showViewController:(id)arg1 inNavController:(id)arg2;
- (void)goToArtistWithNavigationController:(id)arg1;
- (_Bool)goToArtistDisabled;
- (void)goToAlbumWithNavigationController:(id)arg1;
- (_Bool)goToAlbumDisabled;
- (void)shareWithSource:(id)arg1 andIsVideo:(_Bool)arg2;
- (void)shareWithSource:(id)arg1;
- (void)playNow;
- (void)playNext;
- (void)addToPlaylist;
- (void)removeFromDownloads;
- (_Bool)downloadSource:(id)arg1;
- (_Bool)download;
- (_Bool)isDownloaded;
- (unsigned long long)downloadStatus;
- (void)addToLikes;
- (void)removeFromLikes;
- (void)unlike;
- (void)likeFrom:(id)arg1 disableReporting:(_Bool)arg2;
- (void)like;
- (_Bool)isLiked;
- (id)subtitleText;
- (id)titleText;
- (void)loadData:(CDUnknownBlockType)arg1;
- (_Bool)isSongPlaying;
- (id)playWithConfiguration:(id)arg1;
- (void)playRadio;
- (void)getDominantColorCallback:(CDUnknownBlockType)arg1;
- (id)extractDominantColorFrom:(id)arg1;
- (id)cellSubtitleAllowingPlays:(_Bool)arg1;
- (id)cellSubtitle;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

