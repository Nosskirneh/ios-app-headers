//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIResponder.h>

#import "AppsFlyerTrackerDelegate-Protocol.h"
#import "GCKLoggerDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"
#import "UIApplicationDelegate-Protocol.h"
#import "UNUserNotificationCenterDelegate-Protocol.h"
#import "WCSessionDelegate-Protocol.h"

@class BrowseVC, ConnectionErrorView, HomeVC, MPVolumeView, MyLibraryVC, NSArray, NSDictionary, NSString, NSURL, PlayerVC, Reachability, SaavnNC, SaavnTC, SearchVC, UIImageView, UISlider, UIStoryboard, UIView, UIWindow, iPadContainer;

@interface AppDelegate : UIResponder <GCKLoggerDelegate, WCSessionDelegate, UNUserNotificationCenterDelegate, AppsFlyerTrackerDelegate, UIApplicationDelegate, UIAlertViewDelegate>
{
    _Bool loggedIn;
    _Bool fbLogin;
    _Bool pendingForegroundEvent;
    NSString *_loggedInUsername;
    NSString *displayName;
    NSString *geo;
    _Bool firstTimeTrialOrPro;
    float notificationTimeout;
    unsigned long long backgroundTaskId;
    _Bool overrideRegisterPushNotification;
    NSDictionary *payload;
    NSURL *openUrl;
    NSString *carrier;
    NSString *dataPlan;
    NSArray *fb_permissions;
    NSString *deeplinkType;
    NSString *utmParams;
    NSString *deeplinkTopSrc;
    NSString *deeplinkTopSrcId;
    NSString *deeplinkTopSrcType;
    NSString *enhancedDeepLinkModalType;
    UIImageView *MPContainer;
    MPVolumeView *volumeView;
    UISlider *volumeSlider;
    PlayerVC *iPadPlayer;
    HomeVC *iPadHome;
    _Bool didHandleNotificationOnAppLaunch;
    NSURL *ipadDeeplinkDelayedHandling;
    NSURL *ipadPermaUrlDelayedHandling;
    UIStoryboard *storyboard;
    SaavnNC *homeNC;
    SaavnNC *searchNC;
    SaavnNC *playerNC;
    SaavnNC *browseNC;
    SaavnNC *myLibraryNC;
    HomeVC *homeVC;
    SearchVC *searchVC;
    PlayerVC *playerVC;
    BrowseVC *browseVC;
    MyLibraryVC *myLibraryVC;
    UIImageView *launchScreen;
    UIImageView *launchLogo;
    ConnectionErrorView *connectionErrorScreen;
    _Bool forceWatchUpdate;
    _Bool appEnteredForegroundAtleastOnce;
    _Bool _blockRefresh;
    _Bool _showProBenefitPromptForNewUser;
    _Bool _showProBenefitPrompt;
    _Bool _allowRotation;
    int _proBenefitFrequencyPerDay;
    SaavnTC *tabBarController;
    iPadContainer *iPadView;
    UIView *iPadStatusFill;
    UIWindow *_window;
    Reachability *_internetReach;
    UIView *_iPadPlayerContainerBevel;
    NSString *_splashGroup;
    NSString *_proGroup;
    NSString *_loginWallType;
    CDUnknownBlockType _shortcutHandler;
    CDUnknownBlockType _deeplinkHandler;
    CDUnknownBlockType _deeplinkHandlerAfterLaunch;
    CDUnknownBlockType _searchVCHandler;
}

@property(copy, nonatomic) CDUnknownBlockType searchVCHandler; // @synthesize searchVCHandler=_searchVCHandler;
@property(copy, nonatomic) CDUnknownBlockType deeplinkHandlerAfterLaunch; // @synthesize deeplinkHandlerAfterLaunch=_deeplinkHandlerAfterLaunch;
@property(copy, nonatomic) CDUnknownBlockType deeplinkHandler; // @synthesize deeplinkHandler=_deeplinkHandler;
@property(copy, nonatomic) CDUnknownBlockType shortcutHandler; // @synthesize shortcutHandler=_shortcutHandler;
@property(nonatomic) _Bool allowRotation; // @synthesize allowRotation=_allowRotation;
@property(retain, nonatomic) NSString *loginWallType; // @synthesize loginWallType=_loginWallType;
@property(retain, nonatomic) NSString *proGroup; // @synthesize proGroup=_proGroup;
@property(retain, nonatomic) NSString *splashGroup; // @synthesize splashGroup=_splashGroup;
@property(retain, nonatomic) UIView *iPadPlayerContainerBevel; // @synthesize iPadPlayerContainerBevel=_iPadPlayerContainerBevel;
@property(nonatomic) _Bool showProBenefitPrompt; // @synthesize showProBenefitPrompt=_showProBenefitPrompt;
@property(nonatomic) _Bool showProBenefitPromptForNewUser; // @synthesize showProBenefitPromptForNewUser=_showProBenefitPromptForNewUser;
@property(nonatomic) _Bool blockRefresh; // @synthesize blockRefresh=_blockRefresh;
@property(nonatomic) int proBenefitFrequencyPerDay; // @synthesize proBenefitFrequencyPerDay=_proBenefitFrequencyPerDay;
@property(retain, nonatomic) Reachability *internetReach; // @synthesize internetReach=_internetReach;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) UIView *iPadStatusFill; // @synthesize iPadStatusFill;
@property(retain, nonatomic) iPadContainer *iPadView; // @synthesize iPadView;
@property(retain, nonatomic) SaavnTC *tabBarController; // @synthesize tabBarController;
@property(nonatomic) _Bool appEnteredForegroundAtleastOnce; // @synthesize appEnteredForegroundAtleastOnce;
@property(retain, nonatomic) UIImageView *MPContainer; // @synthesize MPContainer;
@property(retain, nonatomic) NSString *geo; // @synthesize geo;
@property(retain, nonatomic) NSString *dataPlan; // @synthesize dataPlan;
@property(retain, nonatomic) NSString *carrier; // @synthesize carrier;
@property(retain, nonatomic) NSDictionary *payload; // @synthesize payload;
@property(retain, nonatomic) NSURL *openUrl; // @synthesize openUrl;
@property(nonatomic) float notificationTimeout; // @synthesize notificationTimeout;
@property(nonatomic) _Bool forceWatchUpdate; // @synthesize forceWatchUpdate;
@property(nonatomic) _Bool pendingForegroundEvent; // @synthesize pendingForegroundEvent;
@property(nonatomic) _Bool overrideRegisterPushNotification; // @synthesize overrideRegisterPushNotification;
- (void).cxx_destruct;
- (id)getBrowseViewController;
- (id)getMyMusicViewController;
- (id)getSearchViewController;
- (id)getHomeViewController;
- (id)getPlayerViewController;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (void)onAppOpenAttributionFailure:(id)arg1;
- (void)onAppOpenAttribution:(id)arg1;
- (void)userNotificationCenter:(id)arg1 didReceiveNotificationResponse:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)userNotificationCenter:(id)arg1 willPresentNotification:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (id)fetchSongObjectPids;
- (void)sendImageDataToWatch:(id)arg1 storeAtURL:(id)arg2 metaData:(id)arg3;
- (void)fetchWeeklyTop15Image:(id)arg1 forceFetch:(_Bool)arg2;
- (void)session:(id)arg1 didReceiveMessage:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)session:(id)arg1 didReceiveMessage:(id)arg2;
- (void)session:(id)arg1 activationDidCompleteWithState:(long long)arg2 error:(id)arg3;
- (void)session:(id)arg1 didReceiveMessageData:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)session:(id)arg1 didFinishUserInfoTransfer:(id)arg2 error:(id)arg3;
- (void)sendRadioInfo;
- (void)sendWeeklyTop15Info:(id)arg1;
- (void)updateWeeklyTop15Info:(id)arg1;
- (void)sendVolumeInfo;
- (void)updateWatchInfo;
- (void)prepareForWatchApp;
- (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)processPendingSearchCallbacks;
- (void)clearPendingCallbacks;
- (_Bool)didAppEnteredForegroundAtleastOnce;
- (void)processPendingCallbacks;
- (void)debugLogLaunchTime;
- (void)proBookkeepingOnLaunch;
- (void)logFromFunction:(const char *)arg1 message:(id)arg2;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (_Bool)consumePendingForegroundEvent;
- (void)applicationWillEnterForeground:(id)arg1;
- (id)parseURLParams:(id)arg1;
- (_Bool)openUniversalLinks:(id)arg1;
- (_Bool)OpenExternalURL:(id)arg1;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)statSuccess:(id)arg1;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)playerChangeSongObjectsFailure;
- (void)playerChangeSongObjectsSuccess:(id)arg1;
- (void)repaintPlayerQueueOnUpdate;
- (void)fetchSongObjectSuccess:(id)arg1;
- (void)updateDBOnUpdate;
- (_Bool)isIpadDeepLinkPending;
- (void)checkForiPADPermaUrl;
- (void)checkForiPADdeepLink;
- (void)getDeepLinkFailed:(id)arg1;
- (void)getDeepLinkSuccess:(id)arg1;
- (_Bool)convertPermaUrlToDeepLink:(id)arg1;
- (_Bool)handlePermaUrl:(id)arg1;
- (_Bool)handleDeepLinkUrl:(id)arg1;
- (id)extractUTMInfo:(id)arg1;
- (id)extractTopSrcInfo:(id)arg1;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)retryDefaultConfigOnError:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)clearConnectionAlert;
- (void)displayConnectionAlert;
- (void)displayErrorMessage;
- (void)throwConnectionError:(int)arg1;
- (void)setMPDetails:(id)arg1 withArt:(_Bool)arg2;
- (void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)updateVolume:(float)arg1;
- (void)keyboardChanged:(id)arg1;
- (void)screenshotDetected:(id)arg1;
- (void)keyStoreChanged:(id)arg1;
- (void)removeGlobalListeners;
- (void)addGlobalListeners;
- (id)getPlayerVC;
- (id)getRootNC:(int)arg1;
- (id)getRootVC:(int)arg1;
- (void)dismissLaunchScreen;
- (void)initLaunchScreen;
- (void)initiPadContainer;
- (void)initRootVCs;
- (void)setDisplayDefaults;
- (void)iAdsSetup;
- (void)initTrackingSDKs;
- (void)checkFBLogin;
- (void)prepareApplication:(id)arg1 forPushNotifications:(id)arg2;
- (void)checkUpdateScenarios;
- (void)initCleverTap;
- (void)initCrashlytics;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

