//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MyLibraryManager, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, UIViewController;
@protocol OS_dispatch_queue;

@interface UserPlaylistManager : NSObject
{
    NSObject<OS_dispatch_queue> *backgroundQueue;
    NSMutableArray *pendingPlaylistSongs;
    NSDictionary *pendingPlaylistData;
    int userPlaylistOperation;
    UIViewController *vcToSaveFrom;
    long long songsAddedFromHistory;
    long long songsAddedFromSearch;
    NSMutableDictionary *userMyMusic;
    NSMutableSet *starredSongs;
    NSMutableArray *allPlaylists;
    MyLibraryManager *_libManager;
}

+ (id)getSingleton;
+ (id)theLock;
@property(retain, nonatomic) MyLibraryManager *libManager; // @synthesize libManager=_libManager;
@property(retain, nonatomic) NSMutableArray *allPlaylists; // @synthesize allPlaylists;
@property(retain) NSMutableSet *starredSongs; // @synthesize starredSongs;
@property(retain) NSMutableDictionary *userMyMusic; // @synthesize userMyMusic;
- (void).cxx_destruct;
- (void)updateFollowingCount:(int)arg1;
- (unsigned long long)getFollowingCount;
- (unsigned long long)getFollowerCount;
- (unsigned long long)getPlaylistCount;
- (void)saveError:(id)arg1;
- (void)saveResponse:(id)arg1 asNewList:(_Bool)arg2 forStarredPlaylist:(_Bool)arg3;
- (void)savePlaylistFromVC:(id)arg1;
- (id)getPlaylistString;
- (_Bool)invalidPlaylistName:(id)arg1;
- (void)flushPendingSongs;
- (id)getPendingPlaylistSongIds;
- (unsigned long long)findTotalSongsAdded;
- (void)removeSong:(id)arg1 isFromListeningHistory:(_Bool)arg2;
- (void)addSong:(id)arg1 isFromListeningHistory:(_Bool)arg2;
- (void)initPlaylistParams:(id)arg1 withOperation:(int)arg2;
- (_Bool)isStarredList:(id)arg1;
- (_Bool)isUserPlaylist:(id)arg1;
- (_Bool)userPlaylistExistsWithName:(id)arg1;
- (void)deletePlaylistFromDB:(id)arg1;
- (void)playlistDeleteError;
- (void)playlistDeleteResponse:(id)arg1 withId:(id)arg2;
- (void)deletePlaylistCall:(id)arg1;
- (void)deletePlaylist:(id)arg1;
- (void)togglePrivacy:(id)arg1;
- (void)songRemoveFromStarred:(id)arg1;
- (void)songAddToStarred:(id)arg1 withSong:(id)arg2;
- (void)playlistRemoveSong:(id)arg1;
- (void)addPlaylist:(id)arg1 withSongs:(id)arg2;
- (void)addPlaylist:(id)arg1;
- (void)clearMyMusic;
- (id)getUserOfflinePlaylists;
- (void)getUserOfflinePlaylistsWithCompletion:(CDUnknownBlockType)arg1;
- (void)numOfflineSongsInPlaylist:(id)arg1 WithCompletion:(CDUnknownBlockType)arg2;
- (id)getUserPlaylists;
- (id)getMyMusic;
- (id)getStarredSongs;
- (void)myLibraryUpdate:(id)arg1;
- (void)saveUserInfo:(id)arg1;
- (id)init;

@end

