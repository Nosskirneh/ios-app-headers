//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "RHPlaylistNavigationService-Protocol.h"
#import "RHProfileNavigationService-Protocol.h"

@class NSString, RHPermissionsController, RHSearchAllMainResultsViewModel, RHStackNavigationController, RHUpsellController, UIApplication, UINavigationController, UIViewController, _TtC7Napster12Dependencies, _TtC7Napster14DataController;
@protocol RHMemberAccessRights, RHRootNavigationService;

@interface RHNavigationService : NSObject <RHProfileNavigationService, RHPlaylistNavigationService>
{
}

- (void)presentSharePlaylistScreenWithPlaylistId:(id)arg1 sourceView:(id)arg2;
- (void)pushEditPlaylistMetadataWithPlaylistID:(id)arg1 andPlaylistName:(id)arg2 andTrackIds:(id)arg3 isPublic:(_Bool)arg4 metricsSource:(id)arg5;
- (void)pushCreateNewPlaylistScreenWithPlaylistName:(id)arg1 trackIds:(id)arg2 onPlaylistSave:(CDUnknownBlockType)arg3 metricsSource:(id)arg4;
- (void)pushCreateNewPlaylistScreenWithMetricsSource:(id)arg1;
- (void)showTuneAdvertisment:(long long)arg1;
- (void)pushEqualizerFrom:(id)arg1;
- (void)showReviewsForAlbum:(id)arg1;
@property(readonly, nonatomic) _TtC7Napster12Dependencies *dependencies;
@property(readonly, nonatomic) id <RHMemberAccessRights> memberAccessRights;
@property(readonly, nonatomic) _TtC7Napster14DataController *dataController;
- (id)appDelegate;
@property(readonly, nonatomic) NSString *topViewMetricsScreenName;
- (id)displaySortingPickerWithSelectedSorting:(long long)arg1 sortingOptions:(id)arg2;
- (void)showDefaultUpsellFlowView;
- (void)presentImmediateUpgradeView;
- (void)showUnnamedUserUpdateAccountView;
- (void)pushFollowedPlaylistsForMember:(id)arg1 metricsSource:(id)arg2;
- (void)pushPublicPlaylistsForMember:(id)arg1 metricsSource:(id)arg2;
- (void)pushManagePlaylistsPrivacyScreen;
- (void)presentWhatsNewViewScreen;
- (id)showEditCurrentProfile;
- (void)presentPersonalizedOnboardingViewControllerWithDeeplink:(id)arg1;
- (void)pushViewControllerForDeepLink:(id)arg1 useActiveNavigationController:(_Bool)arg2 metricsSource:(id)arg3;
- (void)navigateToDeepLink:(id)arg1 useActiveNavigationController:(_Bool)arg2 metricsSource:(id)arg3;
- (void)navigateToDeepLink:(id)arg1;
@property(readonly, nonatomic) RHUpsellController *upsellController;
@property(readonly, nonatomic) RHPermissionsController *permissionsController;
- (id)partnerReferalDataService;
- (id)timeService;
@property(readonly, nonatomic) RHSearchAllMainResultsViewModel *searchViewModel;
@property(readonly, nonatomic) UIApplication *application;
- (id)accountController;
@property(readonly, nonatomic) RHStackNavigationController *stackNavigationController;
- (id)topPresentedViewController;
@property(readonly, nonatomic) UIViewController *presentedViewController;
@property(readonly, nonatomic) UINavigationController *presentedNavigationController;
@property(readonly, nonatomic) UINavigationController *navigationController;
@property(readonly, nonatomic) id <RHRootNavigationService> rootNavigationService;
- (id)iPhoneBaseViewController;
- (_Bool)canHandleScheme:(id)arg1;
- (void)pushViewController:(id)arg1 aboveViewController:(id)arg2;
- (void)pushViewController:(id)arg1 popToRoot:(_Bool)arg2;
- (void)presentViewController:(id)arg1 dismissCurrent:(_Bool)arg2 animated:(_Bool)arg3;
- (void)presentViewController:(id)arg1 dismissCurrent:(_Bool)arg2;
- (void)presentViewController:(id)arg1;
- (id)_pushMyTopChartsWithMetricsSource:(id)arg1;
- (id)_pushPopularWithMetricsSource:(id)arg1;
- (id)videoController;
- (id)moviePlayerViewControllerWithContentURL:(id)arg1;
- (void)showSignInSignUpView;
- (id)presentVideoForEditorial:(id)arg1;
- (void)showSearchWithQuery:(id)arg1;
- (void)showSearchView;
- (void)pushDownloading;
- (void)pushQueueWithMetricsSource:(id)arg1;
- (void)pushMyTopCharts:(unsigned long long)arg1 metricsSource:(id)arg2;
- (void)pushMyTopChartsWithMetricsSource:(id)arg1;
- (void)pushDownloadedTracksWithMetricsSource:(id)arg1;
- (void)pushLibraryTracks;
- (void)pushDownloadedPlaylistsWithMetricsSource:(id)arg1;
- (void)pushLibraryPlaylistsWithMetricsSource:(id)arg1;
- (void)pushDownloadedFavoritesWithMetricsSource:(id)arg1;
- (void)pushLibraryFavoritesWithStartPlayback:(_Bool)arg1 metricsSource:(id)arg2;
- (void)pushStationsWithMetricsSource:(id)arg1;
- (void)pushCompletelyDownloadedAlbums;
- (void)pushDownloadedAlbums;
- (void)pushLibraryAlbumsWithMetricsSource:(id)arg1;
- (void)pushDownloadedArtistsWithMetricsSource:(id)arg1;
- (void)pushLibraryArtistsWithMetricsSource:(id)arg1;
- (void)pushSearchWithReusedResults:(_Bool)arg1 metricsSource:(id)arg2;
- (void)pushFindFriends;
- (void)pushFollowersForPlaylist:(id)arg1;
- (void)pushFriendsForProfile:(id)arg1 mode:(unsigned long long)arg2;
- (void)pushFriendsForProfile:(id)arg1;
- (void)pushNewReleaseSamplerWithStartPlayback:(_Bool)arg1 metricsSource:(id)arg2;
- (void)pushMultiplesPlaylistForViewModel:(id)arg1;
- (void)pushFollowingPlaylistForProfile:(id)arg1;
- (void)pushListenersPlaylistForProfile:(id)arg1;
- (void)pushCombinedPlaylistForProfile:(id)arg1;
- (void)pushListenersLikeMeForProfile:(id)arg1 metricsSource:(id)arg2;
- (void)pushRecommendedPlaylistForProfile:(id)arg1 metricsSource:(id)arg2;
- (void)showDeviceSettings;
- (void)showFullScreenPlayer;
- (void)showScreenForMode:(long long)arg1;
- (void)showDefaultModeHomeScreen;
- (void)showHistory;
- (void)pushAccountActivationViewWithContainer:(id)arg1;
- (void)pushAccountActivationView;
- (void)presentAutoLoginRenameView;
- (void)presentSprintMDNPrompt:(id)arg1;
- (void)pushDownloadedPlaylistViewWithPlaylist:(id)arg1 metricsSource:(id)arg2;
- (void)pushPlaylistViewWithPlaylist:(id)arg1 aboveViewController:(id)arg2 startPlaying:(_Bool)arg3 metricsSource:(id)arg4;
- (void)pushPlaylistViewWithPlaylist:(id)arg1 startPlaying:(_Bool)arg2 metricsSource:(id)arg3;
- (void)pushPlaylistViewWithPlaylist:(id)arg1 aboveViewController:(id)arg2 metricsSource:(id)arg3;
- (void)pushPlaylistViewWithPlaylist:(id)arg1 metricsSource:(id)arg2;
- (void)setTabBarHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setMiniPlayerHidden:(_Bool)arg1 animated:(_Bool)arg2 ignoreFurtherUpdates:(_Bool)arg3;
- (void)dismissAllAnimated:(_Bool)arg1;
- (void)closeAnimated:(_Bool)arg1;
- (void)goBackAnimated:(_Bool)arg1;
- (void)navigateToURL:(id)arg1;
- (void)showSettingsWithMetricsSource:(id)arg1;
- (void)pushProfile:(id)arg1 metricsSource:(id)arg2;
- (void)showLogin;
- (void)pushProfileFavorites:(id)arg1 metricsSource:(id)arg2;
- (void)pushStationsForGenre:(id)arg1 metricsSource:(id)arg2;
- (void)pushPopularForGenre:(id)arg1;
- (void)pushPopular:(long long)arg1 metricsSource:(id)arg2;
- (void)pushPopular;
- (void)pushNewReleasesForGenre:(id)arg1;
- (void)pushEditorialsForGenre:(id)arg1 metricsSource:(id)arg2;
- (void)pushEditorialsForGenre:(id)arg1 editorialType:(unsigned long long)arg2 showFilter:(_Bool)arg3 metricsSource:(id)arg4;
- (void)pushEditorialsForGenre:(id)arg1 editorialType:(unsigned long long)arg2 metricsSource:(id)arg3;
- (void)_pushEditorials:(id)arg1 metricsSource:(id)arg2;
- (void)pushEditorials;
- (void)pushEditorialViewWithEditorial:(id)arg1 metricsSource:(id)arg2;
- (void)pushAlbumViewWithAlbum:(id)arg1;
- (void)pushAlbumViewWithTrack:(id)arg1;
- (void)pushTagDetailForTag:(id)arg1 metricsSource:(id)arg2;
- (void)pushArtistViewWithArtist:(id)arg1;
- (void)showSignupInfoView;
- (void)pushPlaylistBuilderWithMode:(long long)arg1 guid:(id)arg2 playlistName:(id)arg3 isPlaylistPublic:(_Bool)arg4 trackIds:(id)arg5 images:(id)arg6 pushAfterLoadingScreen:(_Bool)arg7 metricsSource:(id)arg8;
- (void)pushPlaylistWithPlaylistId:(id)arg1 lastModified:(id)arg2 startPlaying:(_Bool)arg3 metricsSource:(id)arg4;
- (void)pushEditPlaylistMetadataWithGuid:(id)arg1 playlistName:(id)arg2 isPublic:(_Bool)arg3 metricsSource:(id)arg4;
- (void)pushEqalizerEarprintWithMetricsSource:(id)arg1;
- (void)presentEqalizerEarprintWithMetricsSource:(id)arg1;
- (void)pushListenersLikeMeForCurrentProfileWithMetricsSource:(id)arg1;
- (void)pushListeningHistoryAndPlayAllTracksWithMetricsSource:(id)arg1;
- (void)pushMyStationsWithMetricsSource:(id)arg1;
- (void)pushCreateStationWithMetricsSource:(id)arg1;
- (void)pushLibraryArtist:(id)arg1;
- (void)pushTagDetailWithGenreId:(id)arg1 metricsSource:(id)arg2;
- (void)pushArtistMyMusicContentWithArtist:(id)arg1 downloadedOnly:(_Bool)arg2;
- (void)reuseOrPushArtistMyMusicContentWithArtist:(id)arg1 downloadedOnly:(_Bool)arg2;
- (void)popFromEmptyBookmarksScreen;
- (void)pushBookmarksWithAlbum:(id)arg1;
- (void)pushBooksWithGenre:(id)arg1 onlyDownloaded:(_Bool)arg2 popToRoot:(_Bool)arg3 metricsSource:(id)arg4;
- (void)presentAlarmWithAlarmId:(id)arg1;
- (void)pushManageFamily;
- (void)pushAlarmsView;
- (void)presentActionSheet:(id)arg1;
- (void)pushLicenses;
- (void)pushAlbumsContainerWithMetricsSource:(id)arg1;
- (void)pushNewReleasesForYouWithMetricsSource:(id)arg1;
- (void)pushTabbedNewReleasesWithMetricsSource:(id)arg1;
- (void)pushNewReleasesWithMetricsSource:(id)arg1;
- (void)pushNewsFeed;

@end

