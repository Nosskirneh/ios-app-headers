//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "RHViewController.h"

#import "NSFetchedResultsControllerDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class NSArray, NSFetchedResultsController, NSMutableIndexSet, NSString, RHActionSheet, RHAlbumMO, RHAppDelegateRouter, RHArtistMO, RHBarButtonItem, RHDataController, RHDownloadsController, RHGenreMO, RHLayoutManagerView, RHLoadingOverlay, RHNavigationService, RHPlaylistMO, RHProfileMO, RHQueueDownloadLessor, RHSharingService, RHStackLayoutManager, UIButton, UILabel, UINib, UITableView, UIView, UIViewController, ZDSPromise, _TtC7Napster13AppboyService;
@protocol RHAlertPresenter;

@interface RHPlayableTableViewController : RHViewController <UITableViewDelegate, UITableViewDataSource, NSFetchedResultsControllerDelegate>
{
    _Bool _shouldReload;
    _Bool _shouldShowPlaybar;
    _Bool _alwaysShowTableWithHeader;
    _Bool _startAsShuffledPlaylist;
    _Bool _changeIsUserDriven;
    _Bool _fetchedResultsCountBeforeChange;
    _Bool _watchingNotifications;
    _Bool _forceDownloadedOnly;
    int _mode;
    NSFetchedResultsController *_fetchedResultsController;
    UITableView *_tableView;
    UIViewController *_viewHeaderViewController;
    UIViewController *_footerViewController;
    ZDSPromise *_loadingPromise;
    long long _maxCellsToDisplay;
    RHPlaylistMO *_playlist;
    RHProfileMO *_member;
    RHBarButtonItem *_clearAllBarButton;
    NSMutableIndexSet *_deletedSections;
    NSMutableIndexSet *_insertedSections;
    long long _trackHighlightScope;
    RHAlbumMO *_album;
    RHArtistMO *_artist;
    RHGenreMO *_genre;
    RHQueueDownloadLessor *_queue;
    RHActionSheet *_actionSheet;
    UIView *_defaultTableFooterView;
    UIView *_playBar;
    UILabel *_playBarTitleLabel;
    UIButton *_shuffleAllButton;
    UIButton *_downloadAllButton;
    NSArray *_separators;
    UIView *_headerContainerView;
    RHDownloadsController *_downloadsController;
    RHLayoutManagerView *_rightButtonsView;
    RHStackLayoutManager *_rightButtonsLayoutManager;
    RHStackLayoutManager *_playbarLayoutManager;
    UIView *_playShuffleContainer;
    UIButton *_plusAllButton;
    UIButton *_sharingButton;
    UIView *_noDataOverlay;
    RHLoadingOverlay *_loadingOverlay;
}

@property(nonatomic) __weak RHLoadingOverlay *loadingOverlay; // @synthesize loadingOverlay=_loadingOverlay;
@property(retain, nonatomic) UIView *noDataOverlay; // @synthesize noDataOverlay=_noDataOverlay;
@property(nonatomic) __weak UIButton *sharingButton; // @synthesize sharingButton=_sharingButton;
@property(nonatomic) __weak UIButton *plusAllButton; // @synthesize plusAllButton=_plusAllButton;
@property(nonatomic) __weak UIView *playShuffleContainer; // @synthesize playShuffleContainer=_playShuffleContainer;
@property(retain, nonatomic) RHStackLayoutManager *playbarLayoutManager; // @synthesize playbarLayoutManager=_playbarLayoutManager;
@property(retain, nonatomic) RHStackLayoutManager *rightButtonsLayoutManager; // @synthesize rightButtonsLayoutManager=_rightButtonsLayoutManager;
@property(nonatomic) __weak RHLayoutManagerView *rightButtonsView; // @synthesize rightButtonsView=_rightButtonsView;
@property(nonatomic) _Bool forceDownloadedOnly; // @synthesize forceDownloadedOnly=_forceDownloadedOnly;
@property(retain, nonatomic) RHDownloadsController *downloadsController; // @synthesize downloadsController=_downloadsController;
@property(retain, nonatomic) UIView *headerContainerView; // @synthesize headerContainerView=_headerContainerView;
@property(retain, nonatomic) NSArray *separators; // @synthesize separators=_separators;
@property(nonatomic) __weak UIButton *downloadAllButton; // @synthesize downloadAllButton=_downloadAllButton;
@property(nonatomic) __weak UIButton *shuffleAllButton; // @synthesize shuffleAllButton=_shuffleAllButton;
@property(nonatomic) __weak UILabel *playBarTitleLabel; // @synthesize playBarTitleLabel=_playBarTitleLabel;
@property(nonatomic) __weak UIView *playBar; // @synthesize playBar=_playBar;
@property(nonatomic) _Bool watchingNotifications; // @synthesize watchingNotifications=_watchingNotifications;
@property(retain, nonatomic) UIView *defaultTableFooterView; // @synthesize defaultTableFooterView=_defaultTableFooterView;
@property(nonatomic) __weak RHActionSheet *actionSheet; // @synthesize actionSheet=_actionSheet;
@property(retain, nonatomic) RHQueueDownloadLessor *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) RHGenreMO *genre; // @synthesize genre=_genre;
@property(retain, nonatomic) RHArtistMO *artist; // @synthesize artist=_artist;
@property(retain, nonatomic) RHAlbumMO *album; // @synthesize album=_album;
@property(nonatomic) _Bool fetchedResultsCountBeforeChange; // @synthesize fetchedResultsCountBeforeChange=_fetchedResultsCountBeforeChange;
@property(nonatomic) _Bool changeIsUserDriven; // @synthesize changeIsUserDriven=_changeIsUserDriven;
@property(nonatomic) long long trackHighlightScope; // @synthesize trackHighlightScope=_trackHighlightScope;
@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(retain, nonatomic) NSMutableIndexSet *insertedSections; // @synthesize insertedSections=_insertedSections;
@property(retain, nonatomic) NSMutableIndexSet *deletedSections; // @synthesize deletedSections=_deletedSections;
@property(nonatomic) _Bool startAsShuffledPlaylist; // @synthesize startAsShuffledPlaylist=_startAsShuffledPlaylist;
@property(retain, nonatomic) RHBarButtonItem *clearAllBarButton; // @synthesize clearAllBarButton=_clearAllBarButton;
@property(readonly, nonatomic) RHProfileMO *member; // @synthesize member=_member;
@property(retain, nonatomic) RHPlaylistMO *playlist; // @synthesize playlist=_playlist;
@property(nonatomic) _Bool alwaysShowTableWithHeader; // @synthesize alwaysShowTableWithHeader=_alwaysShowTableWithHeader;
@property(nonatomic) _Bool shouldShowPlaybar; // @synthesize shouldShowPlaybar=_shouldShowPlaybar;
@property(nonatomic) _Bool shouldReload; // @synthesize shouldReload=_shouldReload;
@property(nonatomic) long long maxCellsToDisplay; // @synthesize maxCellsToDisplay=_maxCellsToDisplay;
@property(retain, nonatomic) ZDSPromise *loadingPromise; // @synthesize loadingPromise=_loadingPromise;
@property(retain, nonatomic) UIViewController *footerViewController; // @synthesize footerViewController=_footerViewController;
@property(retain, nonatomic) UIViewController *viewHeaderViewController; // @synthesize viewHeaderViewController=_viewHeaderViewController;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSFetchedResultsController *fetchedResultsController; // @synthesize fetchedResultsController=_fetchedResultsController;
- (void).cxx_destruct;
- (id)playerController;
@property(readonly, nonatomic) RHNavigationService *navigationService;
- (id)reachabilityService;
@property(readonly, nonatomic) double cellHeight;
@property(readonly, nonatomic) UINib *cellNib;
- (id)metricsProperties;
- (id)metricsScreenName;
- (void)showDownloadQueueTooltipForQueue;
- (void)showDownloadQueueTooltipForPlaylist;
- (void)showDownloadQueueTooltipForAlbum;
- (void)showDownloadQueueTooltipForTracks:(id)arg1;
- (long long)numberOfObjectsAtSection:(long long)arg1;
- (id)tracksFromFetchedObjects;
- (_Bool)shouldSyncDownloadsAndFavorites;
- (id)noDataMessage;
- (void)removeNotificationHandlers;
- (void)installNotificationHandlers;
@property(readonly, nonatomic) _Bool shouldShowSectionHeaders;
- (_Bool)isDownloadedMode;
@property(readonly, nonatomic) RHSharingService *sharingService;
- (id)dependencies;
- (id)optionsActionSheet;
- (id)metricsController;
@property(readonly, nonatomic) _TtC7Napster13AppboyService *appboyService;
@property(readonly, nonatomic) RHDataController *dataController;
@property(readonly, nonatomic) id <RHAlertPresenter> alertPresenter;
@property(readonly, nonatomic) RHAppDelegateRouter *appDelegate;
- (void)handleNetworkStatusChangedNotification:(id)arg1;
- (void)flashCellAtIndexPath:(id)arg1;
- (_Bool)unHighlightCellAtIndexPath:(id)arg1;
- (_Bool)highlightCellAtIndexPath:(id)arg1;
- (void)scrollToTrack:(id)arg1;
- (id)trackForFetchedObject:(id)arg1;
- (void)showAlbumForTrack:(id)arg1;
- (void)removeTrackFromQueue:(id)arg1;
- (void)removeAlbumFromDownloads:(id)arg1;
- (void)removePlaylistFromDownloads:(id)arg1;
- (void)removeTrackFromDownloads:(id)arg1;
- (void)cancelDownloadLease:(id)arg1;
- (void)downloadFavoriteTrack:(id)arg1;
- (void)downloadTrack:(id)arg1;
- (void)removeItemFromPlaylist:(id)arg1;
- (void)removeTrackFromLibrary:(id)arg1;
- (void)addTrackToLibrary:(id)arg1;
- (void)dequeueTrack:(id)arg1;
- (void)queueTrack:(id)arg1;
- (void)updatePlaybar;
@property(readonly, nonatomic) _Bool shouldDownloadAllButtonBeVisible;
- (_Bool)sharingButtonVisible;
- (void)configureTitle;
- (id)trackAtIndexPath:(id)arg1;
- (long long)rowForTrackAtIndexPathIgnoringSections:(id)arg1;
- (_Bool)isPlayerPlayingItem:(id)arg1;
- (void)addCancelDownloadsButtonToActionSheet:(id)arg1;
- (id)containerDownloadLease;
- (void)cancelContainerDownloads;
- (int)downloadStatusModeForTrack:(id)arg1;
- (void)configureCell:(id)arg1 indexPath:(id)arg2 model:(id)arg3;
- (_Bool)isModelEnabled:(id)arg1 atIndexPath:(id)arg2;
- (void)configureCell:(id)arg1 atIndexPath:(id)arg2;
- (id)modelAtIndexPath:(id)arg1;
- (id)formatPlaybackTimeFromSeconds:(long long)arg1;
- (void)updateView;
- (void)updateView:(_Bool)arg1;
@property(readonly, nonatomic) _Bool shouldPlayShuffleBeVisible;
@property(readonly, nonatomic) _Bool shouldPlusAllButtonBeVisible;
- (_Bool)shouldShowAvailableData;
@property(readonly, nonatomic) _Bool showsNoContentScreen;
@property(readonly, nonatomic) _Bool loading;
@property(readonly, nonatomic) _Bool hasAvailableData;
@property(readonly, nonatomic) _Bool hasAtLeastOneModel;
@property(readonly, nonatomic) _Bool hasEditModeNavigationButton;
- (void)removeTracksFromDownloads;
- (void)queueTracks;
- (void)plusAllButtonTapped:(id)arg1;
- (id)buildPlusAllButtonActionSheetForPlusAllButton:(id)arg1;
- (void)addShareAction:(id)arg1 anchorView:(id)arg2;
- (void)addEditButtonAction:(id)arg1;
- (void)addDoneEditingButtonAction:(id)arg1;
- (void)addClearQueueRemoveDownloadsAction:(id)arg1;
- (void)addCancelOutstandingDownloadsAction:(id)arg1 containerDownloadLease:(id)arg2 incompleteLeases:(id)arg3;
- (void)addDeletePlaylistAction:(id)arg1;
- (void)addRemoveFromMyMusic:(id)arg1;
- (void)addCarModeOptionToActionSheet:(id)arg1;
- (void)addKidsModeOptionToActionSheet:(id)arg1;
- (void)addRenamePlaylistAction:(id)arg1;
- (void)addAddToPlaylistAction:(id)arg1;
- (void)addAddToMyMusicAction:(id)arg1;
- (void)addAddAllToMyMusicAction:(id)arg1;
- (void)addAddToEndOfQueueAction:(id)arg1;
- (void)addClearAllAction:(id)arg1;
- (void)downloadAllTracksTapped:(id)arg1;
- (void)shareTap:(id)arg1;
- (void)playAllTracksWithShuffle:(_Bool)arg1;
- (void)playAllFromTrack:(id)arg1;
- (void)shuffleAllTracksTapped:(id)arg1;
- (void)playAllTracksTapped:(id)arg1;
- (_Bool)isCurrentUserFavorites;
- (id)createActionSheetWithTrack:(id)arg1 indexPath:(id)arg2 sender:(id)arg3;
- (void)plusButtonTapped:(id)arg1;
- (void)addTrackPlayTrackRadioAction:(id)arg1 track:(id)arg2;
- (void)addTrackSharingAction:(id)arg1 track:(id)arg2 anchor:(id)arg3;
- (id)trackForViewIndexPath:(id)arg1;
- (void)editButtonTapped:(id)arg1;
- (void)clearAllButtonTapped:(id)arg1;
- (void)playerControllerChangedTrackSource:(id)arg1;
- (void)playerControllerDidChangeItemPlaying:(id)arg1;
- (void)refreshVisibleCells;
- (void)didChangeContent;
- (void)controllerDidChangeContent:(id)arg1;
- (void)controller:(id)arg1 didChangeObject:(id)arg2 atIndexPath:(id)arg3 forChangeType:(unsigned long long)arg4 newIndexPath:(id)arg5;
- (void)controller:(id)arg1 didChangeSection:(id)arg2 atIndex:(unsigned long long)arg3 forChangeType:(unsigned long long)arg4;
- (void)controllerWillChangeContent:(id)arg1;
- (void)onSelectModel:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableViewDidSelectModel:(id)arg1 atIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (long long)fetchedObjectIndexFromIndexPath:(id)arg1;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)reusablePlayableRowCell;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)enableFavoritesTrackCellWithOrdinal:(int)arg1;
- (id)viewIndexPathForModelIndexPath:(id)arg1;
- (id)modelIndexPathForViewIndexPath:(id)arg1;
- (void)didFailSessionValidation:(id)arg1;
- (void)didSignOut:(id)arg1;
- (void)didSignIn:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)stackNavigationControllerDidDeactivateView;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewUnloading;
- (void)configureData;
- (void)setupViews;
- (void)offsetNoDataOverlayIfNeeded;
- (void)viewDidLayoutSubviews;
- (void)arrangeViews:(_Bool)arg1;
- (void)arrangeViewsImmediately;
- (void)arrangeAvailableDataViews;
- (void)arrangeViews:(id)arg1 withVisibilities:(id)arg2 inContainer:(id)arg3 resizeContainer:(_Bool)arg4;
- (void)addEditButtonToNavBar;
- (void)updateNavigationBarWithCurrentState;
- (void)setStyle;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(readonly, nonatomic) RHLayoutManagerView *playbarLayoutManagerView;
- (void)dealloc;
- (id)initForRecommendedNewReleasesWithMetricsSource:(id)arg1;
- (id)initForProfileCombinedSources;
- (id)initForProfileTaggedTracksWithMetricsSource:(id)arg1;
- (id)initForMatchedTracks;
- (id)initForDownloadedTracksWithArtist:(id)arg1;
- (id)initForLibraryTracksWithArtist:(id)arg1;
- (id)initForFavoriteTracks:(_Bool)arg1 metricsSource:(id)arg2;
- (id)initForHistoryContainersWithMetricsSource:(id)arg1;
- (id)initForHistoryWithMetricsSource:(id)arg1;
- (id)initForQueueWithMetricsSource:(id)arg1;
- (id)initForFeaturedPlaylist:(id)arg1 metricsSource:(id)arg2;
- (id)initForDownloadedPlaylist:(id)arg1 metricsSource:(id)arg2;
- (id)initForPlaylist:(id)arg1 metricsSource:(id)arg2;
- (id)initForDownloadedTracksForAlbum:(id)arg1;
- (id)initForAllDownloadedTracksWithMetricsSource:(id)arg1;
- (id)initForAllTracks;
- (id)initForTracksInLibraryForAlbum:(id)arg1;
- (id)initForAllTracksInAlbum:(id)arg1;
- (id)initForTrackHighlightsWithScope:(long long)arg1 genre:(id)arg2 artist:(id)arg3 metricsSource:(id)arg4;
- (id)initWithMode:(int)arg1 trackHighlightScope:(long long)arg2 album:(id)arg3 artist:(id)arg4 genre:(id)arg5 playlist:(id)arg6 metricsSource:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

