//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "RHInitiatePlaybackService-Protocol.h"
#import "RHPlayerControllerSequenceAlgorithmDelegate-Protocol.h"
#import "_TtP7Napster22AbstractPlayerDelegate_-Protocol.h"
#import "_TtP7Napster24PlayerManagerCoordinator_-Protocol.h"

@class AudioPlayerManager, MPNowPlayingInfoCenter, NSArray, NSData, NSDate, NSMutableDictionary, NSOperationQueue, NSString, NSTimer, RHAlbumMO, RHArtistMO, RHDataController, RHDownloadsController, RHGenreMO, RHInstanceCounter, RHMeteringManager, RHPermissionsController, RHPlayContext, RHPlayableItem, RHPlayerCachingController, RHPlaylistMO, RHStationMO, ZDSDeferred, ZDSPromise, _TtC7Napster12Dependencies, _TtC7Napster13AppboyService, _TtC7Napster14CarPlayService, _TtC7Napster17AccountController, _TtC7Napster17AppDelegateRouter, _TtC7Napster17GoogleCastManager, _TtC7Napster19ReachabilityService;
@protocol RHAlertPresenter, RHImageProvider, RHPlayerControllerIAADelegate;

@interface RHPlayerController : NSObject <RHPlayerControllerSequenceAlgorithmDelegate, _TtP7Napster22AbstractPlayerDelegate_, _TtP7Napster24PlayerManagerCoordinator_, RHInitiatePlaybackService>
{
    _Bool _isMiniPlayerHidden;
    _Bool _playerHandlesRemoteControlEvents;
    _Bool _playerIsChangingSources;
    int _currentProviderBufferState;
    _TtC7Napster17GoogleCastManager *_googleCastManager;
    id <RHPlayerControllerIAADelegate> _iaaDelegate;
    RHPlayContext *_playContext;
    RHDataController *_dataController;
    NSData *_lastTenSecondsOfAudioData;
    NSDate *_sleepTimerFireDate;
    RHPlayerCachingController *_playerCachingController;
    unsigned long long _itemPlayingFetchedResultsIndexBeforeChange;
    ZDSPromise *_albumImagePromise;
    NSMutableDictionary *_currentNowPlayingDict;
    NSDate *_nowPlayingInfoUpdateDate;
    NSTimer *_nowPlayingInfoUpdateTimer;
    long long _currentPlayerType;
    AudioPlayerManager *_audioPlayerWrapper;
    id <RHImageProvider> _imageProvider;
    NSOperationQueue *_liveStreamQueue;
    ZDSDeferred *_contentLoadingDeferred;
    RHInstanceCounter *_debugReferenceCounter;
    _TtC7Napster17AccountController *_accountController;
    RHDownloadsController *_downloadsController;
    _TtC7Napster19ReachabilityService *_reachabilityService;
    long long _lastRepeatModeSetByUser;
    NSTimer *_sleepTimer;
}

+ (void)unregisterDelegateNotificationsFor:(id)arg1;
@property(nonatomic) __weak NSTimer *sleepTimer; // @synthesize sleepTimer=_sleepTimer;
@property(nonatomic) long long lastRepeatModeSetByUser; // @synthesize lastRepeatModeSetByUser=_lastRepeatModeSetByUser;
@property(retain, nonatomic) _TtC7Napster19ReachabilityService *reachabilityService; // @synthesize reachabilityService=_reachabilityService;
@property(retain, nonatomic) RHDownloadsController *downloadsController; // @synthesize downloadsController=_downloadsController;
@property(retain, nonatomic) _TtC7Napster17AccountController *accountController; // @synthesize accountController=_accountController;
@property(retain, nonatomic) RHInstanceCounter *debugReferenceCounter; // @synthesize debugReferenceCounter=_debugReferenceCounter;
@property(retain, nonatomic) ZDSDeferred *contentLoadingDeferred; // @synthesize contentLoadingDeferred=_contentLoadingDeferred;
@property(retain, nonatomic) NSOperationQueue *liveStreamQueue; // @synthesize liveStreamQueue=_liveStreamQueue;
@property(retain, nonatomic) id <RHImageProvider> imageProvider; // @synthesize imageProvider=_imageProvider;
@property(nonatomic) _Bool playerIsChangingSources; // @synthesize playerIsChangingSources=_playerIsChangingSources;
@property(retain, nonatomic) AudioPlayerManager *audioPlayerWrapper; // @synthesize audioPlayerWrapper=_audioPlayerWrapper;
@property(nonatomic) long long currentPlayerType; // @synthesize currentPlayerType=_currentPlayerType;
@property(retain, nonatomic) NSTimer *nowPlayingInfoUpdateTimer; // @synthesize nowPlayingInfoUpdateTimer=_nowPlayingInfoUpdateTimer;
@property(retain, nonatomic) NSDate *nowPlayingInfoUpdateDate; // @synthesize nowPlayingInfoUpdateDate=_nowPlayingInfoUpdateDate;
@property(retain) NSMutableDictionary *currentNowPlayingDict; // @synthesize currentNowPlayingDict=_currentNowPlayingDict;
@property(retain, nonatomic) ZDSPromise *albumImagePromise; // @synthesize albumImagePromise=_albumImagePromise;
@property(nonatomic) unsigned long long itemPlayingFetchedResultsIndexBeforeChange; // @synthesize itemPlayingFetchedResultsIndexBeforeChange=_itemPlayingFetchedResultsIndexBeforeChange;
@property(readonly, nonatomic) RHPlayerCachingController *playerCachingController; // @synthesize playerCachingController=_playerCachingController;
@property(retain, nonatomic) NSDate *sleepTimerFireDate; // @synthesize sleepTimerFireDate=_sleepTimerFireDate;
@property(readonly, nonatomic) int currentProviderBufferState; // @synthesize currentProviderBufferState=_currentProviderBufferState;
@property(retain, nonatomic) NSData *lastTenSecondsOfAudioData; // @synthesize lastTenSecondsOfAudioData=_lastTenSecondsOfAudioData;
@property(nonatomic) _Bool playerHandlesRemoteControlEvents; // @synthesize playerHandlesRemoteControlEvents=_playerHandlesRemoteControlEvents;
@property(retain, nonatomic) RHDataController *dataController; // @synthesize dataController=_dataController;
@property(retain, nonatomic) RHPlayContext *playContext; // @synthesize playContext=_playContext;
@property(nonatomic) __weak id <RHPlayerControllerIAADelegate> iaaDelegate; // @synthesize iaaDelegate=_iaaDelegate;
@property(nonatomic) _Bool isMiniPlayerHidden; // @synthesize isMiniPlayerHidden=_isMiniPlayerHidden;
@property(readonly, nonatomic) _TtC7Napster17GoogleCastManager *googleCastManager; // @synthesize googleCastManager=_googleCastManager;
- (void).cxx_destruct;
- (void)updateNowPlayingTimeTo:(double)arg1;
- (void)updateNowPlayingState;
- (void)lockScreenChangeToTrack:(id)arg1 startingAt:(id)arg2;
- (id)modifierTrackIndexForCurrentTrack;
- (id)modifierTrackCountForCurrentTrack;
- (void)modifierArtworkFor:(id)arg1 forDictionary:(id)arg2;
- (id)newMPMediaItemArtworkWithImage:(id)arg1;
@property(readonly, nonatomic) MPNowPlayingInfoCenter *currentMPNowPlayingInfoCenter;
@property(readonly, nonatomic) _TtC7Napster14CarPlayService *carPlayService;
@property(nonatomic) _Bool evenFilterOn;
@property(nonatomic) _Bool evenOn;
@property(readonly, nonatomic) NSArray *equalizerPresets;
- (id)promiseForAudioUnitDTO;
- (void)logPlaybackError:(id)arg1 errorDescrition:(id)arg2 requestContext:(id)arg3;
- (id)audioFormat;
- (long long)bitrate;
- (void)setCurrentEqualizerWithNumber:(id)arg1;
- (_Bool)isBuffering;
- (void)showNoSkipsRemainingAlert;
- (void)handleErrorWithRejected:(id)arg1 requestContext:(id)arg2;
- (void)postNotificationName:(id)arg1 userInfo:(id)arg2;
- (id)notificationCenter;
- (void)notifyChangedNextItemTo:(id)arg1;
- (void)notifyChangedCurrentEntityFrom:(id)arg1 toEntity:(id)arg2 startingAt:(double)arg3;
- (void)notifyChangeOfTrackSourceComplete;
- (void)notifyChangeOfTrackSourcePending;
- (void)notifyStateChangedFromState:(long long)arg1 toState:(long long)arg2;
- (void)notifyChangedPlayheadPosition:(double)arg1;
- (void)registerDelegateNotificationsFor:(id)arg1;
@property(readonly, nonatomic) RHPermissionsController *permissionsController;
@property(readonly, nonatomic) RHMeteringManager *meteringManager;
- (void)updateMPNowPlayingInfo;
- (void)scheduleAnUpdateOfMPNowPlayingInfo;
- (void)storeRecentContainerPlayEventWithTrack:(id)arg1;
- (id)playRequest:(id)arg1;
- (id)playContext:(id)arg1 shuffle:(_Bool)arg2 startingWith:(id)arg3;
- (void)adjustRepeatMode;
- (id)performPlayback:(id)arg1;
- (void)enterStoppedStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)enterStoppedState;
- (void)stopWhenDone:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) float currentProviderCacheProgress;
- (void)playProviderItemAtIndex:(unsigned long long)arg1;
- (id)stateAsString;
- (void)notifyOfCurrentTrackChanged;
- (void)trackDurationChanged;
- (void)playContextChangedTo:(id)arg1;
- (void)playableContextChangedTo:(id)arg1;
- (void)trackChangedFromPreviousEntity:(id)arg1 toCurrentEntity:(id)arg2;
- (void)trackFinishedWithEvent:(id)arg1;
- (void)trackStartedWithEvent:(id)arg1;
- (void)playheadPositionChangedToTime:(double)arg1;
- (void)stateChangedFromState:(long long)arg1 toState:(long long)arg2;
- (void)resetSleepTimer:(id)arg1;
- (void)stopSleepTimer;
- (void)startSleepTimerToFireAfter:(double)arg1;
- (id)currentTrack;
- (void)switchPlayerWithPlayerType:(long long)arg1;
@property(readonly, nonatomic) RHPlayableItem *afterNextItem;
@property(readonly, nonatomic) RHPlayableItem *nextItem;
@property(readonly, nonatomic) RHPlayableItem *currentItem;
@property(readonly, nonatomic) RHPlayableItem *previousItem;
@property(readonly, nonatomic) RHPlayableItem *beforePreviousItem;
- (_Bool)isActive;
- (_Bool)isPlaying;
- (_Bool)isSeedTrack:(id)arg1;
- (_Bool)canChangeFavoriteTrackState;
- (_Bool)canAddTrackToThings;
@property(readonly, nonatomic) long long state;
- (double)maximumForTimeInterval:(double)arg1;
- (double)seekToTimeInterval:(double)arg1;
@property(readonly, nonatomic) double playheadPosition;
- (_Bool)isRepeating;
@property(readonly, nonatomic) _Bool isEndlessPlaybackAvailable;
- (void)setNextRepeatModeUsingRemoteCommand:(_Bool)arg1;
@property(readonly, nonatomic) _Bool shouldRecoverBackToEP;
@property(readonly, nonatomic) long long repeatMode;
- (void)setRepeatMode:(long long)arg1 shouldRecoverBackToEP:(_Bool)arg2;
- (_Bool)canUserChangeRepeatMode;
- (void)toggleShuffle;
@property(readonly, nonatomic) _Bool isShuffled;
- (_Bool)stickyShuffleMode;
- (void)setStickyShuffleMode:(_Bool)arg1;
- (_Bool)canUserChangeShuffleMode;
- (_Bool)userScrubbing;
- (void)setUserScrubbing:(_Bool)arg1;
- (_Bool)canUserScrub;
- (void)skipAtBeginning;
- (void)skipPreviousForce;
- (_Bool)overMinimumDurationToSkipBack;
- (void)skipPrevious;
- (_Bool)canSkipPrevious;
- (void)skipNext:(unsigned long long)arg1;
- (_Bool)canSkipNext;
- (void)pause;
- (void)play;
- (id)topTracksString:(id)arg1;
- (id)startTrackRadioWithTrack:(id)arg1;
- (_Bool)isPlayerPendingPlaybackNow;
- (_Bool)isPlayingPlaylist:(id)arg1;
- (_Bool)isPlayingAllTracksInAlbum:(id)arg1;
- (_Bool)isPlayingDownloadedTracksInAlbum:(id)arg1;
- (_Bool)isPlayingDownloadedTracksForArtist:(id)arg1;
- (_Bool)isPlayingLibraryTracksForArtist:(id)arg1;
@property(readonly, nonatomic) _Bool isPlayingAllTracks;
- (_Bool)isPlayingAllDownloadedTracks;
- (_Bool)isPlayingTracksInLibraryInAlbum:(id)arg1;
- (id)playHistoryStartingWith:(id)arg1 shuffle:(_Bool)arg2;
- (id)playCombinedPlaylist:(id)arg1;
- (id)firstPlayableItemFrom:(id)arg1;
- (id)playFollowingPlaylistStartingWith:(id)arg1 shuffle:(_Bool)arg2 forUserProfile:(id)arg3;
- (void)playFollowingPlaylistStartingWith:(id)arg1 forUserProfile:(id)arg2;
- (id)playListenersPlaylistStartingWith:(id)arg1 shuffle:(_Bool)arg2 forUserProfile:(id)arg3;
- (void)playListenersPlaylistStartingWith:(id)arg1 forUserProfile:(id)arg2;
- (id)playCombinedTastePlaylistStartingWith:(id)arg1 shuffle:(_Bool)arg2 forUserProfile:(id)arg3;
- (id)playCombinedTastePlaylistStartingWith:(id)arg1 forUserProfile:(id)arg2;
- (id)playRecommendedTastePlaylistStartingWith:(id)arg1 shuffle:(_Bool)arg2 forUserProfile:(id)arg3;
- (void)playRecommendedTastePlaylistStartingWith:(id)arg1 forUserProfile:(id)arg2;
- (id)playPlaylistWithName:(id)arg1;
- (id)playStationOfArtistWithName:(id)arg1;
- (id)playArtistWithName:(id)arg1;
- (id)playCurrentUserTopChartsWithRange:(unsigned long long)arg1 shuffle:(_Bool)arg2 params:(id)arg3;
- (id)playCurrentUserTopChartsWithRange:(unsigned long long)arg1 shuffle:(_Bool)arg2;
- (id)playChartsStartingWith:(id)arg1 shuffle:(_Bool)arg2 forUserProfile:(id)arg3 range:(unsigned long long)arg4 params:(id)arg5;
- (id)playChartsStartingWith:(id)arg1 shuffle:(_Bool)arg2 forUserProfile:(id)arg3 range:(unsigned long long)arg4;
- (id)playMatchedTracksStartingWith:(id)arg1 shuffle:(_Bool)arg2;
- (void)playKidsModeTrack:(id)arg1;
- (id)playDownloadedFavoriteTracksStartingWith:(id)arg1 shuffle:(_Bool)arg2;
- (id)playFavoriteTracksStartingWith:(id)arg1 shuffle:(_Bool)arg2 forUserProfile:(id)arg3 params:(id)arg4;
- (id)playFavoriteTracksStartingWith:(id)arg1 shuffle:(_Bool)arg2 forUserProfile:(id)arg3;
- (id)playFavoriteTracksStartingWith:(id)arg1 shuffle:(_Bool)arg2 params:(id)arg3;
- (id)playFavoriteTracksStartingWith:(id)arg1 shuffle:(_Bool)arg2;
- (id)playRadioStationFromTrack:(id)arg1;
- (id)playRadioStation:(id)arg1 startingWith:(id)arg2 params:(id)arg3;
- (id)playRadioStation:(id)arg1 startingWith:(id)arg2;
- (id)playRadioStation:(id)arg1 params:(id)arg2;
- (id)playRadioStation:(id)arg1;
- (id)playQueueStartingWith:(id)arg1 shuffle:(_Bool)arg2;
- (void)playQueueStartingWith:(id)arg1;
- (id)playBookmark:(id)arg1;
- (id)playPreviewForTrack:(id)arg1;
- (id)playAlarmTrack:(id)arg1;
- (id)playSingleTrack:(id)arg1;
- (void)playSingleDownloadsOrAlbumTrack:(id)arg1;
- (id)playDownloadsInPlaylist:(id)arg1 startingWith:(id)arg2 shuffle:(_Bool)arg3;
- (void)playDownloadsInPlaylist:(id)arg1 startingWith:(id)arg2;
- (id)playPlaylistRadioWithPlaylist:(id)arg1;
- (id)playPlaylist:(id)arg1 startingWith:(id)arg2 shuffle:(_Bool)arg3 params:(id)arg4;
- (id)playPlaylist:(id)arg1 startingWith:(id)arg2 shuffle:(_Bool)arg3;
- (void)playPlaylist:(id)arg1 startingWith:(id)arg2;
- (id)playDownloadedTracksForAlbum:(id)arg1 startingWith:(id)arg2 shuffle:(_Bool)arg3;
- (void)playDownloadedTracksForAlbum:(id)arg1 startingWith:(id)arg2;
- (id)playLibraryTracksForArtist:(id)arg1 startingWith:(id)arg2 shuffle:(_Bool)arg3;
- (id)playAllDownloadedTracksForArtist:(id)arg1 startingWith:(id)arg2 shuffle:(_Bool)arg3;
- (void)playAllDownloadedTracksForArtist:(id)arg1 startingWith:(id)arg2;
- (id)playAllDownloadedTracksStartingWith:(id)arg1 shuffle:(_Bool)arg2;
- (id)playAllDownloadedTracksStartingWith:(id)arg1;
- (id)playAllTracksStartingWith:(id)arg1 shuffle:(_Bool)arg2;
- (void)playAllTracksStartingWith:(id)arg1;
- (id)playTracksInLibraryForAlbum:(id)arg1 startingWith:(id)arg2 shuffle:(_Bool)arg3;
- (void)playTracksInLibraryForAlbum:(id)arg1 startingWith:(id)arg2;
- (id)playAllTracksInAlbum:(id)arg1 startingWith:(id)arg2 shuffle:(_Bool)arg3 params:(id)arg4;
- (id)playAllTracksInAlbum:(id)arg1 startingWith:(id)arg2 shuffle:(_Bool)arg3;
- (id)playAllTracksInAlbum:(id)arg1 startingWith:(id)arg2;
- (id)playTrackHighlightsWithScope:(long long)arg1 genre:(id)arg2 artist:(id)arg3 startingWith:(id)arg4 shuffle:(_Bool)arg5 params:(id)arg6;
- (id)playTrackHighlightsWithScope:(long long)arg1 genre:(id)arg2 artist:(id)arg3 startingWith:(id)arg4 shuffle:(_Bool)arg5;
- (id)playTrackHighlightsWithScope:(long long)arg1 genre:(id)arg2 artist:(id)arg3 startingWith:(id)arg4 params:(id)arg5;
- (id)playTrackHighlightsWithScope:(long long)arg1 genre:(id)arg2 artist:(id)arg3 startingWith:(id)arg4;
- (id)playAllTracksInEditorial:(id)arg1 shuffle:(_Bool)arg2;
- (void)registerContentLoadingDeferred:(id)arg1;
- (void)dealloc;
- (void)unregisterEverything;
- (void)restorePlayerState;
- (id)initWithAudioPlayer:(id)arg1 reachabilityService:(id)arg2 accountController:(id)arg3 dataController:(id)arg4 imageProvider:(id)arg5 downloadsController:(id)arg6;
@property(readonly, nonatomic) NSString *modeName;
@property(readonly, nonatomic) NSString *playbackSourceDescription;
@property(readonly, nonatomic) RHStationMO *station;
@property(readonly, nonatomic) RHPlaylistMO *playlist;
@property(readonly, nonatomic) RHAlbumMO *album;
@property(readonly, nonatomic) RHArtistMO *artist;
@property(readonly, nonatomic) RHGenreMO *genre;
@property(readonly, nonatomic) long long trackHighlightScope;
@property(readonly, nonatomic) long long mode;
@property(readonly, nonatomic) id <RHAlertPresenter> alertPresenter;
@property(readonly, nonatomic) _TtC7Napster12Dependencies *dependencies;
@property(readonly, nonatomic) _TtC7Napster17AppDelegateRouter *appDelegate;
@property(readonly, nonatomic) _TtC7Napster13AppboyService *appboyService;
- (id)currentPlayer;

@end

