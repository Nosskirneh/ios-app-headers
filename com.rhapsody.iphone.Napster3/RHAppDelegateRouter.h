//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIResponder.h>

#import "MeqEarPrintManagerDelegate-Protocol.h"
#import "RHAbTestingService-Protocol.h"
#import "RHAlertPresenter-Protocol.h"
#import "RHLoadingOverlayService-Protocol.h"
#import "RHMemberAccessRights-Protocol.h"
#import "RHPlayerDelegate-Protocol.h"

@class CarMaestro, FIRTrace, NSArray, NSDate, NSDictionary, NSMutableArray, NSObject, NSString, NSTimer, RHAppResetController, RHArtworkColorProvider, RHAudioPlayer, RHConnectedDeviceInfoSource, RHContextMenuTransitionDelegate, RHDeepLinkingObject, RHDownloadsController, RHIAPViewControllerContainer, RHImageCacheController, RHImageFilterController, RHMIDIConnectionController, RHMeteringManager, RHPermissionsController, RHPlayerController, RHPrivacyPolicyUpdateController, RHPurchaseController, RHRootViewController, RHRootViewController_ipad, RHRootViewController_iphone, RHSearchAllMainResultsViewModel, RHSecurityManager, RHUpsellController, RHVersioningManager, UIAlertController, UIViewController, UIWindow, ZDSDeferred, _TtC7Napster12Dependencies, _TtC7Napster14DataController;
@protocol EditorialPlaybackService, OS_dispatch_queue, RHConnectedDeviceInfo, RHPlaylistLoungeDataService, RHUserFollowService;

@interface RHAppDelegateRouter : UIResponder <MeqEarPrintManagerDelegate, RHPlayerDelegate, RHAlertPresenter, RHLoadingOverlayService, RHMemberAccessRights, RHAbTestingService>
{
    _Bool _applicationLocked;
    _Bool _networkStatusReady;
    _Bool _isPrivacyPolicyUpdateShown;
    _Bool _BMWHackIgnorePause;
    int _deferScreenLockRequests;
    int _reachabilityStartupState;
    NSString *__appVersion;
    NSString *__buildInfo;
    RHMeteringManager *__meteringManager;
    RHSecurityManager *__securityManager;
    NSObject<OS_dispatch_queue> *__reachabilityQueue;
    UIWindow *_window;
    NSString *_buildNumber;
    NSMutableArray *_statusMessages;
    NSDictionary *_memberAccessEntryData;
    RHImageFilterController *_imageFilter;
    _TtC7Napster12Dependencies *_dependencies;
    _TtC7Napster14DataController *_dataController;
    RHAppResetController *_resetController;
    RHDownloadsController *_downloadsController;
    RHPlayerController *_playerController;
    RHAudioPlayer *_audioPlayer;
    RHPurchaseController *_purchaseController;
    RHRootViewController_ipad *_iPadBaseViewController;
    RHRootViewController_iphone *_iPhoneBaseViewController;
    RHVersioningManager *_versioningManager;
    RHArtworkColorProvider *_artworkColorProvider;
    RHSearchAllMainResultsViewModel *_searchAllViewModel;
    RHContextMenuTransitionDelegate *_contextMenuTransitionDelegate;
    RHDeepLinkingObject *_pendingDeeplinkingObject;
    id <RHUserFollowService> _userFollowService;
    id <EditorialPlaybackService> _editorialPlaybackService;
    UIAlertController *_offlineAlert;
    UIViewController *_lockScreenViewController;
    RHIAPViewControllerContainer *_entranceViewController;
    RHUpsellController *_upsellController;
    RHMIDIConnectionController *_midiConnectionController;
    RHPrivacyPolicyUpdateController *_privacyPolicyUpdateController;
    RHConnectedDeviceInfoSource *_connectedDeviceInfoSource;
    NSDate *_appStartDate;
    NSTimer *_offlineAlertTimer;
    NSTimer *_apptimizeExperimentsLoadingTimer;
    ZDSDeferred *_branchLoaded;
    ZDSDeferred *_apptimizeExperimentsLoaded;
    ZDSDeferred *_initializationDeferred;
    unsigned long long _backgroundTask;
    FIRTrace *_appStartTrace;
}

+ (id)sharedDelegate;
+ (id)appDelegate;
@property(retain, nonatomic) FIRTrace *appStartTrace; // @synthesize appStartTrace=_appStartTrace;
@property(nonatomic) _Bool BMWHackIgnorePause; // @synthesize BMWHackIgnorePause=_BMWHackIgnorePause;
@property(nonatomic) unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(retain, nonatomic) ZDSDeferred *initializationDeferred; // @synthesize initializationDeferred=_initializationDeferred;
@property(retain, nonatomic) ZDSDeferred *apptimizeExperimentsLoaded; // @synthesize apptimizeExperimentsLoaded=_apptimizeExperimentsLoaded;
@property(retain, nonatomic) ZDSDeferred *branchLoaded; // @synthesize branchLoaded=_branchLoaded;
@property(nonatomic) int reachabilityStartupState; // @synthesize reachabilityStartupState=_reachabilityStartupState;
@property(retain, nonatomic) NSTimer *apptimizeExperimentsLoadingTimer; // @synthesize apptimizeExperimentsLoadingTimer=_apptimizeExperimentsLoadingTimer;
@property(retain, nonatomic) NSTimer *offlineAlertTimer; // @synthesize offlineAlertTimer=_offlineAlertTimer;
@property int deferScreenLockRequests; // @synthesize deferScreenLockRequests=_deferScreenLockRequests;
@property(retain, nonatomic) NSDate *appStartDate; // @synthesize appStartDate=_appStartDate;
@property(retain, nonatomic) RHConnectedDeviceInfoSource *connectedDeviceInfoSource; // @synthesize connectedDeviceInfoSource=_connectedDeviceInfoSource;
@property(retain, nonatomic) RHPrivacyPolicyUpdateController *privacyPolicyUpdateController; // @synthesize privacyPolicyUpdateController=_privacyPolicyUpdateController;
@property(retain, nonatomic) RHMIDIConnectionController *midiConnectionController; // @synthesize midiConnectionController=_midiConnectionController;
@property(retain, nonatomic) RHUpsellController *upsellController; // @synthesize upsellController=_upsellController;
@property(nonatomic) __weak RHIAPViewControllerContainer *entranceViewController; // @synthesize entranceViewController=_entranceViewController;
@property(retain, nonatomic) UIViewController *lockScreenViewController; // @synthesize lockScreenViewController=_lockScreenViewController;
@property(retain, nonatomic) UIAlertController *offlineAlert; // @synthesize offlineAlert=_offlineAlert;
@property(nonatomic) _Bool isPrivacyPolicyUpdateShown; // @synthesize isPrivacyPolicyUpdateShown=_isPrivacyPolicyUpdateShown;
@property(readonly, nonatomic) id <EditorialPlaybackService> editorialPlaybackService; // @synthesize editorialPlaybackService=_editorialPlaybackService;
@property(readonly, nonatomic) id <RHUserFollowService> userFollowService; // @synthesize userFollowService=_userFollowService;
@property(retain, nonatomic) RHDeepLinkingObject *pendingDeeplinkingObject; // @synthesize pendingDeeplinkingObject=_pendingDeeplinkingObject;
@property(retain, nonatomic) RHContextMenuTransitionDelegate *contextMenuTransitionDelegate; // @synthesize contextMenuTransitionDelegate=_contextMenuTransitionDelegate;
@property(retain, nonatomic) RHSearchAllMainResultsViewModel *searchAllViewModel; // @synthesize searchAllViewModel=_searchAllViewModel;
@property(retain, nonatomic) RHArtworkColorProvider *artworkColorProvider; // @synthesize artworkColorProvider=_artworkColorProvider;
@property(retain, nonatomic) RHVersioningManager *versioningManager; // @synthesize versioningManager=_versioningManager;
@property(retain, nonatomic) RHRootViewController_iphone *iPhoneBaseViewController; // @synthesize iPhoneBaseViewController=_iPhoneBaseViewController;
@property(retain, nonatomic) RHRootViewController_ipad *iPadBaseViewController; // @synthesize iPadBaseViewController=_iPadBaseViewController;
@property(retain, nonatomic) RHPurchaseController *purchaseController; // @synthesize purchaseController=_purchaseController;
@property(retain, nonatomic) RHAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(retain, nonatomic) RHPlayerController *playerController; // @synthesize playerController=_playerController;
@property(retain, nonatomic) RHDownloadsController *downloadsController; // @synthesize downloadsController=_downloadsController;
@property(retain, nonatomic) RHAppResetController *resetController; // @synthesize resetController=_resetController;
@property(retain, nonatomic) _TtC7Napster14DataController *dataController; // @synthesize dataController=_dataController;
@property(retain, nonatomic) _TtC7Napster12Dependencies *dependencies; // @synthesize dependencies=_dependencies;
@property(retain, nonatomic) RHImageFilterController *imageFilter; // @synthesize imageFilter=_imageFilter;
@property(retain, nonatomic) NSDictionary *memberAccessEntryData; // @synthesize memberAccessEntryData=_memberAccessEntryData;
@property(retain, nonatomic) NSMutableArray *statusMessages; // @synthesize statusMessages=_statusMessages;
@property(readonly, nonatomic) _Bool networkStatusReady; // @synthesize networkStatusReady=_networkStatusReady;
@property(nonatomic) _Bool applicationLocked; // @synthesize applicationLocked=_applicationLocked;
@property(readonly, nonatomic) NSString *buildNumber; // @synthesize buildNumber=_buildNumber;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *reachabilityQueue; // @synthesize reachabilityQueue=__reachabilityQueue;
@property(readonly, nonatomic) NSString *buildInfo; // @synthesize buildInfo=__buildInfo;
@property(readonly, nonatomic) NSString *appVersion; // @synthesize appVersion=__appVersion;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *abTestMetricsAttributes;
@property(readonly, nonatomic) NSArray *testInfos;
@property(readonly, nonatomic) NSDictionary *testingVariants;
- (void)sendFiles:(id)arg1 fromDirectory:(id)arg2 toEmailAddress:(id)arg3 withSubject:(id)arg4;
- (void)databaseTrashed:(id)arg1;
@property(readonly, nonatomic) NSString *audiRHMIScheme;
- (void)handleAudiAppLaunchWithURL:(id)arg1;
- (id)parseQueryString:(id)arg1;
- (_Bool)audiApplication:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3;
- (void)iapViewControllerDidDismiss:(id)arg1;
- (void)presentLockScreenViewControllerAnimated:(_Bool)arg1;
- (void)unlockScreenIfLockedWithViewController:(id)arg1;
- (void)lockScreenWithViewController:(id)arg1;
- (void)setupBranchIOWithLaunchOptions:(id)arg1;
- (_Bool)protocolConnected:(id)arg1 forName:(id)arg2;
- (_Bool)isAccessoryConnected:(id)arg1;
- (void)batteryStateChanged;
- (void)endDeferScreenLockProcessWhenPluggedIn;
- (void)beginDeferScreenLockProcessWhenPluggedIn;
- (void)checkForLanguageUpdate;
- (id)getRevisedAppVersion:(id)arg1;
- (id)scheduledTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(_Bool)arg5;
- (void)postNotificationOnMainQueue:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
@property(readonly, nonatomic) _Bool isConnectedWithMMIViaWiFi;
@property(readonly, nonatomic) CarMaestro *carMaestro;
@property(readonly, nonatomic) RHSecurityManager *securityManager; // @synthesize securityManager=__securityManager;
@property(readonly, nonatomic) RHPermissionsController *permissionsController;
@property(readonly, nonatomic) RHImageCacheController *imageCacheController;
@property(readonly, nonatomic) RHMeteringManager *meteringManager; // @synthesize meteringManager=__meteringManager;
@property(readonly, nonatomic) UIViewController *topPresentedViewController;
@property(readonly, nonatomic) RHRootViewController *initializedRootViewController;
- (id)alertPresenter;
@property(readonly, nonatomic) id <RHConnectedDeviceInfo> currentConnectedDeviceInfo;
@property(readonly) id <RHPlaylistLoungeDataService> playlistLoungeDataService;
- (id)promise;
- (void)appIsInitialized;
- (void)removeStatusMessage:(id)arg1;
- (id)displayStatusMessage:(id)arg1 ofType:(int)arg2;
- (void)showDownloadQueueToastForTrack:(id)arg1;
- (void)showPushPreferencesUpdateAlert;
- (void)showToastForSelectedEarprint;
- (void)hideToastActivity;
- (void)showToastActivity;
- (void)showSnackBarWithMessage:(id)arg1 duration:(double)arg2 position:(id)arg3 buttonTitle:(id)arg4 buttonAction:(CDUnknownBlockType)arg5;
- (void)showSnackBarWithMessage:(id)arg1 buttonTitle:(id)arg2 buttonAction:(CDUnknownBlockType)arg3;
- (void)showToastTitle:(id)arg1 message:(id)arg2 position:(id)arg3 duration:(double)arg4 image:(id)arg5;
- (void)showToastMessage:(id)arg1 position:(id)arg2 duration:(double)arg3 image:(id)arg4;
- (void)showToastMessage:(id)arg1 position:(id)arg2 duration:(double)arg3;
- (void)showToastMessage:(id)arg1 position:(id)arg2;
- (void)showAttributedToastMessage:(id)arg1 duration:(double)arg2;
- (void)showAttributedToastMessage:(id)arg1;
- (void)showToastMessage:(id)arg1;
- (void)promptWithTitle:(id)arg1 message:(id)arg2 style:(long long)arg3 buttons:(id)arg4;
- (void)editValue:(id)arg1 title:(id)arg2 message:(id)arg3 buttons:(id)arg4;
- (_Bool)promptForMemberOnlyAction:(id)arg1;
- (_Bool)promptForMemberOnlyActionWithTagName:(id)arg1 callerClassName:(id)arg2 callerSelectorName:(id)arg3;
- (void)promptFor:(id)arg1 title:(id)arg2 cancelActionText:(id)arg3 cancelAction:(CDUnknownBlockType)arg4 otherButtonTitles:(id)arg5;
- (void)promptFor:(id)arg1 cancelActionText:(id)arg2 cancelAction:(CDUnknownBlockType)arg3 otherButtonTitles:(id)arg4;
- (void)promptFor:(id)arg1 title:(id)arg2 cancelActionText:(id)arg3 cancelAction:(CDUnknownBlockType)arg4 okActionText:(id)arg5 okAction:(CDUnknownBlockType)arg6;
- (void)showBookmarkSavedMessage;
- (void)promptFor:(id)arg1 completed:(CDUnknownBlockType)arg2;
- (void)displayAlertWithTitle:(id)arg1 message:(id)arg2;
- (void)displayAlert:(id)arg1;
- (void)helpButtonTapped;
- (void)displayHelpAlertWithTitle:(id)arg1 message:(id)arg2 showHelp:(_Bool)arg3;
- (void)displayHelpAlertWithTitle:(id)arg1 message:(id)arg2;
- (void)showContentNoLongerAvailableForStreaming;
- (void)showFollowUnableForPrivateUser;
- (void)showErrorMessage:(id)arg1;
- (void)showAlertForError:(id)arg1;
- (void)displayAlertWithCloseButtonAndTitle:(id)arg1 message:(id)arg2;
- (id)forceOfflineStatusMessage;
- (id)alertForOffline;
- (void)offlineAlertTimerFired:(id)arg1;
- (void)hideOfflineMessage;
- (void)showOfflineMessage;
- (void)showOfflineAlertWithOkButtonAction:(CDUnknownBlockType)arg1 otherButtonTitles:(id)arg2 actions:(id)arg3;
- (void)showOfflineAlertWithOkButtonAction:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool alertsEnabled;
- (void)playerControllerError:(id)arg1;
- (void)didFailSessionValidation:(id)arg1;
- (void)devSettingsUpdated:(id)arg1;
- (void)dealloc;
- (void)showSplashScreen;
- (void)tearDownUI;
- (void)tearDownControllers;
- (void)reconstructControllers;
- (id)showOverlay;
- (void)showSignInSignUpView;
- (void)showSignInSignUpView:(_Bool)arg1;
- (void)showMemberEntrance:(id)arg1;
- (void)dismissModal;
- (void)rootViewControllerWasInitialized;
- (void)initBaseViewControllerWithAppLaunchEvents:(id)arg1;
- (void)configureDependenciesWithStartEvent:(id)arg1;
- (void)showForceUpdate;
- (_Bool)showForceUpdateIfNeeded;
- (id)createDependenciesWithStartEvent:(id)arg1;
- (id)controllersInitializedWithLaunchEvent:(id)arg1;
- (id)controllersInitialized;
- (void)launchApplicationWithAppLaunchEvent:(id)arg1;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (void)navigateToDeepLink:(id)arg1 useActiveNavigationController:(_Bool)arg2 metricsSource:(id)arg3;
- (void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)processURL:(id)arg1;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)restoreInterruptedTransaction;
- (id)handleUserPrivacyChangesAcceptanceStatus;
- (void)everytimeApplicationBecomesActive;
- (void)everyTimeApplicationEntersForeground;
- (_Bool)foregroundApplication:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (_Bool)backgroundApplication:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2 window:(id)arg3;
- (id)init;
- (_Bool)meqProfileStorageSaveNew:(id)arg1;
- (_Bool)meqProfileStorageDelete:(id)arg1;
- (_Bool)meqProfileStorageDeleteAll;
- (id)meqProfileStorageLoadAll;
- (void)meqProfileChanged;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

