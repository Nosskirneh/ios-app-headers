//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSFetchedResultsSectionInfo-Protocol.h"

@class NSArray, NSFetchedResultsController, NSMutableIndexSet, NSString, ZDSFetchedResultsChanges;

@interface ZDSRandomFetchedResultsSample : NSObject <NSFetchedResultsSectionInfo>
{
    NSString *_name;
    NSString *_indexTitle;
    NSArray *_objects;
    NSFetchedResultsController *_fetchedResults;
    unsigned long long _sampleLimit;
    NSMutableIndexSet *_sampleIndexes;
    ZDSFetchedResultsChanges *_sampleChanges;
    ZDSFetchedResultsChanges *_controllerChanges;
}

@property(retain, nonatomic) ZDSFetchedResultsChanges *controllerChanges; // @synthesize controllerChanges=_controllerChanges;
@property(retain, nonatomic) ZDSFetchedResultsChanges *sampleChanges; // @synthesize sampleChanges=_sampleChanges;
@property(retain, nonatomic) NSMutableIndexSet *sampleIndexes; // @synthesize sampleIndexes=_sampleIndexes;
@property(readonly, nonatomic) unsigned long long sampleLimit; // @synthesize sampleLimit=_sampleLimit;
@property(retain, nonatomic) NSFetchedResultsController *fetchedResults; // @synthesize fetchedResults=_fetchedResults;
@property(readonly, nonatomic) NSArray *objects; // @synthesize objects=_objects;
@property(readonly, nonatomic) NSString *indexTitle; // @synthesize indexTitle=_indexTitle;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)updateObjectsWithChanges:(id)arg1;
- (void)updateSampleIndexesWithChanges:(id)arg1;
- (void)resampleWithObjects:(id)arg1 changes:(id)arg2;
- (id)endChanges;
- (void)changeSection:(id)arg1 atIndex:(unsigned long long)arg2 forChangeType:(unsigned long long)arg3;
- (void)changeObject:(id)arg1 atIndexPath:(id)arg2 forChangeType:(unsigned long long)arg3 newIndexPath:(id)arg4;
- (void)beginChanges;
@property(readonly, nonatomic) unsigned long long numberOfObjects;
- (id)initWithFetchedResultsController:(id)arg1 limit:(unsigned long long)arg2;

@end

