//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "_RHPlaylistMO.h"

#import "RHEditorialContent-Protocol.h"
#import "RHOfflinePlayableEntity-Protocol.h"

@class NSString;

@interface RHPlaylistMO : _RHPlaylistMO <RHEditorialContent, RHOfflinePlayableEntity>
{
}

+ (_Bool)isPlaylistGuid:(id)arg1;
+ (id)existingObjectOrStubForEditorialWithContentID:(id)arg1 context:(id)arg2;
+ (id)processNewPlaylistPayload:(id)arg1 context:(id)arg2;
+ (void)extractNAPIRawPlaylist:(id)arg1 output:(CDUnknownBlockType)arg2;
+ (id)tagsIDs:(id)arg1;
+ (id)membersIDs:(id)arg1;
+ (id)sampleArtistsIDs:(id)arg1;
+ (id)playlistIDs:(id)arg1;
+ (id)playlistID:(id)arg1;
+ (id)mapProfiles:(id)arg1 byPlaylistIDs:(id)arg2;
+ (id)tagsIDsByPlaylistID:(id)arg1;
+ (id)membersIDsByPlaylistID:(id)arg1;
+ (id)sampleArtistsIDsByPlaylistID:(id)arg1;
+ (id)processNapiSampleArtistsPayload:(id)arg1 playlist:(id)arg2 context:(id)arg3;
+ (id)processNapiRawPlaylists:(id)arg1 resolvedPlaylistsLinks:(id)arg2 context:(id)arg3;
+ (id)processDownloadedTracksWithoutLeaseAfterEjectionFromPlaylist:(id)arg1 context:(id)arg2;
+ (id)processRemovePlaylistFromDownloads:(id)arg1 context:(id)arg2;
+ (id)processAddPlaylistNoTracksToDownloads:(id)arg1 context:(id)arg2;
+ (id)processAddPlaylistToDownloads:(id)arg1 context:(id)arg2;
+ (id)processLibraryRemovalPayload:(id)arg1 forPlaylist:(id)arg2 context:(id)arg3;
+ (id)processAllTracksRemovalForPlaylist:(id)arg1 context:(id)arg2;
+ (id)processRemovalForPlaylist:(id)arg1 item:(id)arg2 context:(id)arg3;
+ (id)processTrackAdditionsForPlaylist:(id)arg1 trackGUIDs:(id)arg2 context:(id)arg3;
+ (id)processRenamePayload:(id)arg1 forPlaylist:(id)arg2 context:(id)arg3;
+ (id)processPlaylistCreationPayload:(id)arg1 context:(id)arg2;
+ (id)processLiteTracksPayload:(id)arg1 forPlaylist:(id)arg2 range:(id)arg3 memo:(id)arg4 context:(id)arg5;
+ (id)processLitePlaylistsPayload:(id)arg1 inCategoryNamed:(id)arg2 context:(id)arg3;
+ (id)setLibraryPlaylists:(id)arg1 context:(id)arg2;
+ (id)processLitePlaylistsPayload:(id)arg1 guidKey:(id)arg2 context:(id)arg3;
+ (id)processLitePlaylistsPayload:(id)arg1 context:(id)arg2;
+ (id)processLitePlaylistPayload:(id)arg1 context:(id)arg2;
+ (id)processArtistNamesForArtists:(id)arg1 context:(id)arg2;
+ (void)processOwnerPayload:(id)arg1 forPlaylist:(id)arg2 context:(id)arg3;
+ (void)processOwnerWithGuid:(id)arg1 forPlaylist:(id)arg2 context:(id)arg3;
+ (id)processHeavyPlaylistsPayload:(id)arg1 owner:(id)arg2 context:(id)arg3;
+ (id)processHeavyPlaylistsPayload:(id)arg1 context:(id)arg2;
+ (id)processHeavyPlaylistPayload:(id)arg1 context:(id)arg2;
+ (id)fetchedResultsControllerSectionName:(long long)arg1;
+ (id)sortOrderForSorting:(long long)arg1;
- (_Bool)isOwnershipPlayable;
- (id)dataController;
- (id)accountController;
- (_Bool)ensureWeight:(int)arg1 withPromise:(id *)arg2;
@property(readonly, nonatomic) _Bool canBeAddedToModes;
- (id)isFavoriteObserver;
@property(readonly, nonatomic) _Bool isEntityPlayableOffline;
- (id)giphyImageID;
- (id)customImage;
@property(readonly, nonatomic) NSString *blurbText;
@property(readonly, nonatomic) NSString *tracksCountText;
@property(readonly, nonatomic) NSString *followersCountText;
@property(readonly, nonatomic) _Bool isMember;
@property(readonly, nonatomic) _Bool isEditorial;
@property(readonly, nonatomic) _Bool isFavorite;
@property(nonatomic) _Bool isPublic;
- (_Bool)hasRights;
@property(readonly, nonatomic) _Bool isPlayable;
@property(readonly, nonatomic) _Bool isPlayableOffline;
@property(readonly, nonatomic) _Bool isDownloaded;
- (void)updateDownloadedTrackCount;
- (_Bool)isEmpty;
- (id)downloadedTracks;
- (id)downloadedItems;
- (id)sortedTracks;
- (id)sortedItems;
- (id)sortedTags;
- (void)setName:(id)arg1;
- (id)asDictionary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

