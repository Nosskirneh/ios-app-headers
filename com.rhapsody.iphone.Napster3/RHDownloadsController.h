//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, NSFetchedResultsController, NSManagedObjectID, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString, RHDataController, RHInstanceCounter, RHMetricsController, ZDSDeferred;
@protocol OS_dispatch_queue;

@interface RHDownloadsController : NSObject
{
    _Bool _idleForPlayback;
    _Bool _shouldEmptyTrash;
    NSString *_downloadingTrackWithGuid;
    unsigned long long _playbackCacheSize;
    long long _state;
    NSOperationQueue *_downloadQueue;
    RHDataController *_dataController;
    NSFetchedResultsController *_tracksInCacheController;
    ZDSDeferred *_singleDeferredDownload;
    NSManagedObjectID *_singleDeferredDownloadLeaseId;
    NSMutableDictionary *_downloadDeferreds;
    NSMutableDictionary *_inProgressDataCache;
    NSMutableSet *_playbackAccessMemos;
    NSObject<OS_dispatch_queue> *_filesystemQueue;
    NSObject<OS_dispatch_queue> *_checkForTrackChangeQueue;
    unsigned long long _backgroundTaskIdentifier;
    id _statusMessageId;
    NSDate *_lastStatusUpdate;
    RHInstanceCounter *_debugReferenceCounter;
}

+ (id)pathForAlarmTracksWithFileManager:(id)arg1;
+ (id)pathForDownloadsWithFileManager:(id)arg1;
+ (id)pathForTrackCacheWithFileManager:(id)arg1;
+ (id)trashPathWithFileManager:(id)arg1;
@property(retain, nonatomic) RHInstanceCounter *debugReferenceCounter; // @synthesize debugReferenceCounter=_debugReferenceCounter;
@property(nonatomic) _Bool shouldEmptyTrash; // @synthesize shouldEmptyTrash=_shouldEmptyTrash;
@property(retain, nonatomic) NSDate *lastStatusUpdate; // @synthesize lastStatusUpdate=_lastStatusUpdate;
@property(retain, nonatomic) id statusMessageId; // @synthesize statusMessageId=_statusMessageId;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *checkForTrackChangeQueue; // @synthesize checkForTrackChangeQueue=_checkForTrackChangeQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *filesystemQueue; // @synthesize filesystemQueue=_filesystemQueue;
@property(retain, nonatomic) NSMutableSet *playbackAccessMemos; // @synthesize playbackAccessMemos=_playbackAccessMemos;
@property(retain, nonatomic) NSMutableDictionary *inProgressDataCache; // @synthesize inProgressDataCache=_inProgressDataCache;
@property(retain, nonatomic) NSMutableDictionary *downloadDeferreds; // @synthesize downloadDeferreds=_downloadDeferreds;
@property(retain, nonatomic) NSManagedObjectID *singleDeferredDownloadLeaseId; // @synthesize singleDeferredDownloadLeaseId=_singleDeferredDownloadLeaseId;
@property(retain, nonatomic) ZDSDeferred *singleDeferredDownload; // @synthesize singleDeferredDownload=_singleDeferredDownload;
@property(retain, nonatomic) NSFetchedResultsController *tracksInCacheController; // @synthesize tracksInCacheController=_tracksInCacheController;
@property(nonatomic) __weak RHDataController *dataController; // @synthesize dataController=_dataController;
@property(retain, nonatomic) NSOperationQueue *downloadQueue; // @synthesize downloadQueue=_downloadQueue;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) unsigned long long playbackCacheSize; // @synthesize playbackCacheSize=_playbackCacheSize;
@property(copy, nonatomic) NSString *downloadingTrackWithGuid; // @synthesize downloadingTrackWithGuid=_downloadingTrackWithGuid;
@property(readonly, nonatomic, getter=isIdleForPlayback) _Bool idleForPlayback; // @synthesize idleForPlayback=_idleForPlayback;
- (void).cxx_destruct;
- (unsigned long long)downloadingQuality;
- (unsigned long long)calculateStreamingQuality;
- (_Bool)canRedownloadTracksInCache;
- (id)reachabilityService;
@property(readonly, nonatomic) RHMetricsController *metricsController;
- (id)accountController;
- (void)endBackgroundTaskWithIdentifier:(unsigned long long)arg1;
- (void)postNotification:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)synchronizePlaybackCache;
- (void)purgeTracksFromPlaybackCache:(id)arg1;
- (id)purgableTracksInCachedTracks:(id)arg1;
- (void)clearAllTracksInCache;
- (void)controllerDidChangeContent:(id)arg1;
- (void)updateLastPlaybackAccessForTrack:(id)arg1;
- (void)setSingleDeferredDownload:(id)arg1 withLease:(id)arg2 trackGuid:(id)arg3;
- (id)cancelAllDownloads;
- (id)emptyDeferred;
- (void)cancelDownloadDeferredForLease:(id)arg1;
- (void)resumeDownloads;
- (void)pauseDownloads;
- (id)requestForOutstandingLeasesInContext:(id)arg1;
- (unsigned long long)countOfOutstandingLeasesInContext:(id)arg1;
- (id)requestForOutstandingTracksInContext:(id)arg1;
- (unsigned long long)countOfOutstandingTracksInContext:(id)arg1;
- (id)firstOutstandingTrackForQueueInContext:(id)arg1;
- (id)firstOutstandingTrackInAlbum:(id)arg1 context:(id)arg2;
- (id)firstOutstandingTrackInPlaylist:(id)arg1 context:(id)arg2;
- (id)firstOutstandingTrackInLease:(id)arg1 context:(id)arg2;
- (id)firstLeaseWithStatus:(int)arg1 context:(id)arg2;
- (id)deferredUpdateOfTrack:(id)arg1 lease:(id)arg2 downloaded:(id)arg3 audioQuality:(unsigned long long)arg4;
- (id)deferredQueuedTrackDownload:(id)arg1 lease:(id)arg2 audioQuality:(unsigned long long)arg3 cacheKey:(id)arg4;
- (void)logDownloadLatencyForTrackGuid:(id)arg1;
- (void)downloadQueuedTrack:(id)arg1 forLease:(id)arg2;
- (void)idleProcessQueuedDownloads;
- (void)postNotificationName:(id)arg1;
- (id)oneTimeURLForBaseURL:(id)arg1 expirationDate:(id)arg2;
- (id)oneTimeURLForTrack:(id)arg1 audioQuality:(unsigned long long)arg2;
- (id)deferredDownloadForTrack:(id)arg1 downloadLocation:(long long)arg2 audioQuality:(unsigned long long)arg3 cachedTrackDataPromise:(id *)arg4;
- (_Bool)lockAndMoveTrackData:(id)arg1 toFilePath:(id)arg2 fileManager:(id)arg3 error:(id *)arg4;
- (id)trashPathForKey:(id)arg1 fileManager:(id)arg2;
- (id)alarmTracksPathForKey:(id)arg1 fileManager:(id)arg2;
- (id)downloadsPathForKey:(id)arg1 fileManager:(id)arg2;
- (id)cachePathForKey:(id)arg1 fileManager:(id)arg2;
- (void)appWillEnterForeground:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (id)appDelegate;
- (_Bool)isDataControllerAvailable;
- (_Bool)shouldProcessDownloads;
- (_Bool)isReachableViaWiFi;
- (void)downloadOverWifiChanged:(id)arg1;
- (void)didSignIn:(id)arg1;
- (void)setPendingDownload:(id)arg1;
- (id)deferredDownloadDataFromCachedTrackDataPromise:(id)arg1 cacheKey:(id)arg2;
- (id)deferredDownloadedFileForTrack:(id)arg1 lease:(id)arg2 downloadLocation:(long long)arg3 audioQuality:(unsigned long long)arg4 cachedTrackDataPromise:(id *)arg5;
- (id)deferredDownloadedDataForTrack:(id)arg1 audioQuality:(unsigned long long)arg2;
- (id)deferredCompleteFilesystemDataForCacheKey:(id)arg1 withAudioQuality:(unsigned long long)arg2;
- (id)cachedTrackDataForKey:(id)arg1 fileManager:(id)arg2;
- (void)emptyTrashIfNeeded;
- (id)deferredTracksRemovedFromDownloads:(id)arg1 dueToRevokedRights:(_Bool)arg2;
- (id)deferredTracksRemovedFromDownloads:(id)arg1;
- (_Bool)idleForPlayback;
@property(readonly, nonatomic, getter=isIdle) _Bool idle;
- (void)processQueuedDownloadsAfter:(double)arg1;
- (id)playbackDataForTrack:(id)arg1 audioQuality:(unsigned long long)arg2;
- (id)deleteAlarmCachedDataNotContainedWithinTracks:(id)arg1 audioQuality:(unsigned long long)arg2;
- (id)alarmCachedDataForTrack:(id)arg1 audioQuality:(unsigned long long)arg2;
- (_Bool)isAlarmCahcedDataAvailableForTrack:(id)arg1;
- (void)startupSynchronizePlaybackCache;
- (void)streamingQualityModelChanged;
- (void)userModelDidChange:(id)arg1;
@property(nonatomic) unsigned long long streamingQuality;
- (void)dealloc;
- (void)unregisterEverything;
- (id)initWithDataController:(id)arg1;

@end

