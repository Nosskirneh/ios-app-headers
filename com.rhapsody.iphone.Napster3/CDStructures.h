//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSMutableData;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AVConnectionType;

struct AVPlayerState;

struct AcquisitionParams {
    _Bool _field1;
    int _field2;
    float _field3;
    int _field4;
    float _field5;
    float _field6;
    int _field7;
};

struct AcquisitionScorer;

struct Allocator<capu::GenericListNode<EtchRuntimeListener *>>;

struct Allocator<capu::GenericListNode<const EtchObjectType *>>;

struct Array<float, -1, 1, 0, -1, 1> {
    struct DenseStorage<float, -1, -1, 1, 0> _field1;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioModemDecoder {
    struct unique_ptr<audio_whispernet::WhispernetDecoder, std::__1::default_delete<audio_whispernet::WhispernetDecoder>> _field1;
    struct unique_ptr<audio_whispernet_dtmf::DtmfDecoder, std::__1::default_delete<audio_whispernet_dtmf::DtmfDecoder>> _field2;
    int _field3;
    int _field4;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct BMWRemotingClientFactory {
    CDUnknownFunctionPointerType *_field1;
};

struct ByteSymbolConverter {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CCCubeCell {
    unsigned int hitCount;
    double redAcc;
    double greenAcc;
    double blueAcc;
};

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct Comparator;

struct ConsoleLogAppender {
    CDUnknownFunctionPointerType *_field1;
    struct Mutex _field2;
};

struct ControllerEventListenerPrivate {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct DecodeTokenParams {
    int _field1;
    _Bool _field2;
    float _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
    int _field11;
};

struct DenseStorage<float, -1, -1, -1, 0> {
    float *_field1;
    long long _field2;
    long long _field3;
};

struct DenseStorage<float, -1, -1, 1, 0> {
    float *_field1;
    long long _field2;
};

struct DenseStorage<std::__1::complex<float>, -1, -1, -1, 1> {
    struct complex<float> *_field1;
    long long _field2;
    long long _field3;
};

struct DtmfDecoder {
    struct DtmfDecoderParams _field1;
    struct ByteSymbolConverter _field2;
    struct TokenSelector _field3;
    int _field4;
    int _field5;
    int _field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
    float _field11;
    int _field12;
    int _field13;
    struct unique_ptr<audio_dsp::Resampler<float>, std::__1::default_delete<audio_dsp::Resampler<float>>> _field14;
    struct vector<audio_whispernet_dtmf::ToneStrengthFilter, std::__1::allocator<audio_whispernet_dtmf::ToneStrengthFilter>> _field15;
    struct vector<audio_whispernet::StreamBuffer<float>, std::__1::allocator<audio_whispernet::StreamBuffer<float>>> _field16;
    int _field17;
    _Bool _field18;
};

struct DtmfDecoderParams {
    struct DtmfEncoderParams _field1;
    float _field2;
    float _field3;
    struct ToneNormalizationParams _field4;
    int _field5;
    float _field6;
    float _field7;
    int _field8;
    int _field9;
    float _field10;
};

struct DtmfEncoderParams {
    float _field1;
    int _field2;
    float _field3;
    vector_f9ed6fc8 _field4;
    vector_f9ed6fc8 _field5;
    int _field6;
    struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> _field7;
    int _field8;
    int _field9;
    _Bool _field10;
    float _field11;
};

struct EtchAsyncResult<EtchBool>;

struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>;

struct EtchAsyncResult<EtchInt32>;

struct EtchAsyncResult<EtchNativeArray<signed char>>;

struct EtchAsyncResult<EtchObject>;

struct EtchAsyncResult<EtchString>;

struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>;

struct EtchAsyncResultNone;

struct EtchBool;

struct EtchByte;

struct EtchComparator<EtchString>;

struct EtchDeliveryService;

struct EtchException;

struct EtchFloat;

struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    struct HashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> _field3;
};

struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>;

struct EtchInt32 {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    int _field3;
};

struct EtchLogger {
    CDUnknownFunctionPointerType *_field1;
    struct HashSet<capu::LogContext *, capu::Comparator, capu::CapuDefaultHashFunction> _field2;
    struct HashSet<capu::ILogAppender *, capu::Comparator, capu::CapuDefaultHashFunction> _field3;
    struct LogContext *_field4;
    struct LogContext *_field5;
    struct LogContext *_field6;
    struct LogContext *_field7;
    struct LogContext *_field8;
    struct LogContext *_field9;
    struct LogContext *_field10;
    struct LogContext *_field11;
};

struct EtchNativeArray<capu::SmartPointer<EtchObject>>;

struct EtchNativeArray<signed char>;

struct EtchObject;

struct EtchObjectType;

struct EtchResources {
    struct EtchResources *_field1;
    struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> _field2;
};

struct EtchRuntime {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct EtchLogger _field3;
    struct ConsoleLogAppender _field4;
    unsigned long long _field5;
    struct Mutex _field6;
    struct List<EtchRuntimeListener *, capu::Allocator<capu::GenericListNode<EtchRuntimeListener *>>, capu::Comparator> _field7;
};

struct EtchRuntimeListener;

struct EtchSessionData;

struct EtchShort;

struct EtchStack;

struct EtchString {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    char *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct EtchValueFactory;

struct ExtAudioConverterSettings {
    struct AudioStreamBasicDescription _field1;
    struct AudioStreamBasicDescription _field2;
    struct OpaqueExtAudioFile *_field3;
    struct __CFString *_field4;
    struct OpaqueExtAudioFile *_field5;
    struct AudioStreamPacketDescription *_field6;
};

struct FIRFilter<std::__1::complex<float>, std::__1::complex<float>> {
    struct vector<std::__1::complex<float>, std::__1::allocator<std::__1::complex<float>>> _field1;
    struct vector<std::__1::complex<float>, std::__1::allocator<std::__1::complex<float>>> _field2;
};

struct GCKCastMessageSegmenterOutgoingMessage {
    Class _field1;
    _Bool _field2;
    _Bool _field3;
    id _field4;
    id _field5;
    unsigned long long _field6;
};

struct GenericListNode<EtchRuntimeListener *> {
    struct EtchRuntimeListener *_field1;
    struct GenericListNode<EtchRuntimeListener *> *_field2;
    struct GenericListNode<EtchRuntimeListener *> *_field3;
};

struct GenericListNode<const EtchObjectType *> {
    struct EtchObjectType *_field1;
    struct GenericListNode<const EtchObjectType *> *_field2;
    struct GenericListNode<const EtchObjectType *> *_field3;
};

struct HashSet<capu::ILogAppender *, capu::Comparator, capu::CapuDefaultHashFunction> {
    struct HashTable<capu::ILogAppender *, char, capu::Comparator, capu::CapuDefaultHashFunction> _field1;
};

struct HashSet<capu::LogContext *, capu::Comparator, capu::CapuDefaultHashFunction> {
    struct HashTable<capu::LogContext *, char, capu::Comparator, capu::CapuDefaultHashFunction> _field1;
};

struct HashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned long long _field9;
    _Bool _field10;
    struct EtchComparator<EtchString> _field11;
};

struct HashTable<capu::ILogAppender *, char, capu::Comparator, capu::CapuDefaultHashFunction> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned long long _field9;
    _Bool _field10;
    struct Comparator _field11;
};

struct HashTable<capu::LogContext *, char, capu::Comparator, capu::CapuDefaultHashFunction> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned long long _field9;
    _Bool _field10;
    struct Comparator _field11;
};

struct HashTableEntry;

struct IDBclConnection {
    CDUnknownFunctionPointerType *_field1;
    struct EtchSessionData *_field2;
    id _field3;
    id _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct IDEtchSessionCppAdaptor {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct List<EtchRuntimeListener *, capu::Allocator<capu::GenericListNode<EtchRuntimeListener *>>, capu::Comparator> {
    CDUnknownFunctionPointerType *_field1;
    struct GenericListNode<EtchRuntimeListener *> _field2;
    unsigned long long _field3;
    struct Comparator _field4;
    struct Allocator<capu::GenericListNode<EtchRuntimeListener *>> _field5;
};

struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> {
    CDUnknownFunctionPointerType *_field1;
    struct GenericListNode<const EtchObjectType *> _field2;
    unsigned long long _field3;
    struct Comparator _field4;
    struct Allocator<capu::GenericListNode<const EtchObjectType *>> _field5;
};

struct LogContext;

struct LogLevel;

struct MapMode;

struct Matrix<float, -1, -1, 0, -1, -1> {
    struct DenseStorage<float, -1, -1, -1, 0> _field1;
};

struct Matrix<std::__1::complex<float>, -1, -1, 1, -1, -1> {
    struct DenseStorage<std::__1::complex<float>, -1, -1, -1, 1> _field1;
};

struct MediaItem {
    CDUnknownFunctionPointerType *_vptr$MediaItem;
    struct MediaItemImpl *m_impl;
};

struct MediaItemImpl;

struct MediaItemList {
    CDUnknownFunctionPointerType *_vptr$MediaItemList;
    struct MediaItemListImpl *m_impl;
};

struct MediaItemListImpl;

struct Mutex {
    struct _opaque_pthread_mutex_t _field1;
    struct _opaque_pthread_mutexattr_t {
        long long _field1;
        char _field2[8];
    } _field2;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct OpaqueAudioConverter;

struct OpaqueAudioFileID;

struct OpaqueExtAudioFile;

struct Player {
    CDUnknownFunctionPointerType *_vptr$Player;
    struct PlayerPtr *m_ptr;
};

struct PlayerManager {
    struct PlayerManagerData *_field1;
};

struct PlayerManagerData;

struct PlayerPtr;

struct Playlist {
    CDUnknownFunctionPointerType *_vptr$Playlist;
    struct PlaylistPtr *m_ptr;
};

struct PlaylistData {
    int error;
    struct MediaItemList mediaItemList;
    int start;
};

struct PlaylistPtr;

struct PostprocessAcquisitionParams {
    int _field1;
    int _field2;
    float _field3;
};

struct RHMIMetaData;

struct RHMIResourceType;

struct RHMIVersion;

struct RemoteBMWRemotingServer {
    CDUnknownFunctionPointerType *_field1;
    struct EtchRuntime *_field2;
    struct EtchDeliveryService *_field3;
    struct EtchValueFactory *_field4;
    struct EtchStack *_field5;
    CDUnknownFunctionPointerType *_field6;
    struct EtchInt32 _field7;
    struct EtchInt32 _field8;
    struct EtchRuntime *_field9;
    CDUnknownFunctionPointerType *_field10;
    CDUnknownFunctionPointerType *_field11;
    struct EtchInt32 _field12;
    struct EtchInt32 _field13;
};

struct Resampler<float>;

struct Resampler<std::__1::complex<float>>;

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct SmartPointer<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>> {
    struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchBool> {
    struct EtchBool *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchByte> {
    struct EtchByte *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchException> {
    struct EtchException *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchFloat> {
    struct EtchFloat *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> {
    struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchInt32> {
    struct EtchInt32 *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchNativeArray<capu::SmartPointer<EtchObject>>> {
    struct EtchNativeArray<capu::SmartPointer<EtchObject>> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchObject> {
    struct EtchObject *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchShort> {
    struct EtchShort *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchString> {
    struct EtchString *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    unsigned long long *_field2;
};

struct StreamBuffer<float> {
    vector_f9ed6fc8 _field1;
    int _field2;
};

struct SymbolWaveCoder {
    CDUnknownFunctionPointerType *_field1;
    struct SymbolWaveCoderParams _field2;
    int _field3;
    int _field4;
    int _field5;
    vector_f9ed6fc8 _field6;
    struct Matrix<float, -1, -1, 0, -1, -1> _field7;
    struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> _field8;
};

struct SymbolWaveCoderParams {
    vector_f9ed6fc8 _field1;
    float _field2;
    int _field3;
    float _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    float _field9;
};

struct TokenSelector {
    struct TokenSelectorParams _field1;
    int _field2;
};

struct TokenSelectorParams {
    int _field1;
    int _field2;
    int _field3;
    _Bool _field4;
    int _field5;
    int _field6;
    int _field7;
    float _field8;
};

struct TokenSymbolConverter;

struct ToneNormalizationParams {
    float _field1;
    float _field2;
    float _field3;
};

struct ToneStrengthFilter;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct VersionInfo;

struct VoicePriorityType;

struct WhispernetDecoder {
    struct unique_ptr<audio_whispernet::SymbolWaveCoder, std::__1::default_delete<audio_whispernet::SymbolWaveCoder>> _field1;
    struct WhispernetDecoderParams _field2;
    struct TokenSelector _field3;
    struct unique_ptr<audio_whispernet::TokenSymbolConverter, std::__1::default_delete<audio_whispernet::TokenSymbolConverter>> _field4;
    float _field5;
    vector_f9ed6fc8 _field6;
    vector_f9ed6fc8 _field7;
    struct Matrix<std::__1::complex<float>, -1, -1, 1, -1, -1> _field8;
    int _field9;
    int _field10;
    struct Array<float, -1, 1, 0, -1, 1> _field11;
    vector_f9ed6fc8 _field12;
    struct Matrix<std::__1::complex<float>, -1, -1, 1, -1, -1> _field13;
    struct Array<float, -1, 1, 0, -1, 1> _field14;
    struct StreamBuffer<float> _field15;
    struct complex<float> _field16;
    struct complex<float> _field17;
    struct unique_ptr<audio_dsp::Resampler<std::__1::complex<float>>, std::__1::default_delete<audio_dsp::Resampler<std::__1::complex<float>>>> _field18;
    struct FIRFilter<std::__1::complex<float>, std::__1::complex<float>> _field19;
    struct StreamBuffer<float> _field20[2];
    struct unique_ptr<audio_whispernet::AcquisitionScorer, std::__1::default_delete<audio_whispernet::AcquisitionScorer>> _field21;
    struct StreamBuffer<float> _field22;
    struct map<int, Eigen::Array<float, -1, 1, 0, -1, 1>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, Eigen::Array<float, -1, 1, 0, -1, 1>>>> _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    float _field28;
    float _field29;
    int _field30;
    _Bool _field31;
};

struct WhispernetDecoderParams {
    float _field1;
    _Bool _field2;
    struct AcquisitionParams _field3;
    struct PostprocessAcquisitionParams _field4;
    struct DecodeTokenParams _field5;
};

struct Zone {
    CDUnknownFunctionPointerType *_vptr$Zone;
    struct ZonePtr *m_ptr;
};

struct ZonePtr;

struct _DDRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct complex<float> {
    float _field1;
    float _field2;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct ifaddrs {
    struct ifaddrs *_field1;
    char *_field2;
    unsigned int _field3;
    struct sockaddr *_field4;
    struct sockaddr *_field5;
    struct sockaddr *_field6;
    void *_field7;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct map<int, Eigen::Array<float, -1, 1, 0, -1, 1>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, Eigen::Array<float, -1, 1, 0, -1, 1>>>> {
    struct __tree<std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct stat {
    int st_dev;
    unsigned short st_mode;
    unsigned short st_nlink;
    unsigned long long st_ino;
    unsigned int st_uid;
    unsigned int st_gid;
    int st_rdev;
    struct timespec st_atimespec;
    struct timespec st_mtimespec;
    struct timespec st_ctimespec;
    struct timespec st_birthtimespec;
    long long st_size;
    long long st_blocks;
    int st_blksize;
    unsigned int st_flags;
    unsigned int st_gen;
    int st_lspare;
    long long st_qspare[2];
};

struct timespec {
    long long tv_sec;
    long long tv_nsec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct unique_ptr<audio_dsp::Resampler<float>, std::__1::default_delete<audio_dsp::Resampler<float>>> {
    struct __compressed_pair<audio_dsp::Resampler<float>*, std::__1::default_delete<audio_dsp::Resampler<float>>> {
        struct Resampler<float> *_field1;
    } _field1;
};

struct unique_ptr<audio_dsp::Resampler<std::__1::complex<float>>, std::__1::default_delete<audio_dsp::Resampler<std::__1::complex<float>>>> {
    struct __compressed_pair<audio_dsp::Resampler<std::__1::complex<float>>*, std::__1::default_delete<audio_dsp::Resampler<std::__1::complex<float>>>> {
        struct Resampler<std::__1::complex<float>> *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet::AcquisitionScorer, std::__1::default_delete<audio_whispernet::AcquisitionScorer>> {
    struct __compressed_pair<audio_whispernet::AcquisitionScorer *, std::__1::default_delete<audio_whispernet::AcquisitionScorer>> {
        struct AcquisitionScorer *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet::SymbolWaveCoder, std::__1::default_delete<audio_whispernet::SymbolWaveCoder>> {
    struct __compressed_pair<audio_whispernet::SymbolWaveCoder *, std::__1::default_delete<audio_whispernet::SymbolWaveCoder>> {
        struct SymbolWaveCoder *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet::TokenSymbolConverter, std::__1::default_delete<audio_whispernet::TokenSymbolConverter>> {
    struct __compressed_pair<audio_whispernet::TokenSymbolConverter *, std::__1::default_delete<audio_whispernet::TokenSymbolConverter>> {
        struct TokenSymbolConverter *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet::WhispernetDecoder, std::__1::default_delete<audio_whispernet::WhispernetDecoder>> {
    struct __compressed_pair<audio_whispernet::WhispernetDecoder *, std::__1::default_delete<audio_whispernet::WhispernetDecoder>> {
        struct WhispernetDecoder *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet_dtmf::DtmfDecoder, std::__1::default_delete<audio_whispernet_dtmf::DtmfDecoder>> {
    struct __compressed_pair<audio_whispernet_dtmf::DtmfDecoder *, std::__1::default_delete<audio_whispernet_dtmf::DtmfDecoder>> {
        struct DtmfDecoder *_field1;
    } _field1;
};

struct vector<audio_whispernet::StreamBuffer<float>, std::__1::allocator<audio_whispernet::StreamBuffer<float>>> {
    struct StreamBuffer<float> *_field1;
    struct StreamBuffer<float> *_field2;
    struct __compressed_pair<audio_whispernet::StreamBuffer<float>*, std::__1::allocator<audio_whispernet::StreamBuffer<float>>> {
        struct StreamBuffer<float> *_field1;
    } _field3;
};

struct vector<audio_whispernet_dtmf::ToneStrengthFilter, std::__1::allocator<audio_whispernet_dtmf::ToneStrengthFilter>> {
    struct ToneStrengthFilter *_field1;
    struct ToneStrengthFilter *_field2;
    struct __compressed_pair<audio_whispernet_dtmf::ToneStrengthFilter *, std::__1::allocator<audio_whispernet_dtmf::ToneStrengthFilter>> {
        struct ToneStrengthFilter *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>>;

struct vector<std::__1::complex<float>, std::__1::allocator<std::__1::complex<float>>> {
    struct complex<float> *_field1;
    struct complex<float> *_field2;
    struct __compressed_pair<std::__1::complex<float>*, std::__1::allocator<std::__1::complex<float>>> {
        struct complex<float> *_field1;
    } _field3;
};

struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
    vector_f9ed6fc8 *_field1;
    vector_f9ed6fc8 *_field2;
    struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float>>*, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
        vector_f9ed6fc8 *_field1;
    } _field3;
};

struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
    struct vector<int, std::__1::allocator<int>> *_field1;
    struct vector<int, std::__1::allocator<int>> *_field2;
    struct __compressed_pair<std::__1::vector<int, std::__1::allocator<int>>*, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
        struct vector<int, std::__1::allocator<int>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
} CDStruct_54859f51;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    double broadcastRequestTimeout;
    double applicationDeleteTimeout;
    double applicationStartTimeout;
    unsigned long long maxConnectedAppsCount;
    unsigned long long defaultStubButtonWeight;
} CDStruct_35e1d499;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    struct AudioStreamBasicDescription inputFormat;
    struct OpaqueAudioFileID *inputData;
    _Bool hitEOF;
    unsigned long long inputPacketIndex;
    unsigned long long inputPacketsLeft;
    unsigned long long inputPacketCount;
    unsigned int inputPacketMaxSize;
    _Bool inputPrepared;
    NSMutableData *inputPacketDescriptionBuffer;
    unsigned int silencePacketsSent;
    unsigned int silencePacketsWanted;
    struct OpaqueAudioConverter *audioConverter;
    unsigned int outputPacketsPerBuffer;
    NSMutableData *audioSourceDataBuffer;
    unsigned long long outputPacketsLeft;
    unsigned long long outputBytesConsumed;
} CDStruct_aba92165;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

// Template types
typedef struct SmartPointer<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    unsigned long long *_field2;
} SmartPointer_40b79cb6;

typedef struct SmartPointer<EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>> {
    struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> *_field1;
    unsigned long long *_field2;
} SmartPointer_7c4c2294;

typedef struct SmartPointer<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    unsigned long long *_field2;
} SmartPointer_9c6f0a57;

typedef struct SmartPointer<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    unsigned long long *_field2;
} SmartPointer_22dd72f2;

typedef struct SmartPointer<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    unsigned long long *_field2;
} SmartPointer_24816b3b;

typedef struct SmartPointer<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    unsigned long long *_field2;
} SmartPointer_f678d524;

typedef struct SmartPointer<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    unsigned long long *_field2;
} SmartPointer_68208fab;

typedef struct SmartPointer<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    unsigned long long *_field2;
} SmartPointer_a510579c;

typedef struct SmartPointer<EtchBool> {
    struct EtchBool *_field1;
    unsigned long long *_field2;
} SmartPointer_56a342d9;

typedef struct SmartPointer<EtchByte> {
    struct EtchByte *_field1;
    unsigned long long *_field2;
} SmartPointer_7914d76a;

typedef struct SmartPointer<EtchException> {
    struct EtchException *_field1;
    unsigned long long *_field2;
} SmartPointer_36f90cf0;

typedef struct SmartPointer<EtchFloat> {
    struct EtchFloat *_field1;
    unsigned long long *_field2;
} SmartPointer_5c6f1d80;

typedef struct SmartPointer<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> {
    struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash> *_field1;
    unsigned long long *_field2;
} SmartPointer_0ac90d3f;

typedef struct SmartPointer<EtchInt32> {
    struct EtchInt32 *_field1;
    unsigned long long *_field2;
} SmartPointer_25c440db;

typedef struct SmartPointer<EtchNativeArray<capu::SmartPointer<EtchObject>>> {
    struct EtchNativeArray<capu::SmartPointer<EtchObject>> *_field1;
    unsigned long long *_field2;
} SmartPointer_c35a0fc3;

typedef struct SmartPointer<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    unsigned long long *_field2;
} SmartPointer_4c5e170f;

typedef struct SmartPointer<EtchObject> {
    struct EtchObject *_field1;
    unsigned long long *_field2;
} SmartPointer_65720f25;

typedef struct SmartPointer<EtchShort> {
    struct EtchShort *_field1;
    unsigned long long *_field2;
} SmartPointer_ba4b74eb;

typedef struct SmartPointer<EtchString> {
    struct EtchString *_field1;
    unsigned long long *_field2;
} SmartPointer_f5ebf141;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    unsigned long long *_field2;
} SmartPointer_3c0c000b;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    unsigned long long *_field2;
} SmartPointer_ae5953d7;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    unsigned long long *_field2;
} SmartPointer_20a53774;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    unsigned long long *_field2;
} SmartPointer_1deffe67;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    unsigned long long *_field2;
} SmartPointer_ecc263ad;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    unsigned long long *_field2;
} SmartPointer_8c758832;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    unsigned long long *_field2;
} SmartPointer_0a136723;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    unsigned long long *_field2;
} SmartPointer_ae2b53a9;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    unsigned long long *_field2;
} SmartPointer_d9d1298e;

typedef struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
} vector_f9ed6fc8;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
} vector_5b3bfa18;

