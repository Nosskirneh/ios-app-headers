//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MHWMigrationManagerDelegate-Protocol.h"
#import "RHDownloadLeasesDataService-Protocol.h"
#import "RHMetadataService-Protocol.h"
#import "RHPartnerReferalDataService-Protocol.h"
#import "RHPlaylistLoungeDataService-Protocol.h"
#import "RHProfilesService-Protocol.h"
#import "RHRecentPlaybackDataService-Protocol.h"
#import "RHReferralService-Protocol.h"
#import "RHRequestExecutor-Protocol.h"
#import "RHTasteService-Protocol.h"
#import "RHTwitterHack-Protocol.h"

@class NSCache, NSManagedObjectContext, NSManagedObjectModel, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString, NSURLSession, RHDevSettingsController, RHDownloadsController, RHInstanceCounter, RHMetricsController, RHNavigationService, RHOAuthService, RHPartnerReferal, RHSocialController, ZDSDeferred, _TtC7Napster13AppboyService, _TtC7Napster17AccountController, _TtC7Napster21CrashAnalyticsService;
@protocol ImageProviderOBJC, OS_dispatch_queue, RHMemberAccessRights, RHTimeService;

@interface RHDataController : NSObject <RHProfilesService, RHTasteService, RHRequestExecutor, MHWMigrationManagerDelegate, RHMetadataService, RHPlaylistLoungeDataService, RHTwitterHack, RHReferralService, RHPartnerReferalDataService, RHRecentPlaybackDataService, RHDownloadLeasesDataService>
{
    _Bool _reset;
    _TtC7Napster17AccountController *_accountController;
    NSOperationQueue *_authenticatedNapiQueue;
    NSManagedObjectContext *_mainContext;
    RHDownloadsController *_downloadsController;
    NSString *_deletedPath;
    NSMutableDictionary *_stationSessions;
    NSMutableDictionary *_activeDeferreds;
    NSOperationQueue *_updateQueue;
    NSOperationQueue *_payloadQueue;
    NSManagedObjectContext *_privateContext;
    RHDevSettingsController *_devSettingsController;
    NSMutableSet *_artistStubGUIDs;
    NSMutableSet *_albumStubGUIDs;
    NSMutableSet *_removedRightsTrackGUIDs;
    RHMetricsController *_metricsController;
    _TtC7Napster13AppboyService *_appboyService;
    RHNavigationService *_navigationService;
    _TtC7Napster21CrashAnalyticsService *_crashService;
    RHInstanceCounter *_debugReferenceCounter;
    NSObject<OS_dispatch_queue> *_playlistsSerialQueue;
    NSCache *_lastRefreshed;
    id <RHTimeService> _timeService;
    RHOAuthService *_oauthService;
    NSURLSession *_session;
    NSManagedObjectModel *_managedObjectModel;
    RHSocialController *_socialController;
    id <RHMemberAccessRights> _memberAccessRights;
    id <ImageProviderOBJC> _imageProvider;
}

+ (id)rejectedPromiseForRefreshWithErrorCode:(int)arg1;
@property(readonly, nonatomic) id <ImageProviderOBJC> imageProvider; // @synthesize imageProvider=_imageProvider;
@property(readonly, nonatomic) id <RHMemberAccessRights> memberAccessRights; // @synthesize memberAccessRights=_memberAccessRights;
@property(readonly, nonatomic) RHSocialController *socialController; // @synthesize socialController=_socialController;
@property(readonly, nonatomic) NSManagedObjectModel *managedObjectModel; // @synthesize managedObjectModel=_managedObjectModel;
@property(readonly, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(retain, nonatomic) RHOAuthService *oauthService; // @synthesize oauthService=_oauthService;
@property(retain, nonatomic) id <RHTimeService> timeService; // @synthesize timeService=_timeService;
@property(retain, nonatomic) NSCache *lastRefreshed; // @synthesize lastRefreshed=_lastRefreshed;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *playlistsSerialQueue; // @synthesize playlistsSerialQueue=_playlistsSerialQueue;
@property(retain, nonatomic) RHInstanceCounter *debugReferenceCounter; // @synthesize debugReferenceCounter=_debugReferenceCounter;
@property(retain, nonatomic) _TtC7Napster21CrashAnalyticsService *crashService; // @synthesize crashService=_crashService;
@property(retain, nonatomic) RHNavigationService *navigationService; // @synthesize navigationService=_navigationService;
@property(retain, nonatomic) _TtC7Napster13AppboyService *appboyService; // @synthesize appboyService=_appboyService;
@property(retain, nonatomic) RHMetricsController *metricsController; // @synthesize metricsController=_metricsController;
@property(retain, nonatomic) NSMutableSet *removedRightsTrackGUIDs; // @synthesize removedRightsTrackGUIDs=_removedRightsTrackGUIDs;
@property(retain, nonatomic) NSMutableSet *albumStubGUIDs; // @synthesize albumStubGUIDs=_albumStubGUIDs;
@property(retain, nonatomic) NSMutableSet *artistStubGUIDs; // @synthesize artistStubGUIDs=_artistStubGUIDs;
@property(retain, nonatomic) RHDevSettingsController *devSettingsController; // @synthesize devSettingsController=_devSettingsController;
@property(retain, nonatomic) NSManagedObjectContext *privateContext; // @synthesize privateContext=_privateContext;
@property(retain, nonatomic) NSOperationQueue *payloadQueue; // @synthesize payloadQueue=_payloadQueue;
@property(retain, nonatomic) NSOperationQueue *updateQueue; // @synthesize updateQueue=_updateQueue;
@property(retain, nonatomic) NSMutableDictionary *activeDeferreds; // @synthesize activeDeferreds=_activeDeferreds;
@property(retain, nonatomic) NSMutableDictionary *stationSessions; // @synthesize stationSessions=_stationSessions;
@property(nonatomic, getter=isReset) _Bool reset; // @synthesize reset=_reset;
@property(copy, nonatomic) NSString *deletedPath; // @synthesize deletedPath=_deletedPath;
@property(retain, nonatomic) RHDownloadsController *downloadsController; // @synthesize downloadsController=_downloadsController;
@property(retain, nonatomic) NSManagedObjectContext *mainContext; // @synthesize mainContext=_mainContext;
@property(retain, nonatomic) NSOperationQueue *authenticatedNapiQueue; // @synthesize authenticatedNapiQueue=_authenticatedNapiQueue;
@property(readonly, nonatomic) _TtC7Napster17AccountController *accountController; // @synthesize accountController=_accountController;
- (void).cxx_destruct;
@property(readonly, nonatomic) ZDSDeferred *accountControllerNapiCatalogId;
- (id)updateUser:(id)arg1 sortingForFollowedPlaylists:(long long)arg2;
- (id)updateUser:(id)arg1 sortingForPublicPlaylists:(long long)arg2;
- (_Bool)carModeContainsPlaylist:(id)arg1;
- (_Bool)carModeContainsAlbum:(id)arg1;
- (id)carModeRemoveStation:(id)arg1;
- (id)carModeRemovePlaylist:(id)arg1;
- (id)carModeRemoveAlbum:(id)arg1;
- (id)carModeRemoveTrack:(id)arg1;
- (id)carModeRemoveObject:(id)arg1;
- (id)carModeAddPlaylist:(id)arg1;
- (id)carModeAddAlbum:(id)arg1;
- (id)getCarTaggedContentModelObserver;
- (_Bool)kidsModeContainsStation:(id)arg1;
- (_Bool)kidsModeContainsPlaylist:(id)arg1;
- (_Bool)kidsModeContainsAlbum:(id)arg1;
- (_Bool)kidsModeContainsTrack:(id)arg1;
- (id)getTrackWithGuidController:(id)arg1;
- (id)getCarModeContentWithPromise:(id *)arg1 onlyDownloaded:(_Bool)arg2;
- (id)getKidsModeContentWithPromise:(id *)arg1 onlyDownloaded:(_Bool)arg2;
- (id)kidsModeRemoveStation:(id)arg1;
- (id)kidsModeRemovePlaylist:(id)arg1;
- (id)kidsModeRemoveAlbum:(id)arg1;
- (id)kidsModeRemoveTrack:(id)arg1;
- (id)kidsModeRemoveObject:(id)arg1;
- (id)kidsModeAddStation:(id)arg1;
- (id)kidsModeAddPlaylist:(id)arg1;
- (id)kidsModeAddAlbum:(id)arg1;
- (id)kidsModeAddTrack:(id)arg1;
- (id)kidsModeTagDateTrack:(id)arg1;
@property(readonly, nonatomic) RHPartnerReferal *validPartnerReferal;
@property(retain, nonatomic) RHPartnerReferal *partnerReferal;
- (id)deferredShortenURLForString:(id)arg1;
- (id)deferredShortenReferralLink;
- (id)napiPushPostRequestWithResourceString:(id)arg1 andPayload:(id)arg2;
- (id)canTwitterShareForRhapsody:(id)arg1;
- (void)didCreateCoreDataStackWithPSC:(id)arg1 didMigrateDatabase:(_Bool)arg2;
- (id)createLatestModelIdentifier;
- (id)createStoreModelIdentifier;
- (long long)calculateFreeSpaceInDevice;
- (id)calculateCurrentDatabaseSize;
- (void)migrationDidFinishWithError:(id)arg1 fromModelIdentifier:(id)arg2 toModelIdentifier:(id)arg3 startTimestamp:(double)arg4;
- (void)migrationManager:(id)arg1 userInfo:(id)arg2 didMigrateFromSourceModel:(id)arg3 toDestinationModel:(id)arg4 error:(id)arg5;
- (void)migrationWillStartFromModelIdentifier:(id)arg1 toModelIdentifier:(id)arg2;
- (id)migrationManager:(id)arg1 userInfo:(id)arg2 mappingModelsForSourceModel:(id)arg3 destinationModel:(id *)arg4 destinationModelName:(id *)arg5 error:(id *)arg6;
- (void)migrationManager:(id)arg1 userInfo:(id)arg2 migrationProgress:(float)arg3;
- (id)downloadedTracksOutsideFavoriteLimit;
- (id)downloadedTracksNotInFavorites;
- (void)syncDownloadsForDisallowedFavorites;
- (id)deferredGetAllRegisteredDevices;
- (id)fetchedResultsControllerWithRequest:(id)arg1 context:(id)arg2 sectionNameKeyPath:(id)arg3 cacheName:(id)arg4;
- (id)requestForEditorialHighlightWithCategory:(id)arg1;
- (id)requestForEditorialHighlightWithPredicate:(id)arg1;
- (id)requestForArtistsWithGuids:(id)arg1;
- (id)requestForArtistWithGuid:(id)arg1;
- (id)requestForAlbumWithGuid:(id)arg1;
- (id)requestForTrackWithGuid:(id)arg1;
- (void)didFailSessionValidation:(id)arg1;
- (void)didSignOut:(id)arg1;
- (void)didSignIn:(id)arg1;
- (void)currentLocaleDidChange:(id)arg1;
- (void)albumStubsProcessed:(id)arg1;
- (void)artistStubsProcessed:(id)arg1;
- (void)tracksWithRemovedRightsProcessed:(id)arg1;
- (id)editorialHighlightRequestForAssetType:(id)arg1 excludingAssetType:(id)arg2 genre:(id)arg3 excludingCategories:(id)arg4;
- (id)editorialHighlightRequestForAssetType:(id)arg1 genre:(id)arg2 excludingCategories:(id)arg3;
- (void)clearMemberData;
- (void)updateVariousArtistsNameForCurrentLocale;
- (id)affiliationsForGenre:(id)arg1 kind:(long long)arg2;
- (id)affiliationsForGenre:(id)arg1 kind:(long long)arg2 refreshPromise:(id *)arg3;
- (id)artistHighlightsWithKind:(long long)arg1 genre:(id)arg2;
- (id)artistHighlightsWithKind:(long long)arg1 genre:(id)arg2 refreshPromise:(id *)arg3;
- (id)trackHighlightsWithKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3;
- (id)trackHighlightsWithKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3 refreshPromise:(id *)arg4;
- (id)affiliationKindsForArtist:(id)arg1;
- (id)albumTypesForArtist:(id)arg1;
- (id)performRequest:(id)arg1;
- (id)refreshWithRequest:(id)arg1 input:(id)arg2 updates:(CDUnknownBlockType)arg3;
- (id)updateWithRequest:(id)arg1 input:(id)arg2 updates:(CDUnknownBlockType)arg3;
- (void)updateWithDeferred:(id)arg1 input:(id)arg2 updates:(CDUnknownBlockType)arg3;
- (id)promisedUpdateWithPayload:(id)arg1 range:(id)arg2 input:(id)arg3 updates:(CDUnknownBlockType)arg4;
- (id)deferredUpdateWithPayload:(id)arg1 range:(id)arg2 input:(id)arg3 updates:(CDUnknownBlockType)arg4;
- (id)payloadResponseWithRequest:(id)arg1 rangeStart:(unsigned long long)arg2;
- (id)deferredPayloadWithRequest:(id)arg1;
- (id)libraryServerRequestWithResource:(id)arg1;
- (id)speedwagonRequestWithResource:(id)arg1;
- (void)performUpdatesSynchronously:(CDUnknownBlockType)arg1;
- (id)libraryRequestWithMethod:(id)arg1;
- (id)authenticatedAccountMgmtRequestWithMethod:(id)arg1;
- (id)authenticatedPlaybackRequestWithMethod:(id)arg1;
- (id)metadataRequestWithMethod:(id)arg1;
- (_Bool)isLastRefreshedAtWithinLimits:(double)arg1 forKey:(id)arg2;
- (_Bool)isLastRefreshAtWithinLimitsForRequest:(id)arg1;
- (id)lastRefreshedAtForKey:(id)arg1;
- (void)saveLastRefreshedAtWithDeferred:(id)arg1 forKey:(id)arg2;
- (void)saveLastRefreshedAtForKey:(id)arg1;
- (void)saveLastRefreshedAtWithDeferred:(id)arg1 forRequest:(id)arg2;
- (void)removePendingDeferredForKey:(id)arg1;
- (id)pendingDeferredForKey:(id)arg1;
- (void)setPendingDeferred:(id)arg1 forKey:(id)arg2;
- (_Bool)getPromise:(id *)arg1 withPendingDeferredForKey:(id)arg2;
- (_Bool)getPromise:(id *)arg1 withPendingDeferredForRequest:(id)arg2;
- (_Bool)isRequestDiscardable:(id)arg1 pendingPromise:(id *)arg2;
- (id)deferredSideloadedStubArtists:(id)arg1;
- (id)deferredSideloadedStubAlbums:(id)arg1;
- (void)sideloadAllStubs;
- (void)cleanupTracksWithRemovedRights;
- (id)refreshDownloadedTrackRights;
- (void)devSettingsRevokeRightsForTracksInQueue;
- (id)deferredTrackPlaybackEventsIngestionWithRequest:(id)arg1 end:(unsigned long long)arg2 historyCount:(unsigned long long)arg3;
- (id)refreshTrackPlaybackEvents;
- (id)refreshLatestTrackPlaybackEvents:(unsigned long long)arg1;
- (id)deferredLastTrackPlaybackEvent;
- (id)deferredStationsWithGuids:(id)arg1;
- (id)refreshStationForGUID:(id)arg1;
- (id)deferredPlaylistsWithGuids:(id)arg1;
- (id)deferredHeavyAlbumsWithGuids:(id)arg1;
- (id)deferredLiteAlbumsWithGuids:(id)arg1;
- (id)refreshPlayContexts;
- (void)refreshRecentPlayEvents;
- (id)refreshPlayEventForClassProtocol:(Class)arg1;
- (id)refreshRecentStationPlayEvents;
- (id)refreshStationsInLibrary;
- (id)refreshProgrammedStationsForGenre:(id)arg1 count:(unsigned long long)arg2;
- (id)refreshProgrammedStationsForGenre:(id)arg1;
- (id)refreshProgrammedStations;
- (id)refreshPlaylistsForCategoryNamed:(id)arg1;
- (id)refreshContentsOfPlaylist:(id)arg1 lastModified:(id)arg2 limit:(id)arg3;
- (id)refreshContentsOfPlaylist:(id)arg1 lastModified:(id)arg2;
- (id)refreshContentsOfPlaylist:(id)arg1;
- (id)refreshPlaylistMetadataWithGuid:(id)arg1 ignoreStalenessInterval:(_Bool)arg2;
- (id)refreshPlaylistMetadataWithGuid:(id)arg1;
- (id)refreshPlaylistMetadata:(id)arg1;
- (id)refreshPlaylistsInLibrary;
- (id)refreshReviewsForAlbum:(id)arg1;
- (id)refreshTracksInLibraryForAlbum:(id)arg1;
- (id)refreshAlbumsInLibraryForArtist:(id)arg1;
- (id)refreshAlbumsInLibrary;
- (id)refreshArtistsInLibrary;
- (id)refreshAffiliationsForAlbum:(id)arg1;
- (id)refreshAffiliationsForArtist:(id)arg1;
- (id)deferredArtistPopulatedWithPrimaryGenre:(id)arg1;
- (id)deferredSinglePrimaryGenreForEachArtist:(id)arg1;
- (id)deferredArtistsPopulatedWithPrimaryGenre:(id)arg1;
- (void)sideloadPrimaryGenreForArtists:(id)arg1;
- (id)refreshMetadataTrackHighlightsForKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3;
- (id)refreshNAPITrackHighlightsForKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3 count:(unsigned long long)arg4;
- (id)refreshTrackHighlightsForKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3;
- (id)promiseForRefreshTopTracks;
- (id)refreshMetadataAlbumHighlightsForKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3 count:(unsigned long long)arg4;
- (id)refreshNAPIAlbumHighlightsForKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3 count:(unsigned long long)arg4;
- (id)deferredLiteAlbumWithGuid:(id)arg1;
- (id)refreshAlbumHighlightsForKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3 count:(unsigned long long)arg4;
- (id)deferredNewReleasePlaylist;
- (id)modelObserverForNewReleaseRecommendedTracksWithFetchLimit:(id)arg1;
- (id)deferredNewReleaseRecommendedTracksWithCount:(long long)arg1;
- (id)deferredNewReleaseRecommendedAlbumsNapiRequestWithCount:(long long)arg1;
- (id)deferredNewReleasesAlbumsNapiRequestWithCount:(long long)arg1;
- (id)refreshAlbumHighlightsForKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3;
- (id)deferredRepresentativeArtistsSortedByArtworkPriority:(id)arg1 forGenre:(id)arg2 limit:(unsigned long long)arg3;
- (id)refreshRepresentativeArtistsForGenre:(id)arg1;
- (id)refreshMetadataArtistHighlightsForKind:(long long)arg1 genre:(id)arg2 count:(unsigned long long)arg3;
- (id)refreshNAPIArtistHighlightsForKind:(long long)arg1 genre:(id)arg2 count:(unsigned long long)arg3;
- (id)refreshArtistHighlightsForKind:(long long)arg1 genre:(id)arg2 count:(unsigned long long)arg3;
- (id)refreshArtistHighlightsForKind:(long long)arg1 genre:(id)arg2;
- (id)refreshGenreDetailForGUID:(id)arg1;
- (id)refreshGenreDetail:(id)arg1;
- (id)trackWithPlaybackMedia:(id)arg1;
- (id)tracksControllerForAlbum:(id)arg1 limitedToLibrary:(_Bool)arg2;
- (id)trackHighlightsControllerWithKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3 fetchLimit:(id)arg4 refreshPromise:(id *)arg5;
- (id)albumHighlightsControllerWithKind:(long long)arg1 genre:(id)arg2 artist:(id)arg3 fetchLimit:(id)arg4 refreshPromise:(id *)arg5;
- (id)artistHighlightsControllerWithKind:(long long)arg1 genre:(id)arg2 fetchLimit:(id)arg3 refreshPromise:(id *)arg4;
- (id)memberPlaylistsForTag:(id)arg1 limit:(unsigned long long)arg2;
- (id)editorialPlaylistsForTag:(id)arg1 limit:(unsigned long long)arg2;
- (id)processNapiV2RawPlaylistsPayload:(id)arg1;
- (id)playlistsForTag:(id)arg1 limit:(unsigned long long)arg2;
- (id)playlistsModelObserverForTag:(id)arg1;
- (id)deferredTag:(id)arg1 catalog:(id)arg2;
- (id)deferredTag:(id)arg1;
- (id)deferredTagsForPlaylist:(id)arg1 catalog:(id)arg2;
- (id)tagsModelObserverForPlaylist:(id)arg1;
- (id)deferredSubtagsForTag:(id)arg1;
- (id)childrenModelObserverForTag:(id)arg1;
- (id)deferredEditorialTagsForCatalog:(id)arg1;
- (id)editorialTagsObserver;
- (id)deferredSampleArtistNamesWithRawPlaylists:(id)arg1;
- (id)loungeTagsByIds:(id)arg1;
- (id)deferredLoungeTagsWithRawPlaylists:(id)arg1;
- (id)deferredProfilesWithRawPlaylists:(id)arg1;
- (id)deferredProfilesByProfileIds:(id)arg1;
- (id)deferredResolvedPlaylistsLinksWithRawPlaylists:(id)arg1 resolveMembers:(_Bool)arg2 resolveLoungeTags:(_Bool)arg3;
- (id)deferredResolvedPlaylistsMembersAndTagsLinksWithRawPlaylists:(id)arg1;
- (id)playableStationPromiseForGuid:(id)arg1;
- (id)deferredGenreForGuid:(id)arg1;
- (id)genreForGuid:(id)arg1 withPromise:(id *)arg2;
- (id)editorialForGuid:(id)arg1 withPromise:(id *)arg2;
- (id)deferredStationTrackForGuid:(id)arg1 inStation:(id)arg2;
- (id)stationsForGuids:(id)arg1 withPromise:(id *)arg2;
- (id)stationForGuid:(id)arg1 withPromise:(id *)arg2;
- (id)shortenUrl:(id)arg1;
- (id)modelObserverForPlaylistOwner:(id)arg1;
- (id)modelObserverForPlaylist:(id)arg1;
- (id)playlistForGuid:(id)arg1 withPromise:(id *)arg2 andWeight:(int)arg3;
- (id)playlistForGuid:(id)arg1 withPromise:(id *)arg2;
- (id)artistForGuid:(id)arg1 withPromise:(id *)arg2 andWeight:(int)arg3;
- (id)artistForGuid:(id)arg1 withPromise:(id *)arg2;
- (id)refreshLiteArtistsForGuids:(id)arg1;
- (id)refreshLiteArtistsForGuids:(id)arg1 batchSize:(long long)arg2;
- (id)artistForGuid:(id)arg1 artistMO:(id)arg2 weight:(int)arg3 withPromise:(id *)arg4;
- (id)liteArtistsForGuids:(id)arg1;
- (id)deferredStationForGuid:(id)arg1;
- (id)deferredArtistForGuid:(id)arg1 weight:(int)arg2;
- (id)deferredPlaylistWithTracksForGuid:(id)arg1 lastModified:(id)arg2;
- (id)deferredPlaylistForGuid:(id)arg1 weight:(int)arg2;
- (id)deferredTrackForGuid:(id)arg1;
- (id)albumForGuid:(id)arg1 weight:(int)arg2 promise:(id *)arg3;
- (id)albumForGuid:(id)arg1 promise:(id *)arg2;
- (id)deferredAlbumForGuid:(id)arg1 weight:(int)arg2;
- (id)refreshAudiobookGenresDeferred;
- (id)trackForGuid:(id)arg1 withPromise:(id *)arg2;
- (id)refreshTrackDetailWithGuid:(id)arg1 ignoreStalenessInterval:(_Bool)arg2;
- (id)refreshTrackDetailWithGuid:(id)arg1;
- (id)orderTracks:(id)arg1 toMatchGuids:(id)arg2;
- (id)liteTracksWithGuids:(id)arg1;
- (id)deferredLiteTracksWithGuids:(id)arg1;
- (id)promisedUpdateForObject:(id)arg1;
- (id)promisedUpdateWithInput:(id)arg1 updates:(CDUnknownBlockType)arg2;
- (id)deferredUpdateWithInput:(id)arg1 updates:(CDUnknownBlockType)arg2;
- (id)topAlbumWithEntityRefreshDeferred:(id *)arg1;
- (id)newReleasesTopAlbumDeferred;
- (id)deferredImageForTopAlbumWithSize:(struct CGSize)arg1 usePlaceholder:(_Bool)arg2;
- (id)deferredImageForProfileGuid:(id)arg1 size:(struct CGSize)arg2;
- (id)deferredImageForGuid:(id)arg1 size:(struct CGSize)arg2 usePlaceholder:(_Bool)arg3;
- (id)refreshAlbumDetail:(id)arg1;
- (id)nextTrackRequestForChannel:(id)arg1;
- (id)refreshArtistDetail:(id)arg1;
- (id)deferredRemoveStationFromLibraryForArtist:(id)arg1;
- (id)deferredRemoveStationFromLibrary:(id)arg1;
- (id)deferredAddStationToLibraryForArtist:(id)arg1 overrideUpsell:(_Bool)arg2;
- (id)deferredAddStationToLibraryForArtist:(id)arg1;
- (id)deferredAddStationToLibrary:(id)arg1 overrideUpsell:(_Bool)arg2;
- (id)deferredAddStationToLibrary:(id)arg1;
- (id)recentContainersForCurrentModeModelObserver;
- (id)recentContainersModelObserverForMode:(long long)arg1;
- (id)recentContainersForCurrentModeWithFetchLimit:(id)arg1 refreshPromise:(id *)arg2;
- (id)recentContainersForMode:(long long)arg1 fetchLimit:(id)arg2 withRefreshPromise:(id *)arg3;
- (id)createRecentContainersFetchRequestForMode:(long long)arg1 fetchLimit:(id)arg2;
- (id)modelObserverForRecentContainersForCurrentModeWithFetchLimit:(id)arg1;
- (id)recentStationsControllerWithRefreshPromise:(id *)arg1;
- (id)createRecentStationsFetchRequext;
- (id)stationsInLibraryControllerWithRefreshPromise:(id *)arg1;
- (id)createStationsInLibraryFetchRequest;
- (id)deferredProgrammedStationsForGenre:(id)arg1;
- (id)programmedStationsControllerForGenre:(id)arg1 refreshPromise:(id *)arg2;
- (id)createProgrammedStationsFetchRequestForGenre:(id)arg1;
- (id)programmedStationsControllerWithRefreshPromise:(id *)arg1;
- (id)deferredStationsForGenre:(id)arg1 count:(unsigned long long)arg2;
- (id)deferredPopularArtistsForGenre:(id)arg1 kind:(long long)arg2 count:(unsigned long long)arg3;
- (id)deferredPopularArtistsForGenre:(id)arg1 count:(unsigned long long)arg2;
- (id)deferredFeaturedEditorialsForGenre:(id)arg1 count:(unsigned long long)arg2;
- (id)fetchedResultsControllerForFeaturedEditorialsForGenre:(id)arg1 fetchLimit:(id)arg2 refreshDeferred:(id *)arg3;
- (id)modelObserverForFeaturedEditorialsForGenre:(id)arg1 fetchLimit:(id)arg2;
- (id)deferredNewReleasesForGenre:(id)arg1 kind:(long long)arg2 count:(unsigned long long)arg3;
- (id)deferredNewReleasesForGenre:(id)arg1 count:(unsigned long long)arg2;
- (id)deferredPlaylistsForTypeaheadSearchTerm:(id)arg1 count:(long long)arg2 playlistType:(id)arg3 andNapiCatalogId:(id)arg4;
- (id)deferredPlaylistsForTypeaheadSearchTerm:(id)arg1 count:(long long)arg2 playlistType:(id)arg3;
- (id)deferredPlaylistsForTypeaheadSearchTerm:(id)arg1 count:(long long)arg2;
- (id)deferredAlbumsForTypeaheadSearchTerm:(id)arg1 count:(long long)arg2 andNapiCatalogId:(id)arg3;
- (id)deferredAlbumsForTypeaheadSearchTerm:(id)arg1 count:(long long)arg2;
- (id)deferredTracksForTypeaheadSearchTerm:(id)arg1 count:(long long)arg2 andNapiCatalogId:(id)arg3;
- (id)deferredTracksForTypeaheadSearchTerm:(id)arg1 count:(long long)arg2;
- (id)deferredArtistsForTypeaheadSearchTerm:(id)arg1 count:(long long)arg2 andNapiCatalogId:(id)arg3;
- (id)deferredArtistsForTypeaheadSearchTerm:(id)arg1 count:(long long)arg2;
- (id)getSearchResultsForPayload:(id)arg1 context:(id)arg2;
- (id)deferredOverallTypeaheadSearchForTerm:(id)arg1 count:(long long)arg2 andNapiCatalogId:(id)arg3;
- (id)deferredOverallTypeaheadSearchForTerm:(id)arg1 count:(long long)arg2;
- (id)orderNapiV_2_2SearchPayload:(id)arg1;
- (id)typeaheadSearchRequestWithSearchTerm:(id)arg1 napiCatalogId:(id)arg2 type:(id)arg3 perTypeLimit:(id)arg4 playlistType:(id)arg5;
- (id)deferredNapiCatalogId;
- (void)reorderQueuedItems:(id)arg1;
- (id)deferredDequeueAllItemsAndDeleteDownloadIfRequired:(_Bool)arg1;
- (id)deferredDequeueAllItems;
- (id)deferredDequeueItem:(id)arg1 andDeleteDownloadIfRequired:(_Bool)arg2;
- (id)deferredDequeueItem:(id)arg1;
- (id)deferredQueuePlaylist:(id)arg1;
- (id)deferredQueueGenre:(id)arg1;
- (id)deferredQueueArtist:(id)arg1;
- (id)deferredQueueAlbum:(id)arg1;
- (id)deferredQueueTracks:(id)arg1 overrideUpsell:(_Bool)arg2;
- (id)deferredQueueTracks:(id)arg1;
- (id)queuedItemsController;
- (id)deferredRemovePlaylistFromModes:(id)arg1;
- (id)deferredRemovePlaylistFromLibrary:(id)arg1;
- (id)deferredReorderItems:(id)arg1 inPlaylist:(id)arg2;
- (id)deferredRemoveAllTracksFromPlaylist:(id)arg1;
- (id)deferredRemoveItem:(id)arg1 fromPlaylist:(id)arg2;
- (id)queueRemovalOfItem:(id)arg1 fromPlaylist:(id)arg2;
- (id)queuePlaylistOperationOn:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)deferredAddTracks:(id)arg1 toPlaylist:(id)arg2 overrideUpsell:(_Bool)arg3;
- (id)deferredAddTracks:(id)arg1 toPlaylist:(id)arg2;
- (id)deferredUpdatePlaylist:(id)arg1 isPublic:(_Bool)arg2 name:(id)arg3;
- (id)deferredUpdatePlaylist:(id)arg1 isPublic:(_Bool)arg2;
- (id)deferredRenamePlaylist:(id)arg1 name:(id)arg2;
- (id)deferredCreatePlaylistWithName:(id)arg1 isPublic:(_Bool)arg2 trackIds:(id)arg3 overrideUpsell:(_Bool)arg4;
- (id)deferredCreatePlaylistWithName:(id)arg1;
- (id)deferredCreatePlaylistFromGenreTopTracks:(id)arg1 count:(long long)arg2;
- (id)deferredCreatePlaylistFromArtistTopTracks:(id)arg1 count:(long long)arg2;
- (id)deferredCreatePlaylistWithoutTagsFromEditorialPlaylist:(id)arg1;
- (id)preventReloadOfLibraryPlaylists;
- (id)playlistItemsForPlaylist:(id)arg1;
- (id)playlistItemsControllerForPlaylist:(id)arg1 promise:(id *)arg2;
- (id)programmedPlaylistCategorizationsControllerInCategoryNamed:(id)arg1 promise:(id *)arg2;
- (id)playlistsInLibraryControllerWithSortDescriptors:(id)arg1 sectionNameKeyPath:(id)arg2 refreshPromise:(id *)arg3;
- (id)playlistsInLibraryControllerWithRefreshPromise:(id *)arg1 sorting:(long long)arg2;
- (id)playlistsInLibraryModelObserver:(long long)arg1;
- (id)reviewsControllerForAlbum:(id)arg1 fetchLimit:(unsigned long long)arg2 refreshPromise:(id *)arg3;
- (id)tracksInLibraryControllerForAlbum:(id)arg1 refreshPromise:(id *)arg2;
- (id)tracksControllerForAlbum:(id)arg1 refreshPromise:(id *)arg2;
- (id)artistsInLibraryControllerWithRefreshPromise:(id *)arg1;
- (id)trackPlaybackEventsControllerWithRefreshPromise:(id *)arg1;
- (id)affiliationsControllerForArtist:(id)arg1 kind:(long long)arg2 refreshPromise:(id *)arg3;
- (id)affiliationsControllerForArtist:(id)arg1 refreshPromise:(id *)arg2;
- (id)artistAlbumsControllerForArtist:(id)arg1 grouped:(_Bool)arg2 predicate:(id)arg3 sortDescriptors:(id)arg4 promise:(id *)arg5;
- (id)artistAlbumsControllerForArtist:(id)arg1 albumType:(long long)arg2 promise:(id *)arg3;
- (id)artistAlbumsControllerForArtist:(id)arg1 grouped:(_Bool)arg2 promise:(id *)arg3;
- (id)albumsInLibraryControllerForArtist:(id)arg1 promise:(id *)arg2;
- (id)albumsInLibraryControllerWithRefreshPromise:(id *)arg1;
- (id)deferredRemoveAlbumFromLibrary:(id)arg1;
- (id)deferredAddAlbumToLibrary:(id)arg1;
- (id)deferredRemoveTrackFromLibrary:(id)arg1;
- (id)deferredRemoveTracksFromLibrary:(id)arg1;
- (id)deferredAddTracksToLibrary:(id)arg1;
- (id)deferredAddTrackToLibrary:(id)arg1;
- (id)deferredTracksNotAddedToCacheForLease:(id)arg1;
- (id)deferredTracksAddedToCacheForLeases:(id)arg1;
- (id)deferredTracksAddedToCacheForLease:(id)arg1;
- (id)deferredItem:(id)arg1 queuedForDownloadCompleteWithLeaseUpdates:(CDUnknownBlockType)arg2;
- (id)deferredItem:(id)arg1 queuedForDownloadWithLeasesUpdates:(CDUnknownBlockType)arg2;
- (id)deferredItem:(id)arg1 queuedForDownloadWithLeaseUpdates:(CDUnknownBlockType)arg2;
- (id)deferredHistoryQueuedForDownload;
- (id)deferredQueueQueuedForDownload;
- (id)deferredTracksRemovedFromDownloads:(id)arg1 dueToRevokedRights:(_Bool)arg2;
- (id)deferredTracksRemovedFromDownloads:(id)arg1;
- (id)deferredTrackRemovedFromDownloads:(id)arg1;
- (id)deferredTracksQueuedForDownload:(id)arg1;
- (id)deferredTrackQueuedForDownload:(id)arg1;
- (id)deferredFavoritesQueuedForDownload:(id)arg1;
- (id)deferredKidsModeQueuedForDownload:(id)arg1;
- (id)deferredFavoriteQueuedForDownload:(id)arg1;
- (id)deferredAlbumRemovedFromDownloads:(id)arg1;
- (id)deferredAlbumQueuedForDownload:(id)arg1 tracks:(id)arg2;
- (id)deferredAlbumQueuedForDownload:(id)arg1;
- (id)deferredPlaylistRemovedFromDownloads:(id)arg1;
- (id)deferredPlaylistQueuedForDownloadAsComplete:(id)arg1;
- (id)deferredPlaylistQueuedForDownload:(id)arg1;
- (id)deferredArtistRemovedFromDownloads:(id)arg1;
- (id)deferredLeaseCancellationsOfOutstandingTracks:(id)arg1;
- (id)deferredLeaseCancellationOfOutstandingTracks:(id)arg1;
- (id)refreshLibraryTracksForArtistId:(id)arg1;
- (id)libraryTracksForArtist:(id)arg1 refreshPromise:(id *)arg2;
- (id)downloadedTracksForArtist:(id)arg1;
- (id)tracksDownloadedControllerForAlbum:(id)arg1;
- (id)controllerWithTrackId:(id)arg1 refreshPromise:(id *)arg2;
- (id)allTracksControllerWithRefreshPromise:(id *)arg1;
- (id)tracksDownloadedController;
- (id)playlistItemsDownloadedControllerForPlaylist:(id)arg1;
- (id)playlistsDownloadedControllerWithRefreshPromise:(id *)arg1 sorting:(long long)arg2;
- (id)artistsDownloadedController;
- (id)albumsDownloadedControllerForArtist:(id)arg1;
- (id)frcForCompletelyDownloadedAlbums;
- (id)fetchRequestForCompletelyDownloadedAlbums;
- (id)albumsDownloadedController;
- (id)downloadLeasesInProgressObserver;
- (id)downloadLeasesInProgressController;
- (id)refreshEditorialCategories;
- (id)refreshAffiliationsForEditorial:(id)arg1;
- (id)affiliationsControllerForEditorial:(id)arg1 kind:(long long)arg2 refreshPromise:(id *)arg3;
- (id)affiliationsControllerForEditorial:(id)arg1 refreshPromise:(id *)arg2;
- (id)refreshEditorialForGUID:(id)arg1;
- (id)refreshEditorialHighlightsForGenre:(id)arg1 count:(unsigned long long)arg2;
- (id)refreshEditorialHighlightsForGenre:(id)arg1;
- (id)modelObserverForEditorialHighlightsControllerForGenre:(id)arg1;
- (id)editorialHighlightsControllerForGenre:(id)arg1 refreshPromise:(id *)arg2;
- (id)refreshAllEditorialsForCategory:(id)arg1;
- (id)kidsModeEditorialsWithRefreshDeferred:(id *)arg1;
- (id)refreshEditorialHighlightsForCategory:(id)arg1;
- (id)editorialHighlightsControllerForCategory:(id)arg1 refreshPromise:(id *)arg2;
- (id)refreshEditorialHighlightsForMode:(int)arg1 genre:(id)arg2;
- (id)refreshEditorialHighlightsForMode:(int)arg1;
- (id)editorialHighlightsControllerForMode:(int)arg1 genre:(id)arg2 refreshPromise:(id *)arg3;
- (id)editorialHighlightsControllerForMode:(int)arg1 refreshPromise:(id *)arg2;
- (id)tracksInPlaybackCacheController;
- (id)affiliationKindsForArtist:(id)arg1 refreshPromise:(id *)arg2;
- (id)albumTypesForArtist:(id)arg1 refreshPromise:(id *)arg2;
- (id)trackHighlightsControllerWithScope:(long long)arg1 genre:(id)arg2 artist:(id)arg3 refreshPromise:(id *)arg4;
- (id)trackHighlightsWithScope:(long long)arg1 forGenre:(id)arg2 refreshPromise:(id *)arg3;
- (id)trackHighlightsControllerWithScope:(long long)arg1 forGenre:(id)arg2 fetchLimit:(id)arg3 refreshPromise:(id *)arg4;
- (id)trackHighlightsControllerWithScope:(long long)arg1 forGenre:(id)arg2 refreshPromise:(id *)arg3;
- (id)trackHighlightsWithScope:(long long)arg1 forArtist:(id)arg2 refreshPromise:(id *)arg3;
- (id)trackHighlightsControllerWithScope:(long long)arg1 forArtist:(id)arg2 refreshPromise:(id *)arg3;
- (id)trackHighlightsControllerWithScope:(long long)arg1 fetchLimit:(id)arg2 refreshPromise:(id *)arg3;
- (id)modelObserverTrackHighlightsControllerWithScope:(long long)arg1 forGenre:(id)arg2 fetchLimit:(id)arg3;
- (id)modelObserverTrackHighlightsControllerWithScope:(long long)arg1 fetchLimit:(id)arg2;
- (id)topTrackHighlights;
- (id)affiliationsControllerForAlbum:(id)arg1 refreshPromise:(id *)arg2;
- (id)albumHighlightsControllerWithScope:(long long)arg1 forGenre:(id)arg2 fetchLimit:(id)arg3 refreshPromise:(id *)arg4;
- (id)albumHighlightsControllerWithScope:(long long)arg1 forGenre:(id)arg2 refreshPromise:(id *)arg3;
- (id)albumHighlightsControllerWithScope:(long long)arg1 forArtist:(id)arg2 refreshPromise:(id *)arg3;
- (id)albumHighlightsControllerWithScope:(long long)arg1 fetchLimit:(id)arg2 refreshPromise:(id *)arg3;
- (id)modelObserverForAlbumHighlightsControllerWithScope:(long long)arg1 fetchLimit:(id)arg2;
- (id)topArtistForGenre:(id)arg1 promise:(id *)arg2;
- (id)representativeArtistHighlightsForGenre:(id)arg1 refreshPromise:(id *)arg2;
- (id)artistHighlightsWithScope:(long long)arg1 forGenre:(id)arg2 refreshPromise:(id *)arg3;
- (id)representativeArtistHighlightsControllerForGenre:(id)arg1 refreshPromise:(id *)arg2;
- (id)artistHighlightsControllerWithScope:(long long)arg1 forGenre:(id)arg2 refreshPromise:(id *)arg3;
- (id)artistHighlightsControllerWithScope:(long long)arg1 fetchLimit:(id)arg2 refreshPromise:(id *)arg3;
- (id)modelObserverForArtistHighlightsControllerWithScope:(long long)arg1 fetchLimit:(id)arg2;
- (id)artistGenresControllerForArtist:(id)arg1 refreshPromise:(id *)arg2;
- (id)affiliationsControllerForGenre:(id)arg1 kind:(long long)arg2 refreshPromise:(id *)arg3;
- (id)createAffiliationsFetchRequestForGenre:(id)arg1 kind:(long long)arg2;
- (id)createAffiliationsFetchRequestForGenre:(id)arg1;
- (id)affiliationsControllerForGenre:(id)arg1 refreshPromise:(id *)arg2;
- (id)applicationRootGenre;
- (id)sessionForStation:(id)arg1 withInitialTrack:(id)arg2;
- (long long)editorialSecondsValidBeforeChecking;
- (float)editorialOldAfterNumSecondsSincePublished;
- (void)resetFiles;
- (void)resetRefreshTokens;
- (void)cleanupRecentPlaybackItemsForMode:(long long)arg1;
- (void)initializeContextWithCallback:(CDUnknownBlockType)arg1;
- (id)createManagedObjectModel;
- (id)createStoreURL;
- (void)createManagedObjectContext;
- (_Bool)saveContextInternal:(id *)arg1;
- (_Bool)saveContext:(id *)arg1;
- (void)dealloc;
- (void)unregisterEverything;
- (id)initWithDependencies:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (unsigned long long)numberOfFavoriteTracks;
- (id)fetchFavoriteTrack:(id)arg1;
- (_Bool)limitedFavoriteTracksContainsTrack:(id)arg1;
- (_Bool)matchedTracksContainsTrack:(id)arg1;
- (id)matchedTracksRemoveTrack:(id)arg1;
- (id)matchedTracksAddTrack:(id)arg1;
- (id)matchedTracksGetWithPromise:(id *)arg1;
- (_Bool)favoriteTracksContainsTrack:(id)arg1;
- (id)favoriteTracksRemoveTrack:(id)arg1;
- (id)favoriteTracksAddTrack:(id)arg1 member:(id)arg2;
- (id)favoriteTracksGetWithPromise:(id *)arg1 onlyDownloaded:(_Bool)arg2 limitTo:(long long)arg3;
- (id)favoriteTracksGetWithPromise:(id *)arg1 onlyDownloaded:(_Bool)arg2;
- (id)modelObserverForFavoriteTracksWithOnlyDownloaded:(_Bool)arg1 limit:(long long)arg2;
- (id)playlistsFollowingControllerWithRefreshPromise:(id *)arg1;
- (id)playlistsFollowingSectionedControllerWithRefreshPromise:(id *)arg1 sorting:(long long)arg2;
- (id)itemGuid:(id)arg1;
- (_Bool)itemOfClass:(Class)arg1 taggedWithName:(id)arg2 contains:(id)arg3;
- (id)itemOfClass:(Class)arg1 taggedWithName:(id)arg2 remove:(id)arg3 withNotificationName:(id)arg4;
- (id)itemOfClass:(Class)arg1 taggedWithName:(id)arg2 add:(id)arg3 withNotificationName:(id)arg4 member:(id)arg5;
- (id)itemsOfClass:(Class)arg1 taggedWithName:(id)arg2 profile:(id)arg3 getWithPromise:(id *)arg4 onlyDownloaded:(_Bool)arg5 withFetchLimit:(long long)arg6;
- (id)itemsOfClass:(Class)arg1 taggedWithName:(id)arg2 getWithPromise:(id *)arg3 onlyDownloaded:(_Bool)arg4 withFetchLimit:(long long)arg5;
- (id)refreshPagedRequestForItemsOfClass:(Class)arg1 taggedWithName:(id)arg2 profile:(id)arg3;
- (id)frcForTaggedItemsUsingFetchRequest:(id)arg1 managedObjectContext:(id)arg2 onlyDownloaded:(_Bool)arg3;
- (id)objectTaggedWithName:(id)arg1 RDSString:(id)arg2 add:(id)arg3;
- (id)deferredAddGenreToFavorites:(id)arg1;
- (id)deferredAddArtistToFavorites:(id)arg1;
- (_Bool)stationTaggedWithName:(id)arg1 contains:(id)arg2;
- (_Bool)playlistTaggedWithName:(id)arg1 contains:(id)arg2;
- (_Bool)albumTaggedWithName:(id)arg1 contains:(id)arg2;
- (id)stationTaggedWithName:(id)arg1 remove:(id)arg2 withNotificationName:(id)arg3;
- (id)stationTaggedWithName:(id)arg1 add:(id)arg2 withNotificationName:(id)arg3;
- (id)playlistTaggedWithName:(id)arg1 remove:(id)arg2 withNotificationName:(id)arg3;
- (id)playlistTaggedWithName:(id)arg1 add:(id)arg2 withNotificationName:(id)arg3;
- (id)albumTaggedWithName:(id)arg1 remove:(id)arg2 withNotificationName:(id)arg3;
- (id)albumTaggedWithName:(id)arg1 add:(id)arg2 withNotificationName:(id)arg3;
- (id)albumTaggedWithName:(id)arg1 getWithPromise:(id *)arg2 onlyDownloaded:(_Bool)arg3 limitTo:(long long)arg4;
- (_Bool)trackTaggedWithName:(id)arg1 contains:(id)arg2;
- (id)trackTaggedWithName:(id)arg1 remove:(id)arg2 withNotificationName:(id)arg3;
- (id)trackTaggedWithName:(id)arg1 add:(id)arg2 withNotificationName:(id)arg3 member:(id)arg4;
- (id)contentTaggedWithName:(id)arg1 getWithPromise:(id *)arg2 onlyDownloaded:(_Bool)arg3 limitTo:(long long)arg4;
- (id)trackTaggedWithName:(id)arg1 getWithPromise:(id *)arg2 onlyDownloaded:(_Bool)arg3 limitTo:(long long)arg4;
- (id)tagDateTrack:(id)arg1 taggedWithName:(id)arg2;
- (void)kidsModeRemoveRecentPlaybackForItemWithGuid:(id)arg1 context:(id)arg2;
- (void)willDeleteTagDate:(id)arg1 context:(id)arg2;
- (id)tagFetchRequestForClass:(Class)arg1 inContext:(id)arg2 matching:(id)arg3;
- (id)fetchItemsForClass:(Class)arg1 context:(id)arg2 tagName:(id)arg3 profile:(id)arg4 onlyDownloaded:(_Bool)arg5;
- (id)tagFetchRequestForClass:(Class)arg1 inContext:(id)arg2 withTagName:(id)arg3 profile:(id)arg4 onlyDownloaded:(_Bool)arg5;
- (id)deferredIngestionWithRequest:(id)arg1 start:(unsigned long long)arg2 ingest:(CDUnknownBlockType)arg3;
- (id)deferredIngestionIgnoringCacheWithNapiRequest:(id)arg1 authenticated:(_Bool)arg2 start:(unsigned long long)arg3 ingest:(CDUnknownBlockType)arg4;
- (unsigned long long)parseTotalLengthWithPayload:(id)arg1;
- (id)deferredIngestionWithNapiRequest:(id)arg1 authenticated:(_Bool)arg2 start:(unsigned long long)arg3 ingest:(CDUnknownBlockType)arg4 preRestCacheTransformResult:(CDUnknownBlockType)arg5;
- (id)_refreshWithRequest:(id)arg1 ingest:(CDUnknownBlockType)arg2;
- (id)memberFollowedPlaylists:(id)arg1 sorting:(long long)arg2;
- (id)currentUserFollowedPlaylistsSorted:(long long)arg1;
- (id)memberPlaylists:(id)arg1 sorting:(long long)arg2;
- (id)currentUserPlaylistsSorted:(long long)arg1 cacheOnly:(_Bool)arg2;
- (id)currentUserPlaylistsSorted:(long long)arg1;
- (id)unfollowPlaylist:(id)arg1;
- (id)followPlaylist:(id)arg1;
- (id)refreshTasteOverlap;
- (id)deferredTasteOverlapRecommendedUserProfiles;
- (id)deferredCreatePlaylistFromTasteOverlapForUserGuid:(id)arg1 type:(unsigned long long)arg2 name:(id)arg3;
- (id)deferredTasteTracksForProfile:(id)arg1 type:(unsigned long long)arg2 request:(id)arg3;
- (id)deferredRecommendedCombinedTracksForProfile:(id)arg1;
- (id)deferredRecommendedFollowingTracksForProfile:(id)arg1;
- (id)deferredRecommendedListenersTracksForProfile:(id)arg1;
- (id)defaultRecommendedParameters;
- (id)deferredRecommendedTracksForProfile:(id)arg1;
- (id)deferredTasteTracksForProfile:(id)arg1 type:(unsigned long long)arg2;
- (id)tasteOverlapTracksFRCForUserGuid:(id)arg1 type:(unsigned long long)arg2 deferred:(id *)arg3;
- (id)tasteOverlapTracksForUserGuid:(id)arg1 type:(unsigned long long)arg2;
- (id)tasteOverlapTracksObserverForUserGuid:(id)arg1 type:(unsigned long long)arg2;
- (id)deferredTasteOverlapForUserGuid:(id)arg1;
- (id)artistImageForTopTrackHighlightsWithSize:(struct CGSize)arg1 usePlaceholder:(_Bool)arg2;
- (id)chartTracksForUserGuid:(id)arg1 range:(unsigned long long)arg2 fetchLimit:(id)arg3 loadingPromise:(id *)arg4;
- (id)modelObserverForChartTracksForUserGuid:(id)arg1 range:(unsigned long long)arg2 fetchLimit:(id)arg3;
- (id)deferredTrackChartsForProfile:(id)arg1 type:(unsigned long long)arg2 range:(unsigned long long)arg3 limit:(unsigned long long)arg4;
- (id)deferredTrackChartsForUserGuid:(id)arg1 range:(unsigned long long)arg2 limit:(unsigned long long)arg3;
- (id)deferredTopGenreForUserGuid:(id)arg1;
- (id)deferredTopGenresPayloadForUserGuid:(id)arg1;
- (id)albumChartsForUserGuid:(id)arg1 range:(unsigned long long)arg2;
- (id)deferredAlbumChartsForProfile:(id)arg1 type:(unsigned long long)arg2 range:(unsigned long long)arg3 limit:(unsigned long long)arg4;
- (id)deferredAlbumChartsForUserGuid:(id)arg1 range:(unsigned long long)arg2 limit:(unsigned long long)arg3;
- (id)deferredChartsTopAlbumForCurrentUserWithRange:(unsigned long long)arg1;
- (id)chartsTopAlbumForProfile:(id)arg1 type:(unsigned long long)arg2 range:(unsigned long long)arg3;
- (id)chartsTopArtistForProfile:(id)arg1 type:(unsigned long long)arg2 range:(unsigned long long)arg3;
- (id)deferredArtistChartsForProfile:(id)arg1 type:(unsigned long long)arg2 range:(unsigned long long)arg3 limit:(unsigned long long)arg4;
- (id)artistChartsForUserGuid:(id)arg1 range:(unsigned long long)arg2;
- (id)deferredUpdateAvatar:(id)arg1;
- (id)favoritesForUserGuid:(id)arg1 promise:(id *)arg2;
- (id)deferredCheckAvailabilityForScreenname:(id)arg1;
- (id)deferredUpdateProfileAndPublicVisibilityForPlaylist:(id)arg1;
- (id)deferredUpdateProfileAsPublic:(_Bool)arg1;
- (id)profileVisibilityParamsAsPublic:(_Bool)arg1;
- (id)deferredUpdateProfileWithParameters:(id)arg1;
- (id)deferredRefreshFavoritesForProfile:(id)arg1;
- (id)deferredFollowingForCurrentProfile;
- (id)deferredUnfollowProfile:(id)arg1;
- (id)deferredFollowProfile:(id)arg1;
- (id)followProfileWithId:(id)arg1;
- (id)deferredUsersForSearchTerm:(id)arg1;
- (id)deferredFacebookMembers:(id)arg1;
- (id)deferredProfilesForPlaylistWithGuid:(id)arg1;
- (id)deferredProfilesForTrackWithGuid:(id)arg1;
- (id)deferredFollowersForProfile:(id)arg1;
- (id)deferredFollowingForProfile:(id)arg1;
- (id)deferredProfilesForIds:(id)arg1;
- (id)deferredUserProfileForProfileIdentifier:(id)arg1 authenticated:(_Bool)arg2;
- (id)refreshCurrentUserPlaylists;
- (id)refreshPublicPlaylistsForProfile:(id)arg1;
- (id)deferredCurrentUser;
- (id)performNapiRequest:(id)arg1 rangeStart:(unsigned long long)arg2;
- (id)deferredNapiPayloadWithRequest:(id)arg1 authenticated:(_Bool)arg2;
- (id)deferredNapiRequestForResource:(id)arg1 method:(long long)arg2 parameters:(id)arg3 authenticated:(_Bool)arg4 catalogId:(id)arg5 timeoutInterval:(double)arg6 stalenessInterval:(double)arg7;
- (id)deferredNapiRequestForResource:(id)arg1 method:(long long)arg2 parameters:(id)arg3 authenticated:(_Bool)arg4 catalogId:(id)arg5 stalenessInterval:(double)arg6;
- (id)deferredNapiRequestForResource:(id)arg1 method:(long long)arg2 parameters:(id)arg3 authenticated:(_Bool)arg4 catalogId:(id)arg5;
- (id)deferredNapiRequestForResource:(id)arg1 method:(long long)arg2 parameters:(id)arg3 authenticated:(_Bool)arg4 timeoutInterval:(double)arg5;
- (id)deferredNapiRequestForResource:(id)arg1 method:(long long)arg2 parameters:(id)arg3 authenticated:(_Bool)arg4;
- (id)deferredNapiRequestForResource:(id)arg1 authenticated:(_Bool)arg2;
- (id)defaultParametersAddedTo:(id)arg1;
- (id)defaultParameters;
- (id)napiRequestWithResource:(id)arg1 method:(long long)arg2 parameters:(id)arg3 catalogId:(id)arg4 timeoutInterval:(double)arg5 stalenessInterval:(double)arg6;
- (id)napiRequestWithResource:(id)arg1 parameters:(id)arg2 secure:(_Bool)arg3;
- (id)napiRequestWithResource:(id)arg1 parameters:(id)arg2;
- (id)napiRequestWithResource:(id)arg1 napiCatalog:(id)arg2 parameters:(id)arg3 secure:(_Bool)arg4;
- (id)napiRequestWithResource:(id)arg1 napiCatalog:(id)arg2 parameters:(id)arg3;
- (id)napiRequestWithResource:(id)arg1 napiCatalog:(id)arg2;
- (id)napiRequestWithResource:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

