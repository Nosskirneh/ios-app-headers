//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FBKVOController, MeQAudioProcessing, NSArray, NSMutableArray, NSString, Player, RHAudioSession;
@protocol RHAudioDataSource, RHAudioPlayerDelegate;

@interface RHAudioPlayer : NSObject
{
    _Bool _userScrubbing;
    _Bool _isInterAppConnected;
    _Bool _evenOn;
    _Bool _evenFilterOn;
    _Bool _internalMuted;
    NSObject<RHAudioDataSource> *_currentProvider;
    NSObject<RHAudioDataSource> *_pausedProvider;
    NSString *_currentAudioRoute;
    NSMutableArray *_providerList;
    Player *_pPlayer;
    id <RHAudioPlayerDelegate> _delegate;
    long long _currentProviderTime;
    NSArray *_equalizerPresets;
    RHAudioSession *_audioSession;
    id _audioInterruptListenerId;
    id _routeChangedListenerId;
    FBKVOController *_keyValueObserver;
    MeQAudioProcessing *_meQAudioProcessing;
}

+ (void)initialize;
@property(nonatomic) _Bool internalMuted; // @synthesize internalMuted=_internalMuted;
@property(retain, nonatomic) MeQAudioProcessing *meQAudioProcessing; // @synthesize meQAudioProcessing=_meQAudioProcessing;
@property(retain, nonatomic) FBKVOController *keyValueObserver; // @synthesize keyValueObserver=_keyValueObserver;
@property(retain) id routeChangedListenerId; // @synthesize routeChangedListenerId=_routeChangedListenerId;
@property(retain) id audioInterruptListenerId; // @synthesize audioInterruptListenerId=_audioInterruptListenerId;
@property(retain) RHAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property(nonatomic) _Bool evenFilterOn; // @synthesize evenFilterOn=_evenFilterOn;
@property(nonatomic) _Bool evenOn; // @synthesize evenOn=_evenOn;
@property _Bool isInterAppConnected; // @synthesize isInterAppConnected=_isInterAppConnected;
@property long long currentProviderTime; // @synthesize currentProviderTime=_currentProviderTime;
@property _Bool userScrubbing; // @synthesize userScrubbing=_userScrubbing;
@property id <RHAudioPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) Player *pPlayer; // @synthesize pPlayer=_pPlayer;
@property(retain) NSMutableArray *providerList; // @synthesize providerList=_providerList;
@property(copy) NSString *currentAudioRoute; // @synthesize currentAudioRoute=_currentAudioRoute;
@property(retain) NSObject<RHAudioDataSource> *pausedProvider; // @synthesize pausedProvider=_pausedProvider;
- (void).cxx_destruct;
- (_Bool)shouldforceCellularMode;
- (void)setMuted:(_Bool)arg1;
- (_Bool)isMuted;
- (void)audioInterruptWithState:(int)arg1 shouldResume:(_Bool)arg2;
- (void)dispatchAsyncOnMainQueue:(CDUnknownBlockType)arg1;
- (void)dispatchSyncOnMainQueue:(CDUnknownBlockType)arg1;
- (void)currentProviderTimeChangedTo:(id)arg1;
- (void)currentProviderAtEnd;
- (void)setOutput:(int)arg1;
- (double)playbackPosition;
- (double)maximumForPlaybackPosition:(double)arg1;
- (double)setPlaybackPosition:(double)arg1;
- (void)stopPlaying:(CDUnknownBlockType)arg1;
- (void)pausePlaying:(CDUnknownBlockType)arg1;
- (void)pausePlaying;
- (void)pausePlayingNow;
- (void)addPropertyListenersOnPlayer:(id)arg1;
- (id)promiseForAudioUnitDTO;
- (void)interAppConnected:(struct OpaqueAudioComponentInstance *)arg1 property:(unsigned int)arg2 scope:(unsigned int)arg3 element:(unsigned int)arg4;
- (void)publishOutputAudioUnitForPlayer:(id)arg1;
- (void)closeAUGraph:(id)arg1;
- (void)initializeAudioGraph;
- (void)buildAUGraph:(id)arg1;
- (void)teardownAudioEngine;
- (void)setupAudioEngine;
- (void)publishInterAppAudio;
- (void)setupAudioEngineWithPromiseForIAAConnection:(id)arg1;
- (_Bool)stopAudioGraph:(struct OpaqueAUGraph *)arg1;
- (_Bool)startAudioGraph:(struct OpaqueAUGraph *)arg1;
- (void)resumePlaying:(CDUnknownBlockType)arg1 onErrorBlock:(CDUnknownBlockType)arg2 dispatchType:(long long)arg3;
- (void)resumePlaying:(CDUnknownBlockType)arg1 onErrorBlock:(CDUnknownBlockType)arg2;
- (void)startPlaying:(CDUnknownBlockType)arg1 onErrorBlock:(CDUnknownBlockType)arg2;
- (void)stopAudioSession;
- (_Bool)startAudioSession_Error:(id *)arg1;
- (_Bool)isPlaying;
- (_Bool)isActive;
- (int)readCallbackWithFlags:(unsigned int *)arg1 timestamp:(const struct AudioTimeStamp *)arg2 busNumber:(unsigned int)arg3 frameCount:(unsigned int)arg4 bufferList:(struct AudioBufferList *)arg5;
- (void)updateMeQAudioProcessing;
- (id)firstProvider;
- (void)clearDataProviders;
- (id)replaceDataProviders:(id)arg1 muted:(_Bool)arg2;
- (void)removeDataProvider:(id)arg1;
- (id)insertDataProvider:(id)arg1;
- (void)addDataProvider:(id)arg1;
@property(readonly, nonatomic) NSArray *equalizerPresets; // @synthesize equalizerPresets=_equalizerPresets;
- (void)setCurrentEqualizerWithNumber:(id)arg1;
- (struct OpaqueAudioComponentInstance *)equalizerUnit;
- (void)dispatchType:(long long)arg1 toPlayerQueue:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;
@property(retain) NSObject<RHAudioDataSource> *currentProvider; // @synthesize currentProvider=_currentProvider;

@end

