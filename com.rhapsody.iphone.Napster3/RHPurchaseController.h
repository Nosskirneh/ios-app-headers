//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SKPaymentTransactionObserver-Protocol.h"
#import "SKProductsRequestDelegate-Protocol.h"

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSNotificationCenter, NSNumber, NSString, NSURLSession, RHMetricsController, SKProductsRequest, ZDSDeferred, ZDSPromise;
@protocol RHAbTestingService, RHPartnerReferalDataService, RHTimeService;

@interface RHPurchaseController : NSObject <SKProductsRequestDelegate, SKPaymentTransactionObserver>
{
    _Bool _productWasRestored;
    int _transactionState;
    NSMutableArray *_products;
    NSMutableDictionary *_selectedProduct;
    NSDictionary *_tempAccountInfo;
    NSArray *_skProducts;
    ZDSDeferred *_restorePurchaseDeferred;
    RHMetricsController *_metricsController;
    NSNumber *_napsterProductAvailable;
    id <RHPartnerReferalDataService> _partnerReferalService;
    id <RHTimeService> _timeService;
    id <RHAbTestingService> _abTestingService;
    ZDSPromise *__promiseForAvailableNapsterProducts;
    NSURLSession *_session;
    ZDSDeferred *_getProductsDeferred;
    ZDSDeferred *_createPaymentDeferred;
    ZDSDeferred *_addProductToSubscriptionDeferred;
    SKProductsRequest *_productsRequest;
    ZDSDeferred *_signUpAvailabilityDeferred;
}

+ (id)descriptionForProduct:(id)arg1;
@property(retain) ZDSDeferred *signUpAvailabilityDeferred; // @synthesize signUpAvailabilityDeferred=_signUpAvailabilityDeferred;
@property(retain, nonatomic) SKProductsRequest *productsRequest; // @synthesize productsRequest=_productsRequest;
@property(nonatomic) _Bool productWasRestored; // @synthesize productWasRestored=_productWasRestored;
@property(retain, nonatomic) ZDSDeferred *addProductToSubscriptionDeferred; // @synthesize addProductToSubscriptionDeferred=_addProductToSubscriptionDeferred;
@property(retain, nonatomic) ZDSDeferred *createPaymentDeferred; // @synthesize createPaymentDeferred=_createPaymentDeferred;
@property(retain, nonatomic) ZDSDeferred *getProductsDeferred; // @synthesize getProductsDeferred=_getProductsDeferred;
@property(readonly, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(retain, nonatomic) ZDSPromise *_promiseForAvailableNapsterProducts; // @synthesize _promiseForAvailableNapsterProducts=__promiseForAvailableNapsterProducts;
@property(retain, nonatomic) id <RHAbTestingService> abTestingService; // @synthesize abTestingService=_abTestingService;
@property(retain, nonatomic) id <RHTimeService> timeService; // @synthesize timeService=_timeService;
@property(retain, nonatomic) id <RHPartnerReferalDataService> partnerReferalService; // @synthesize partnerReferalService=_partnerReferalService;
@property(retain, nonatomic) NSNumber *napsterProductAvailable; // @synthesize napsterProductAvailable=_napsterProductAvailable;
@property(retain, nonatomic) RHMetricsController *metricsController; // @synthesize metricsController=_metricsController;
@property(retain, nonatomic) ZDSDeferred *restorePurchaseDeferred; // @synthesize restorePurchaseDeferred=_restorePurchaseDeferred;
@property(retain, nonatomic) NSArray *skProducts; // @synthesize skProducts=_skProducts;
@property(retain, nonatomic) NSDictionary *tempAccountInfo; // @synthesize tempAccountInfo=_tempAccountInfo;
@property(nonatomic) int transactionState; // @synthesize transactionState=_transactionState;
@property(retain, nonatomic) NSMutableDictionary *selectedProduct; // @synthesize selectedProduct=_selectedProduct;
@property(retain, nonatomic) NSMutableArray *products; // @synthesize products=_products;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSNotificationCenter *notificationCenter;
- (id)receiptData;
- (id)storeCountry;
- (id)eRemedyOp;
- (id)productsRequestForSet:(id)arg1;
- (id)paymentQueue;
- (id)accountController;
- (id)appDelegate;
- (_Bool)storeKitCanMakePayments;
- (id)promiseForProducts;
- (id)promiseForCurrentCobrandId;
- (id)productIDs;
- (void)handleTransactionRestoreFailed:(id)arg1;
- (id)restoreCompletedTransactions;
- (void)restoreProduct:(id)arg1 toAccount:(id)arg2;
- (_Bool)transactionWasInterrupted;
- (void)saveToUserModel;
- (void)loadFromUserModel;
- (_Bool)canSignUp;
- (void)handleErrorForTransaction:(id)arg1;
- (void)paymentQueueRestoreCompletedTransactionsFinished:(id)arg1;
- (void)paymentQueue:(id)arg1 restoreCompletedTransactionsFailedWithError:(id)arg2;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (id)premierProductWithTrial:(_Bool)arg1;
- (id)deferredPremierProductWithTrial:(_Bool)arg1;
- (id)deferredForCreatePayment:(id)arg1;
- (id)deferredForCreatePaymentForCurrentProduct;
- (id)refreshSignupAvailability;
- (_Bool)isTrialProduct:(id)arg1;
- (id)skProductsForRhapsodyProducts:(id)arg1;
- (id)availablePremierSKProductsForCountry:(id)arg1 trialMode:(int)arg2;
- (id)availableSKProductsForCountry:(id)arg1 trialMode:(int)arg2;
- (id)availableSKProductsForCountry:(id)arg1;
- (id)rhapsodyPremierProductsForCountry:(id)arg1 trialMode:(int)arg2;
- (id)rhapsodyProductsForCountry:(id)arg1 trialMode:(int)arg2;
- (id)rhapsodyProductsForCountry:(id)arg1;
- (id)lowestPriceSKProductWithAppleProductIds:(id)arg1;
- (id)skProductWithAppleProductId:(id)arg1;
- (id)productWithRhapsodyProductId:(id)arg1;
- (id)productWithAppleProductId:(id)arg1;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (id)promiseForRhapsodyProductsRequest;
- (id)deferredForRequestAppleProductsFromSet:(id)arg1;
- (void)handleSubscriptionError:(id)arg1;
- (void)handleSubscriptionSuccess;
- (id)promiseForAddProductSubscription:(id)arg1 toAccount:(id)arg2;
- (id)promiseForAvailableNapsterProducts;
- (id)promiseForCreateAccountWithUsername:(id)arg1 password:(id)arg2 cobrandId:(id)arg3;
- (void)refreshSignupAvailabilityIfNeeded;
- (void)networkStatusDidChange;
- (void)dealloc;
- (id)initWithPartnerReferalService:(id)arg1 timeService:(id)arg2 abTestingService:(id)arg3 session:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

