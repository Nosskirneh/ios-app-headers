//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "RHAudioDataSourceDelegate-Protocol.h"
#import "RHAudioPlayerDelegate-Protocol.h"
#import "RHPlayerCachingControllerDelegate-Protocol.h"
#import "RHPlayerControllerSequenceAlgorithmDelegate-Protocol.h"
#import "_TtP7Napster14AbstractPlayer_-Protocol.h"

@class NSArray, NSDictionary, NSNotificationCenter, NSString, RHAccountController, RHAudioPlayer, RHDownloadsController, RHPlayableItem, RHPlayerCachingController, RHPlayerControllerSequenceAlgorithm, ZDSDeferred, ZDSPromise, _TtC7Napster19ReachabilityService;
@protocol _TtP7Napster22AbstractPlayerDelegate_;

@interface AudioPlayerManager : NSObject <RHPlayerCachingControllerDelegate, RHAudioPlayerDelegate, RHAudioDataSourceDelegate, _TtP7Napster14AbstractPlayer_, RHPlayerControllerSequenceAlgorithmDelegate>
{
    int _bufferState;
    _Bool _audioIsInterrupted;
    RHPlayerControllerSequenceAlgorithm *_swapSequencer;
    id <_TtP7Napster22AbstractPlayerDelegate_> _delegate;
    RHAudioPlayer *_audioPlayer;
    ZDSPromise *_moveProviderPromise;
    ZDSPromise *_currentPlaybackDataPromise;
    RHPlayerCachingController *_playerCachingController;
    long long _state;
    NSString *_currentAudioRoute;
    NSDictionary *_interruptState;
    double _playheadPosition;
    long long _internalRepeatMode;
    RHAccountController *_accountController;
    _TtC7Napster19ReachabilityService *_reachabilityService;
    NSNotificationCenter *_notificationCenter;
    RHDownloadsController *_downloadsController;
    RHPlayerControllerSequenceAlgorithm *_sequencer;
    ZDSDeferred *_endlessSequencerInitialization;
}

@property(retain, nonatomic) ZDSDeferred *endlessSequencerInitialization; // @synthesize endlessSequencerInitialization=_endlessSequencerInitialization;
@property(retain, nonatomic) RHPlayerControllerSequenceAlgorithm *sequencer; // @synthesize sequencer=_sequencer;
@property(readonly, nonatomic) _Bool audioIsInterrupted; // @synthesize audioIsInterrupted=_audioIsInterrupted;
@property(retain, nonatomic) RHDownloadsController *downloadsController; // @synthesize downloadsController=_downloadsController;
@property(retain, nonatomic) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain, nonatomic) _TtC7Napster19ReachabilityService *reachabilityService; // @synthesize reachabilityService=_reachabilityService;
@property(retain, nonatomic) RHAccountController *accountController; // @synthesize accountController=_accountController;
@property(nonatomic) long long internalRepeatMode; // @synthesize internalRepeatMode=_internalRepeatMode;
@property(nonatomic) double playheadPosition; // @synthesize playheadPosition=_playheadPosition;
@property(retain) NSDictionary *interruptState; // @synthesize interruptState=_interruptState;
@property(copy, nonatomic) NSString *currentAudioRoute; // @synthesize currentAudioRoute=_currentAudioRoute;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) RHPlayerCachingController *playerCachingController; // @synthesize playerCachingController=_playerCachingController;
@property(retain, nonatomic) ZDSPromise *currentPlaybackDataPromise; // @synthesize currentPlaybackDataPromise=_currentPlaybackDataPromise;
@property(retain, nonatomic) ZDSPromise *moveProviderPromise; // @synthesize moveProviderPromise=_moveProviderPromise;
@property(retain, nonatomic) RHAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(nonatomic) __weak id <_TtP7Napster22AbstractPlayerDelegate_> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) RHPlayerControllerSequenceAlgorithm *swapSequencer; // @synthesize swapSequencer=_swapSequencer;
@property(readonly, nonatomic) int currentProviderBufferState; // @synthesize currentProviderBufferState=_bufferState;
- (void).cxx_destruct;
- (id)dependencies;
- (void)sequenceAlgorithmProviderChangedCurrentItem:(id)arg1 from:(id)arg2 to:(id)arg3;
- (void)sequenceAlgorithmCurrentPlayableContextChanged:(id)arg1 from:(id)arg2 to:(id)arg3;
- (void)setCurrentEqualizerWithNumber:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *equalizerPresets;
@property(readonly, copy, nonatomic) NSString *audioFormat;
@property(readonly, nonatomic) long long bitrate;
- (void)playerCachingController:(id)arg1 downloaded:(id)arg2;
- (_Bool)shouldSendPlaybackEvents;
- (id)promiseForAudioUnitDTO;
- (void)audioDataProviderEndOfFile:(id)arg1;
- (void)audioDataProvider:(id)arg1 receivedConverterError:(int)arg2 outputBytesConsumed:(unsigned long long)arg3;
- (void)audioDataProvider:(id)arg1 stalledWithOutputPacketsLeft:(unsigned long long)arg2 outputBytesConsumed:(unsigned long long)arg3;
- (void)audioDataProvider:(id)arg1 bufferedDataWithFilledBuffers:(unsigned long long)arg2 andEmptyBuffers:(unsigned long long)arg3;
- (void)audioPlayer:(id)arg1 interAppConnectedWith:(id)arg2;
- (void)audioPlayerInterAppDisconnected:(id)arg1;
- (_Bool)audioPlayerIgnoreHandlingRemoteControlEvents:(id)arg1;
- (void)audioPlayer:(id)arg1 currentAudioRouteChangedFrom:(id)arg2 toRoute:(id)arg3 because:(int)arg4;
- (void)audioPlayerAudioInterruptionEnded:(id)arg1 shouldResume:(_Bool)arg2;
- (void)audioPlayerAudioInterruptionStarted:(id)arg1;
- (void)audioPlayer:(id)arg1 provider:(id)arg2 timeChanged:(double)arg3;
- (void)audioPlayer:(id)arg1 providerAtEnd:(id)arg2;
- (void)audioPlayerPlaybackPaused:(id)arg1;
- (void)audioPlayerPlaybackStarted:(id)arg1;
- (void)audioPlayer:(id)arg1 uniqueProviderChangedFrom:(id)arg2 to:(id)arg3;
- (void)replaceAudioProvidersWith:(id)arg1;
@property(nonatomic) _Bool evenOn;
@property(nonatomic) _Bool evenFilterOn;
@property(readonly, nonatomic) float currentProviderCacheProgress;
- (void)setCurrentProviderBufferState:(int)arg1;
- (void)logMeteringForChangingFrom:(id)arg1 to:(id)arg2;
- (void)audioPlayer:(id)arg1 providerChangedFrom:(id)arg2 to:(id)arg3;
- (void)updateDownloadCachingController;
- (void)ensureDurationIsNotZeroForTrack:(id)arg1 fileProvider:(id)arg2;
- (void)playWithCachedTrackData:(id)arg1 forRequestContext:(id)arg2;
- (void)updateUserInfoForProvider:(id)arg1 item:(id)arg2 playbackRequest:(id)arg3;
- (id)getMeteringContextSourceWithPlayContext:(id)arg1;
- (id)createMeteringContextWithPlayContext:(id)arg1;
- (id)createRepeatModeParameterWithPlayContext:(id)arg1;
- (id)requestPlaybackFor:(id)arg1;
- (id)performPlaybackWithRequestContext:(id)arg1;
- (id)initializeEndlessSequencer;
- (void)swapSequencers;
- (void)performPlayback:(id)arg1;
- (id)performNewPlaybackWithRequestContext:(id)arg1 reachabilityService:(id)arg2 accountController:(id)arg3 downloadsController:(id)arg4 notificationCenter:(id)arg5 repeatMode:(long long)arg6;
- (double)maximumAvailableFor:(double)arg1;
- (double)seekTo:(double)arg1;
- (void)skipAtBeginning;
- (void)skipPrevious;
- (void)skipNext;
- (void)stop:(CDUnknownBlockType)arg1;
- (void)deactivateWhenDone:(CDUnknownBlockType)arg1;
- (void)activate;
- (void)pause;
- (void)play;
@property(readonly, nonatomic) RHPlayableItem *afterNextItem;
@property(readonly, nonatomic) RHPlayableItem *nextItem;
@property(readonly, nonatomic) RHPlayableItem *currentItem;
@property(readonly, nonatomic) RHPlayableItem *previousItem;
@property(readonly, nonatomic) RHPlayableItem *beforePreviousItem;
@property(nonatomic) long long repeatMode;
@property(nonatomic) _Bool shuffleMode;
@property(nonatomic) _Bool userScrubbing;
- (void)dealloc;
- (void)enterStoppedStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)clearState;
- (id)initWithAudioPlayer:(id)arg1 playerCachingController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

