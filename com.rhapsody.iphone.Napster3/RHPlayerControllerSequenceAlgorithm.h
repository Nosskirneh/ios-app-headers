//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "RHPlayableItemsProviderDelegate-Protocol.h"

@class NSDictionary, NSMutableArray, NSNotificationCenter, NSString, RHCurrentPlayableContext, RHPlayContext, RHPlayableItem, RHPlayableItemsProvider, _TtC7Napster19ReachabilityService;
@protocol RHPlayerControllerSequenceAlgorithmDelegate;

@interface RHPlayerControllerSequenceAlgorithm : NSObject <RHPlayableItemsProviderDelegate>
{
    _Bool _shuffling;
    _Bool _isInitialSequence;
    id <RHPlayerControllerSequenceAlgorithmDelegate> _delegate;
    RHCurrentPlayableContext *_currentPlayableContext;
    long long _repeatMode;
    RHPlayContext *_playContext;
    NSNotificationCenter *_notificationCenter;
    _TtC7Napster19ReachabilityService *_serverReachability;
    RHPlayableItemsProvider *_playableItemsProvider;
    NSDictionary *_uniqueItemsForEntities;
    NSMutableArray *_shuffleHistory;
    NSMutableArray *_initialSequencePlayedItems;
}

@property(retain, nonatomic) NSMutableArray *initialSequencePlayedItems; // @synthesize initialSequencePlayedItems=_initialSequencePlayedItems;
@property(retain, nonatomic) NSMutableArray *shuffleHistory; // @synthesize shuffleHistory=_shuffleHistory;
@property(retain, nonatomic) NSDictionary *uniqueItemsForEntities; // @synthesize uniqueItemsForEntities=_uniqueItemsForEntities;
@property(retain, nonatomic) RHPlayableItemsProvider *playableItemsProvider; // @synthesize playableItemsProvider=_playableItemsProvider;
@property(readonly, nonatomic) _TtC7Napster19ReachabilityService *serverReachability; // @synthesize serverReachability=_serverReachability;
@property(readonly, nonatomic) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(readonly, nonatomic) RHPlayContext *playContext; // @synthesize playContext=_playContext;
@property(nonatomic) _Bool isInitialSequence; // @synthesize isInitialSequence=_isInitialSequence;
@property(nonatomic) long long repeatMode; // @synthesize repeatMode=_repeatMode;
@property(nonatomic) _Bool shuffling; // @synthesize shuffling=_shuffling;
@property(retain, nonatomic) RHCurrentPlayableContext *currentPlayableContext; // @synthesize currentPlayableContext=_currentPlayableContext;
@property(nonatomic) __weak id <RHPlayerControllerSequenceAlgorithmDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)trackListChanged;
- (void)currentTrackChangedFrom:(id)arg1 to:(id)arg2;
- (void)resetInitialSequence;
- (void)updateAllStructuresBecauseOfPlayableItemsChange;
- (void)removeNonExistingInitialSequencePlayedItems;
- (void)updateShuffleHistory;
- (id)filterPlayableItemsSoThatTheyOnlyContainExistingEntities:(id)arg1;
- (void)updateUniqueItemsForEntities;
- (void)configureInitialSequenceFlag;
- (id)moveToPlayable:(id)arg1;
- (void)adjustShuffleHistoryInSequentialMode:(id)arg1;
- (id)buildCurrentPlayableContext:(id)arg1;
- (id)currentPlayableContextWithShuffleAlgorithm:(id)arg1;
- (id)calculateNextShufflePlayableItem;
- (id)resolveShuffleCurrentPlayableItem:(id)arg1;
- (id)currentPlayableContextWithSequentialAlgorithm:(id)arg1;
- (id)firstPlayableItem;
- (id)ensureShuffleHasPlayableItemForPlayableEntity:(id)arg1;
@property(readonly, nonatomic) RHPlayableItem *afterNextItem;
@property(readonly, nonatomic) RHPlayableItem *nextItem;
@property(readonly, nonatomic) RHPlayableItem *currentItem;
@property(readonly, nonatomic) RHPlayableItem *previousItem;
@property(readonly, nonatomic) RHPlayableItem *beforePreviousItem;
- (void)networkStatusChanged;
- (void)dealloc;
- (void)unregisterNotifications;
- (void)registerNotifications;
- (id)initWithPlayContext:(id)arg1 reachabilityService:(id)arg2 notificationCenter:(id)arg3 shuffling:(_Bool)arg4 repeatMode:(long long)arg5;
- (void)clearHistoryData;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

