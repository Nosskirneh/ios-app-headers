//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTFreeTierCollectionPlaylistsModelDelegate.h"
#import "SPTFreeTierCollectionPlaylistsViewModel.h"

@class NSString, SPTFreeTierCollectionLogger;

@interface SPTFreeTierCollectionPlaylistFolderViewModelImplementation : NSObject <SPTFreeTierCollectionPlaylistsViewModel, SPTFreeTierCollectionPlaylistsModelDelegate>
{
    _Bool compactMode;
    _Bool empty;
    id <SPTFreeTierCollectionPlaylistsViewModelDelegate> delegate;
    NSString *textFilter;
    id <SPTFreeTierCollectionPlaylistsModel> _model;
    id <SPTLinkDispatcher> _linkDispatcher;
    id <SPTPlaylistPlatformPlaylistSynchroniser> _playlistSynchroniser;
    id <SPTFreeTierCreatePlaylistController> _createPlaylistController;
    SPTFreeTierCollectionLogger *_logger;
    id <SPTFreeTierCollectionTestManager> _testManager;
    id <SPTFreeTierCollectionPlaylistsModelEntity> _modelEntity;
    id <SPTSortingFilteringUIFactory> _sortingFilteringPickerFactory;
}

@property(retain, nonatomic) id <SPTSortingFilteringUIFactory> sortingFilteringPickerFactory; // @synthesize sortingFilteringPickerFactory=_sortingFilteringPickerFactory;
@property(retain, nonatomic) id <SPTFreeTierCollectionPlaylistsModelEntity> modelEntity; // @synthesize modelEntity=_modelEntity;
@property(retain, nonatomic) id <SPTFreeTierCollectionTestManager> testManager; // @synthesize testManager=_testManager;
@property(retain, nonatomic) SPTFreeTierCollectionLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) id <SPTFreeTierCreatePlaylistController> createPlaylistController; // @synthesize createPlaylistController=_createPlaylistController;
@property(retain, nonatomic) id <SPTPlaylistPlatformPlaylistSynchroniser> playlistSynchroniser; // @synthesize playlistSynchroniser=_playlistSynchroniser;
@property(retain, nonatomic) id <SPTLinkDispatcher> linkDispatcher; // @synthesize linkDispatcher=_linkDispatcher;
@property(retain, nonatomic) id <SPTFreeTierCollectionPlaylistsModel> model; // @synthesize model=_model;
@property(copy, nonatomic) NSString *textFilter; // @synthesize textFilter;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty; // @synthesize empty;
@property(nonatomic) __weak id <SPTFreeTierCollectionPlaylistsViewModelDelegate> delegate; // @synthesize delegate;
@property(readonly, nonatomic, getter=isCompactMode) _Bool compactMode; // @synthesize compactMode;
- (void).cxx_destruct;
- (void)playlistsModel:(id)arg1 error:(id)arg2;
- (void)playlistsModel:(id)arg1 didUpdateEntity:(id)arg2;
- (id)modelItemEntityAtIndexPath:(id)arg1;
- (id)playlistEntityForRowAtIndexPath:(id)arg1;
- (void)logFilterSortInteractionType:(unsigned long long)arg1;
- (void)resetFilters;
- (id)sortingAndFilteringPickerViewController;
- (void)searchWillEnd;
- (void)searchWillBegan;
- (void)endObservingRowAtIndexPath:(id)arg1;
- (void)beginObservingRowAtIndexPath:(id)arg1;
@property(readonly, nonatomic) unsigned long long countOfSections;
- (unsigned long long)countOfItemsInSection:(unsigned long long)arg1;
- (void)itemSelectedAtIndexPath:(id)arg1;
- (id)itemViewModelAtIndexPath:(id)arg1;
- (id)sectionViewModelForSection:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *title;
- (_Bool)hasMoreInSection:(unsigned long long)arg1;
- (void)loadMoreInSection:(unsigned long long)arg1;
- (void)loadViewModel;
@property(readonly, nonatomic, getter=isLoaded) _Bool loaded;
@property(readonly, nonatomic) unsigned long long filteredContentState;
@property(readonly, nonatomic, getter=isSortingAndFilteringEnabled) _Bool sortingAndFilteringEnabled;
- (id)initWithModel:(id)arg1 linkDispatcher:(id)arg2 playlistSynchroniser:(id)arg3 createPlaylistController:(id)arg4 logger:(id)arg5 testManager:(id)arg6 sortingFilteringPickerFactory:(id)arg7 compactMode:(_Bool)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

