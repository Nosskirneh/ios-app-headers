//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTCastManagerObserver-Protocol.h"
#import "SPTGaiaDeviceStateManagerObserver-Protocol.h"
#import "SPTGaiaVolumeButtonControllerDelegate-Protocol.h"
#import "SPTGaiaVolumeControllerInterface-Protocol.h"
#import "SPTGaiaVolumeViewDelegate-Protocol.h"

@class AVAudioSession, GaiaRemoteDeviceVolumeOverlayViewController, MPMusicPlayerController, NSNotificationCenter, NSNumber, NSString, SPTCastManager, SPTGaiaDeviceAppearanceMapping, SPTGaiaDeviceManager, SPTGaiaLogger, SPTGaiaVolumeButtonController, SPTGaiaVolumeView, SPTObserverManager, SPTTheme;
@protocol SPTGaiaLockScreenControlsStateProvider;

@interface SPTGaiaVolumeController : NSObject <SPTCastManagerObserver, SPTGaiaDeviceStateManagerObserver, SPTGaiaVolumeViewDelegate, SPTGaiaVolumeButtonControllerDelegate, SPTGaiaVolumeControllerInterface>
{
    _Bool _airplayHidden;
    NSNumber *_currentVolume;
    SPTGaiaVolumeButtonController *_volumeButtonController;
    SPTGaiaDeviceManager *_deviceManager;
    SPTCastManager *_castDeviceManager;
    SPTGaiaVolumeView *_volumeView;
    GaiaRemoteDeviceVolumeOverlayViewController *_remoteVolumeOverlay;
    SPTGaiaDeviceAppearanceMapping *_appearanceMapping;
    id <SPTGaiaLockScreenControlsStateProvider> _lockScreenControlsStateProvider;
    SPTTheme *_theme;
    NSNotificationCenter *_notificationCenter;
    AVAudioSession *_audioSession;
    MPMusicPlayerController *_applicationMusicPlayer;
    SPTGaiaLogger *_logger;
    SPTObserverManager *_observerManager;
}

@property(readonly, nonatomic) SPTObserverManager *observerManager; // @synthesize observerManager=_observerManager;
@property(readonly, nonatomic) SPTGaiaLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) MPMusicPlayerController *applicationMusicPlayer; // @synthesize applicationMusicPlayer=_applicationMusicPlayer;
@property(retain, nonatomic) AVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property(retain, nonatomic) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain, nonatomic) SPTTheme *theme; // @synthesize theme=_theme;
@property(nonatomic) __weak id <SPTGaiaLockScreenControlsStateProvider> lockScreenControlsStateProvider; // @synthesize lockScreenControlsStateProvider=_lockScreenControlsStateProvider;
@property(retain, nonatomic) SPTGaiaDeviceAppearanceMapping *appearanceMapping; // @synthesize appearanceMapping=_appearanceMapping;
@property(retain, nonatomic) GaiaRemoteDeviceVolumeOverlayViewController *remoteVolumeOverlay; // @synthesize remoteVolumeOverlay=_remoteVolumeOverlay;
@property(retain, nonatomic) SPTGaiaVolumeView *volumeView; // @synthesize volumeView=_volumeView;
@property(nonatomic) __weak SPTCastManager *castDeviceManager; // @synthesize castDeviceManager=_castDeviceManager;
@property(nonatomic) __weak SPTGaiaDeviceManager *deviceManager; // @synthesize deviceManager=_deviceManager;
@property(nonatomic) _Bool airplayHidden; // @synthesize airplayHidden=_airplayHidden;
@property(retain, nonatomic) SPTGaiaVolumeButtonController *volumeButtonController; // @synthesize volumeButtonController=_volumeButtonController;
@property(retain, nonatomic) NSNumber *currentVolume; // @synthesize currentVolume=_currentVolume;
- (void).cxx_destruct;
- (void)removeVolumeControllerObserver:(id)arg1;
- (void)addVolumeControllerObserver:(id)arg1;
- (_Bool)lockScreenVolumeControlsShouldBeActive;
- (_Bool)lockScreenVolumeControlsFeatureEnabled;
- (void)castManager:(id)arg1 deviceConnectivityDidChange:(id)arg2;
- (void)updateSystemVolume:(id)arg1;
- (void)updateRemoteVolume:(id)arg1 maybeShowOverlay:(_Bool)arg2 delayCount:(long long)arg3;
- (void)updateRemoteVolume:(id)arg1 maybeShowOverlay:(_Bool)arg2;
- (_Bool)shouldShowVolumeControls:(id)arg1;
- (void)requestVolumeChange:(float)arg1;
- (float)volumeButtonControllerDidStealVolumeDown:(id)arg1;
- (float)volumeButtonControllerDidStealVolumeUp:(id)arg1;
- (void)volumeView:(id)arg1 localVolumeChanged:(float)arg2;
- (void)volumeView:(id)arg1 remoteVolumeChanged:(float)arg2;
- (void)audioSessionInterruptionNotification:(id)arg1;
- (_Bool)isRemoteVolumeAllowedForDevice:(id)arg1;
- (void)updateRemoteVolumeAvailabilityWithCompletion:(CDUnknownBlockType)arg1;
- (void)applicationDidBecomeActiveNotification;
- (void)applicationWillResignActiveNotification;
- (void)callUpdateRemoteVolumeWithCurrentVolumeAndNoOverlay;
- (void)deviceStateManager:(id)arg1 activeDeviceDidChange:(id)arg2;
- (void)deviceStateManager:(id)arg1 deviceBeingActivatedDidChange:(id)arg2 error:(id)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)deviceStateManager:(id)arg1 device:(id)arg2 volumeDidChange:(float)arg3;
- (void)dealloc;
- (id)initWithDeviceManager:(id)arg1 castDeviceManager:(id)arg2 theme:(id)arg3 deviceIconMapper:(id)arg4 lockScreenControlsStateProvider:(id)arg5 notificationCenter:(id)arg6 application:(id)arg7 audioSession:(id)arg8 applicationMusicPlayer:(id)arg9 logger:(id)arg10 remoteVolumeOverlay:(id)arg11 volumeButtonController:(id)arg12;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

