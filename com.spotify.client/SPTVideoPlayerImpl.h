//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTVideoApplicationStateObserver-Protocol.h"
#import "SPTVideoPlaybackSessionDelegate-Protocol.h"
#import "SPTVideoPlayer-Protocol.h"
#import "SPTVideoSurfaceManagerObserver-Protocol.h"

@class NSString, SPTVideoApplicationStateObservable, SPTVideoDisplayView, SPTVideoDisplayViewFactory, SPTVideoObserverManager, SPTVideoPlaybackIdentityFactory, SPTVideoPlaybackSession, SPTVideoPlaybackSessionFactory, SPTVideoPlayerSource, SPTVideoSubtitleLayouter;
@protocol SPTVideoSubtitle, SPTVideoSubtitleFactory, SPTVideoSurface, SPTVideoSurfaceManager;

@interface SPTVideoPlayerImpl : NSObject <SPTVideoPlaybackSessionDelegate, SPTVideoApplicationStateObserver, SPTVideoSurfaceManagerObserver, SPTVideoPlayer>
{
    _Bool _shouldResumeOnActive;
    _Bool _allowRoyaltyMedia;
    float _playbackSpeed;
    id <SPTVideoSubtitle> _preferredSubtitle;
    SPTVideoPlaybackSessionFactory *_sessionFactory;
    id <SPTVideoSurfaceManager> _surfaceManager;
    SPTVideoPlaybackIdentityFactory *_playbackIdentityFactory;
    SPTVideoPlaybackSession *_currentSession;
    SPTVideoPlayerSource *_playerSource;
    SPTVideoDisplayViewFactory *_displayViewFactory;
    SPTVideoDisplayView *_displayView;
    SPTVideoSubtitleLayouter *_subtitleLayouter;
    id <SPTVideoSubtitleFactory> _subtitleFactory;
    SPTVideoApplicationStateObservable *_applicationStateObservable;
    id <SPTVideoSurface> _surface;
    SPTVideoObserverManager *_playbackEventObserverManager;
}

@property(nonatomic) _Bool allowRoyaltyMedia; // @synthesize allowRoyaltyMedia=_allowRoyaltyMedia;
@property(nonatomic) _Bool shouldResumeOnActive; // @synthesize shouldResumeOnActive=_shouldResumeOnActive;
@property(retain, nonatomic) SPTVideoObserverManager *playbackEventObserverManager; // @synthesize playbackEventObserverManager=_playbackEventObserverManager;
@property(retain, nonatomic) id <SPTVideoSurface> surface; // @synthesize surface=_surface;
@property(retain, nonatomic) SPTVideoApplicationStateObservable *applicationStateObservable; // @synthesize applicationStateObservable=_applicationStateObservable;
@property(retain, nonatomic) id <SPTVideoSubtitleFactory> subtitleFactory; // @synthesize subtitleFactory=_subtitleFactory;
@property(retain, nonatomic) SPTVideoSubtitleLayouter *subtitleLayouter; // @synthesize subtitleLayouter=_subtitleLayouter;
@property(retain, nonatomic) SPTVideoDisplayView *displayView; // @synthesize displayView=_displayView;
@property(retain, nonatomic) SPTVideoDisplayViewFactory *displayViewFactory; // @synthesize displayViewFactory=_displayViewFactory;
@property(retain, nonatomic) SPTVideoPlayerSource *playerSource; // @synthesize playerSource=_playerSource;
@property(retain, nonatomic) SPTVideoPlaybackSession *currentSession; // @synthesize currentSession=_currentSession;
@property(retain, nonatomic) SPTVideoPlaybackIdentityFactory *playbackIdentityFactory; // @synthesize playbackIdentityFactory=_playbackIdentityFactory;
@property(retain, nonatomic) id <SPTVideoSurfaceManager> surfaceManager; // @synthesize surfaceManager=_surfaceManager;
@property(retain, nonatomic) SPTVideoPlaybackSessionFactory *sessionFactory; // @synthesize sessionFactory=_sessionFactory;
@property(nonatomic) float playbackSpeed; // @synthesize playbackSpeed=_playbackSpeed;
- (void).cxx_destruct;
- (void)surfaceManager:(id)arg1 didRemoveSurface:(id)arg2;
- (void)surfaceManager:(id)arg1 didChangePriorityForSurface:(id)arg2;
- (void)surfaceManager:(id)arg1 didAddSurface:(id)arg2;
- (void)didChangeBackgroundState:(_Bool)arg1;
- (void)didBecomeActive;
- (void)willResignActive;
- (id)availableSubtitles;
- (id)selectedSubtitle;
@property(retain, nonatomic) id <SPTVideoSubtitle> preferredSubtitle; // @synthesize preferredSubtitle=_preferredSubtitle;
- (void)removePlaybackEventObserver:(id)arg1;
- (void)addPlaybackEventObserver:(id)arg1;
- (void)videoPlaybackSession:(id)arg1 didEncounterUnrecoverableError:(id)arg2;
- (void)videoPlaybackSessionDidFinish:(id)arg1;
- (void)videoPlaybackSession:(id)arg1 didChangeDuration:(double)arg2;
- (void)videoPlaybackSession:(id)arg1 didPlayToTime:(CDStruct_1b6d18a9)arg2;
- (void)videoPlaybackSessionDidStart:(id)arg1;
- (void)stopWithNextIdentity:(id)arg1;
- (void)loadSessionWithIdentity:(id)arg1 options:(id)arg2;
- (void)refreshRenderingSurface;
- (id)providePlayerSource;
- (void)stop;
@property(nonatomic) _Bool repeat;
@property(nonatomic, getter=isVideoDisabled) _Bool videoDisabled;
@property(nonatomic, getter=isAudioDisabled) _Bool audioDisabled;
- (void)seekTo:(double)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) double currentPosition;
- (_Bool)isPaused;
- (void)resume;
- (void)pause;
- (void)playWithRequest:(id)arg1 options:(id)arg2;
- (void)playWithRequest:(id)arg1;
- (void)dealloc;
- (id)initWithPlaybackSessionFactory:(id)arg1 playerSource:(id)arg2 surfaceManager:(id)arg3 subtitleFactory:(id)arg4 playbackIdentityFactory:(id)arg5 applicationStateObservable:(id)arg6 displayViewFactory:(id)arg7 subtitleLayouter:(id)arg8 allowRoyaltyMedia:(_Bool)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

