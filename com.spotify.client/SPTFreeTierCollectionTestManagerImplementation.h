//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SPTFeatureFlagSignalObserver-Protocol.h"
#import "SPTFreeTierCollectionTestManager-Protocol.h"

@class NSString;
@protocol SPTCollectionPlatformTestManager, SPTFeatureFlagFactory, SPTFeatureFlagSignal, SPTProductState;

@interface SPTFreeTierCollectionTestManagerImplementation : NSObject <SPTFeatureFlagSignalObserver, SPTFreeTierCollectionTestManager>
{
    _Bool _premiumLabelEnabled;
    _Bool _madeForSignalEnabled;
    _Bool _madeForEmployeeSignalEnabled;
    _Bool _sortingAndFilteringEnabled;
    _Bool _sortingAndFilteringFavoriteSongsEnabled;
    _Bool _frecencySortOrderInPlaylistsEnabled;
    _Bool _frecencySortOrderDefaultInPlaylistsEnabled;
    _Bool _collectionFoldersEnabled;
    _Bool _alternativeActionButtonsEnabled;
    id <SPTFeatureFlagFactory> _featureFlagFactory;
    id <SPTProductState> _productState;
    id <SPTCollectionPlatformTestManager> _collectionPlatformTestManager;
    id <SPTFeatureFlagSignal> _yourLibrarySignal;
    id <SPTFeatureFlagSignal> _windowedTrackTestSignal;
    id <SPTFeatureFlagSignal> _madeForSignal;
    id <SPTFeatureFlagSignal> _madeForEmployeeSignal;
    id <SPTFeatureFlagSignal> _sortingAndFilteringYourLibrarySignal;
    id <SPTFeatureFlagSignal> _sortingAndFilteringFavoriteSongsSignal;
    id <SPTFeatureFlagSignal> _frecencySortOrderInPlaylistsSignal;
    id <SPTFeatureFlagSignal> _frecencySortOrderDefaultInPlaylistsSignal;
    id <SPTFeatureFlagSignal> _collectionFoldersSignal;
    id <SPTFeatureFlagSignal> _alternativeActionButtonsSignal;
}

@property(nonatomic, getter=isAlternativeActionButtonsEnabled) _Bool alternativeActionButtonsEnabled; // @synthesize alternativeActionButtonsEnabled=_alternativeActionButtonsEnabled;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> alternativeActionButtonsSignal; // @synthesize alternativeActionButtonsSignal=_alternativeActionButtonsSignal;
@property(nonatomic, getter=isCollectionFoldersEnabled) _Bool collectionFoldersEnabled; // @synthesize collectionFoldersEnabled=_collectionFoldersEnabled;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> collectionFoldersSignal; // @synthesize collectionFoldersSignal=_collectionFoldersSignal;
@property(nonatomic, getter=isFrecencySortOrderDefaultInPlaylistsEnabled) _Bool frecencySortOrderDefaultInPlaylistsEnabled; // @synthesize frecencySortOrderDefaultInPlaylistsEnabled=_frecencySortOrderDefaultInPlaylistsEnabled;
@property(nonatomic, getter=isFrecencySortOrderInPlaylistsEnabled) _Bool frecencySortOrderInPlaylistsEnabled; // @synthesize frecencySortOrderInPlaylistsEnabled=_frecencySortOrderInPlaylistsEnabled;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> frecencySortOrderDefaultInPlaylistsSignal; // @synthesize frecencySortOrderDefaultInPlaylistsSignal=_frecencySortOrderDefaultInPlaylistsSignal;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> frecencySortOrderInPlaylistsSignal; // @synthesize frecencySortOrderInPlaylistsSignal=_frecencySortOrderInPlaylistsSignal;
@property(nonatomic, getter=isSortingAndFilteringFavoriteSongsEnabled) _Bool sortingAndFilteringFavoriteSongsEnabled; // @synthesize sortingAndFilteringFavoriteSongsEnabled=_sortingAndFilteringFavoriteSongsEnabled;
@property(nonatomic, getter=isSortingAndFilteringEnabled) _Bool sortingAndFilteringEnabled; // @synthesize sortingAndFilteringEnabled=_sortingAndFilteringEnabled;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> sortingAndFilteringFavoriteSongsSignal; // @synthesize sortingAndFilteringFavoriteSongsSignal=_sortingAndFilteringFavoriteSongsSignal;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> sortingAndFilteringYourLibrarySignal; // @synthesize sortingAndFilteringYourLibrarySignal=_sortingAndFilteringYourLibrarySignal;
@property(nonatomic, getter=isMadeForEmployeeSignalEnabled) _Bool madeForEmployeeSignalEnabled; // @synthesize madeForEmployeeSignalEnabled=_madeForEmployeeSignalEnabled;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> madeForEmployeeSignal; // @synthesize madeForEmployeeSignal=_madeForEmployeeSignal;
@property(nonatomic, getter=isMadeForSignalEnabled) _Bool madeForSignalEnabled; // @synthesize madeForSignalEnabled=_madeForSignalEnabled;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> madeForSignal; // @synthesize madeForSignal=_madeForSignal;
@property(nonatomic, getter=isPremiumLabelEnabled) _Bool premiumLabelEnabled; // @synthesize premiumLabelEnabled=_premiumLabelEnabled;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> windowedTrackTestSignal; // @synthesize windowedTrackTestSignal=_windowedTrackTestSignal;
@property(readonly, nonatomic) id <SPTFeatureFlagSignal> yourLibrarySignal; // @synthesize yourLibrarySignal=_yourLibrarySignal;
@property(readonly, nonatomic) id <SPTCollectionPlatformTestManager> collectionPlatformTestManager; // @synthesize collectionPlatformTestManager=_collectionPlatformTestManager;
@property(readonly, nonatomic) id <SPTProductState> productState; // @synthesize productState=_productState;
@property(readonly, nonatomic) id <SPTFeatureFlagFactory> featureFlagFactory; // @synthesize featureFlagFactory=_featureFlagFactory;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isBookmarkModelEnabled) _Bool bookmarkModelEnabled;
- (void)setupCollectionFoldersSignal;
- (_Bool)isNPTUser;
- (void)setupAlternativeActionButtonsSignal;
- (void)handleFilteringAndSortingSignal:(id)arg1 hasAssumedState:(long long)arg2;
- (void)setupFrecencySortingSignal;
- (void)setupFilteringAndSortingSignal;
- (void)setupMadeForSignals;
@property(readonly, nonatomic, getter=isMadeForSubtitleEnabled) _Bool madeForSubtitleEnabled;
- (void)handleWindowedTrackSignal:(id)arg1 hasAssumedState:(long long)arg2;
- (void)featureFlagSignal:(id)arg1 hasAssumedState:(long long)arg2;
- (void)setupIsPremiumOnlySignal;
- (id)initWithFeatureFlagFactory:(id)arg1 productState:(id)arg2 collectionPlatformTestManager:(id)arg3 yourLibrarySignal:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

