//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTPodcastPlayerDelegate-Protocol.h"

@class NSArray, NSString, NSURL, SPTPodcast, SPTPodcastEpisode;
@protocol SPTAbbaFeatureFlags, SPTAlertController, SPTCollectionLogger, SPTCollectionPlatform, SPTExplicitContentAccessManager, SPTLinkDispatcher, SPTOfflineManager, SPTPodcastDataLoader, SPTPodcastDataLoaderRequestToken, SPTPodcastEpisodeStringFormatter, SPTPodcastEpisodeViewModelDelegate, SPTPodcastPlayer, SPTPodcastTestManager, SPTShareEntityData, SPTShareEntityDataFactory;

@interface SPTPodcastEpisodeViewModel : NSObject <SPTPodcastPlayerDelegate>
{
    _Bool _isPlaying;
    _Bool _reversePlaybackOrder;
    id <SPTPodcastEpisodeViewModelDelegate> _delegate;
    NSArray *_sections;
    NSURL *_URL;
    SPTPodcastEpisode *_episode;
    id <SPTPodcastDataLoader> _dataLoader;
    id <SPTPodcastEpisodeStringFormatter> _stringFormatter;
    id <SPTPodcastPlayer> _player;
    id <SPTAbbaFeatureFlags> _featureFlags;
    id <SPTExplicitContentAccessManager> _explicitContentAccessManager;
    SPTPodcast *_podcast;
    CDUnknownBlockType _episodeMarshaller;
    id <SPTOfflineManager> _offlineManager;
    id <SPTLinkDispatcher> _linkDispatcher;
    id <SPTPodcastDataLoaderRequestToken> _episodeRequestToken;
    id <SPTCollectionPlatform> _collectionPlatform;
    id <SPTShareEntityDataFactory> _shareEntityDataFactory;
    id <SPTCollectionLogger> _collectionLogger;
    id <SPTPodcastTestManager> _testManager;
    id <SPTAlertController> _alertController;
}

@property(retain, nonatomic) id <SPTAlertController> alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic) id <SPTPodcastTestManager> testManager; // @synthesize testManager=_testManager;
@property(retain, nonatomic) id <SPTCollectionLogger> collectionLogger; // @synthesize collectionLogger=_collectionLogger;
@property(retain, nonatomic) id <SPTShareEntityDataFactory> shareEntityDataFactory; // @synthesize shareEntityDataFactory=_shareEntityDataFactory;
@property(nonatomic) __weak id <SPTCollectionPlatform> collectionPlatform; // @synthesize collectionPlatform=_collectionPlatform;
@property(retain, nonatomic) id <SPTPodcastDataLoaderRequestToken> episodeRequestToken; // @synthesize episodeRequestToken=_episodeRequestToken;
@property(retain, nonatomic) id <SPTLinkDispatcher> linkDispatcher; // @synthesize linkDispatcher=_linkDispatcher;
@property(nonatomic) __weak id <SPTOfflineManager> offlineManager; // @synthesize offlineManager=_offlineManager;
@property(copy, nonatomic) CDUnknownBlockType episodeMarshaller; // @synthesize episodeMarshaller=_episodeMarshaller;
@property(retain, nonatomic) SPTPodcast *podcast; // @synthesize podcast=_podcast;
@property(nonatomic) _Bool reversePlaybackOrder; // @synthesize reversePlaybackOrder=_reversePlaybackOrder;
@property(readonly, nonatomic) id <SPTExplicitContentAccessManager> explicitContentAccessManager; // @synthesize explicitContentAccessManager=_explicitContentAccessManager;
@property(retain, nonatomic) id <SPTAbbaFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(retain, nonatomic) id <SPTPodcastPlayer> player; // @synthesize player=_player;
@property(retain, nonatomic) id <SPTPodcastEpisodeStringFormatter> stringFormatter; // @synthesize stringFormatter=_stringFormatter;
@property(retain, nonatomic) id <SPTPodcastDataLoader> dataLoader; // @synthesize dataLoader=_dataLoader;
@property(retain, nonatomic) SPTPodcastEpisode *episode; // @synthesize episode=_episode;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(nonatomic) __weak id <SPTPodcastEpisodeViewModelDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <SPTShareEntityData> shareEntityData;
@property(readonly, nonatomic) long long offlineSyncStatus;
- (void)resetOfflineAvailability;
- (void)toggleOfflineSync;
- (void)podcastPlayer:(id)arg1 didUpdateProgressForTrackURL:(id)arg2;
- (double)podcastPlayer:(id)arg1 updateProgressIntervalForTrackURL:(id)arg2;
- (void)podcastPlayer:(id)arg1 didChangePlayingTrackURL:(id)arg2;
- (void)navigateToPodcast;
- (void)updateIsPlayingTrackURL:(id)arg1;
- (void)pauseCurrentlyPlaying;
- (void)startPlayback;
- (void)playEpisode;
- (void)togglePlayback;
@property(readonly, nonatomic) _Bool isExplicit;
@property(readonly, nonatomic) _Bool isPlayed;
@property(readonly, nonatomic) double listeningProgress;
@property(readonly, nonatomic) NSURL *podcastImageURL;
@property(readonly, nonatomic) NSURL *imageURL;
@property(readonly, nonatomic) NSString *completeMetadata;
@property(readonly, nonatomic) NSString *adaptiveMetadata;
@property(readonly, nonatomic) NSString *podcastPublisher;
@property(readonly, nonatomic) NSString *podcastTitle;
@property(readonly, nonatomic) NSURL *podcastURL;
@property(readonly, nonatomic) NSString *longDescription;
@property(readonly, nonatomic) NSString *title;
- (void)loadShowDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)unsubscribe;
- (void)load;
- (id)initWithEpisodeURL:(id)arg1 dataLoader:(id)arg2 stringFormatter:(id)arg3 player:(id)arg4 explicitContentAccessManager:(id)arg5 offlineManager:(id)arg6 linkDispatcher:(id)arg7 collectionPlatform:(id)arg8 shareEntityDataFactory:(id)arg9 collectionLogger:(id)arg10 podcastTestManager:(id)arg11 alertController:(id)arg12;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

