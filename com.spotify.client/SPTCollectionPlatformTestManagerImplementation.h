//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTCollectionPlatformTestManager.h"
#import "SPTFeatureFlagSignalObserver.h"

@class NSString;

@interface SPTCollectionPlatformTestManagerImplementation : NSObject <SPTFeatureFlagSignalObserver, SPTCollectionPlatformTestManager>
{
    _Bool _incompleteAlbumsUsedForCollectionState;
    _Bool _freeTierEnabled;
    _Bool _heartsEverywhereEnabled;
    _Bool _madeForPublicEnabled;
    _Bool _madeForEmployeeEnabled;
    _Bool _localBansEnabled;
    id <SPTCollectionPlatformConfiguration> _collectionConfiguration;
    id <SPTProductState> _productState;
    id <SPTAbbaFeatureFlags> _abbaFeatureFlags;
    id <SPTLocalSettings> _localSettings;
    id <SettingsRegistry> _settingsRegistry;
    id <SPTFeatureSettingsItemFactory> _featureSettingsItemFactory;
    id <SPTFeatureFlagFactory> _featureFlagFactory;
    id <SPTFeatureFlagSignal> _freeTierEnabledSignal;
    id <SPTFeatureFlagSignal> _heartsEverywhereSignal;
    id <SPTFreeTierEducationSnackBarPresenter> _snackbarEducationPresenter;
    id <SPTFeatureFlagSignal> _lajkaAAEnabledSignal;
    id <SPTFeatureFlagSignal> _lajkaAANewUsersEnabledSignal;
    id <SPTFeatureFlagSignal> _madeForPublicSignal;
    id <SPTFeatureFlagSignal> _madeForEmployeeSignal;
    id <SPTFeatureFlagSignal> _localBansEnabledSignal;
    id <SPTFreeTierTestManager> _freeTierTestManager;
}

@property(retain, nonatomic) id <SPTFreeTierTestManager> freeTierTestManager; // @synthesize freeTierTestManager=_freeTierTestManager;
@property(nonatomic, getter=isLocalBansEnabled) _Bool localBansEnabled; // @synthesize localBansEnabled=_localBansEnabled;
@property(nonatomic, getter=isMadeForEmployeeEnabled) _Bool madeForEmployeeEnabled; // @synthesize madeForEmployeeEnabled=_madeForEmployeeEnabled;
@property(nonatomic, getter=isMadeForPublicEnabled) _Bool madeForPublicEnabled; // @synthesize madeForPublicEnabled=_madeForPublicEnabled;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> localBansEnabledSignal; // @synthesize localBansEnabledSignal=_localBansEnabledSignal;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> madeForEmployeeSignal; // @synthesize madeForEmployeeSignal=_madeForEmployeeSignal;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> madeForPublicSignal; // @synthesize madeForPublicSignal=_madeForPublicSignal;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> lajkaAANewUsersEnabledSignal; // @synthesize lajkaAANewUsersEnabledSignal=_lajkaAANewUsersEnabledSignal;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> lajkaAAEnabledSignal; // @synthesize lajkaAAEnabledSignal=_lajkaAAEnabledSignal;
@property(retain, nonatomic) id <SPTFreeTierEducationSnackBarPresenter> snackbarEducationPresenter; // @synthesize snackbarEducationPresenter=_snackbarEducationPresenter;
@property(nonatomic, getter=isHeartsEverywhereEnabled) _Bool heartsEverywhereEnabled; // @synthesize heartsEverywhereEnabled=_heartsEverywhereEnabled;
@property(nonatomic, getter=isFreeTierEnabled) _Bool freeTierEnabled; // @synthesize freeTierEnabled=_freeTierEnabled;
@property(nonatomic, getter=isIncompleteAlbumsUsedForCollectionState) _Bool incompleteAlbumsUsedForCollectionState; // @synthesize incompleteAlbumsUsedForCollectionState=_incompleteAlbumsUsedForCollectionState;
@property(readonly, nonatomic) id <SPTFeatureFlagSignal> heartsEverywhereSignal; // @synthesize heartsEverywhereSignal=_heartsEverywhereSignal;
@property(readonly, nonatomic) id <SPTFeatureFlagSignal> freeTierEnabledSignal; // @synthesize freeTierEnabledSignal=_freeTierEnabledSignal;
@property(readonly, nonatomic) id <SPTFeatureFlagFactory> featureFlagFactory; // @synthesize featureFlagFactory=_featureFlagFactory;
@property(readonly, nonatomic) id <SPTFeatureSettingsItemFactory> featureSettingsItemFactory; // @synthesize featureSettingsItemFactory=_featureSettingsItemFactory;
@property(readonly, nonatomic) id <SettingsRegistry> settingsRegistry; // @synthesize settingsRegistry=_settingsRegistry;
@property(readonly, nonatomic) id <SPTLocalSettings> localSettings; // @synthesize localSettings=_localSettings;
@property(readonly, nonatomic) id <SPTAbbaFeatureFlags> abbaFeatureFlags; // @synthesize abbaFeatureFlags=_abbaFeatureFlags;
@property(readonly, nonatomic) id <SPTProductState> productState; // @synthesize productState=_productState;
@property(retain, nonatomic) id <SPTCollectionPlatformConfiguration> collectionConfiguration; // @synthesize collectionConfiguration=_collectionConfiguration;
- (void).cxx_destruct;
- (void)setupMadeForFlags;
@property(readonly, nonatomic, getter=isMadeForAttributionEnabled) _Bool madeForAttributionEnabled;
- (void)setUpLocalSettings;
- (id)objectForKeyedSubscript:(id)arg1;
- (_Bool)isPodcastYourLibraryTestEnabled;
@property(readonly, nonatomic, getter=isNewNowPlayingViewEnabled) _Bool newNowPlayingViewEnabled;
- (_Bool)isNPTUser;
@property(readonly, nonatomic, getter=isPremiumLabelEnabled) _Bool premiumLabelEnabled;
@property(readonly, getter=isFollowedArtistsOnlyEnabled) _Bool followedArtistsOnlyEnabled;
@property(readonly, getter=isBookmarkModelEnabled) _Bool bookmarkModelEnabled;
- (void)setupLocalBansSignal;
- (void)featureFlagSignal:(id)arg1 hasAssumedState:(long long)arg2;
- (void)setupLajkaAATestFlagUsedForVerifyingTestSetup;
@property(readonly, nonatomic, getter=isYourLibraryFeatureEnabled) _Bool yourLibraryFeatureEnabled;
- (void)dealloc;
- (id)initWithProductState:(id)arg1 abbaFeatureFlags:(id)arg2 localSettings:(id)arg3 settingsRegistry:(id)arg4 featureSettingsItemFactory:(id)arg5 featureFlagFactory:(id)arg6 freeTierEnabledSignal:(id)arg7 heartsEverywhereSignal:(id)arg8 freeTierTestManager:(id)arg9 educationPresenter:(id)arg10;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

