//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MLMultipartParserDelegate-Protocol.h"

@class MLMultipartParser, MLOnesiePlayerServiceCryptor, NSString;
@protocol MLOnesieResponseParserDelegate, OS_dispatch_data, OS_dispatch_queue, YTLatencyTickLoggerProtocol;

@interface MLOnesieResponseParser : NSObject <MLMultipartParserDelegate>
{
    MLOnesiePlayerServiceCryptor *_cryptor;
    MLMultipartParser *_multipartParser;
    id <YTLatencyTickLoggerProtocol> _latencyLogger;
    NSObject<OS_dispatch_queue> *_queue;
    // Error parsing type: {OnesieHeader="_vptr$MessageLite"^^?"_internal_metadata_"{InternalMetadataWithArena="ptr_"^v}"_has_bits_"{HasBits<1>="has_bits_"[1I]}"_cached_size_"{CachedSize="size_"{atomic<int>="__a_"Ai}}"restricted_format_"{RepeatedPtrField<std::__1::basic_string<char> >="arena_"^{Arena}"current_size_"i"total_size_"i"rep_"^{Rep}}"video_id_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"itag_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"player_service_response_push_url_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"xtags_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"player_response_metadata_"^{OnesieHeader_PlayerResponseMetadata}"byte_range_"^{OnesieHeader_ByteRange}"lmt_"Q"media_rate_bytes_per_second_"q"expected_media_size_bytes_"q"is_last_media_part_"B"part_type_"i}, name: _partHeader
    NSObject<OS_dispatch_data> *_partData;
    struct vector<std::__1::pair<NSObject<OS_dispatch_data>*, video_streaming::OnesieHeader>, std::__1::allocator<std::__1::pair<NSObject<OS_dispatch_data>*, video_streaming::OnesieHeader>>> _encryptedParts;
    struct _CCCryptor *_mediaCryptor;
    id <MLOnesieResponseParserDelegate> _delegate;
}

@property(nonatomic) __weak id <MLOnesieResponseParserDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
-     // Error parsing type: v32@0:8@16r^{OnesieHeader=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>=Ai}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{OnesieHeader_PlayerResponseMetadata}^{OnesieHeader_ByteRange}QqqBi}24, name: decryptMediaPartData:header:
- (void)decryptEncryptedMediaPartsUsingKey:(id)arg1;
- (void)failWithErrorCode:(long long)arg1 underlyingError:(id)arg2;
- (void)failWithErrorCode:(long long)arg1;
- (void)multipartParserFailedWithError:(id)arg1;
- (void)multipartParserDidCompletePart;
- (void)multipartParserReceivedPartData:(id)arg1;
- (void)multipartParserStartedNewPart:(id)arg1;
- (void)doneFeeding;
- (void)feed:(id)arg1;
- (void)onResponseReceived:(id)arg1;
- (void)dealloc;
- (id)initWithCryptor:(id)arg1 latencyLogger:(id)arg2 queue:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

