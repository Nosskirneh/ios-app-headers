//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MLDownloadSchedulerDelegate-Protocol.h"
#import "MLMediaDownloader-Protocol.h"
#import "YTSystemNotificationsObserver-Protocol.h"

@class GIMMe, MLVideo, NSDate, NSMutableArray, NSString, NSTimer, UIApplication;
@protocol MLMediaDownloaderDelegate;

@interface MLStreamDownloader : NSObject <MLDownloadSchedulerDelegate, YTSystemNotificationsObserver, MLMediaDownloader>
{
    id <MLMediaDownloaderDelegate> _currentDelegate;
    _Bool _downloadStarted;
    unsigned long long _downloadID;
    NSMutableArray *_completedLocalStreams;
    NSDate *_startDate;
    MLVideo *_currentVideo;
    _Bool _downloadInBackground;
    GIMMe *_gimme;
    UIApplication *_application;
    unsigned long long _backgroundTask;
    NSTimer *_backgroundTimer;
    NSMutableArray *_incompleteSegmentLists;
}

@property(retain, nonatomic) NSMutableArray *incompleteSegmentLists; // @synthesize incompleteSegmentLists=_incompleteSegmentLists;
@property(readonly, nonatomic) NSTimer *backgroundTimer; // @synthesize backgroundTimer=_backgroundTimer;
@property(nonatomic) unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(nonatomic) __weak UIApplication *application; // @synthesize application=_application;
@property(nonatomic) _Bool downloadInBackground; // @synthesize downloadInBackground=_downloadInBackground;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
- (void).cxx_destruct;
- (double)backgroundDownloadTimeRemainingThreshold;
- (void)beginBackgroundDownload;
- (_Bool)shouldBeginBackgroundDownload;
- (void)maybeBeginBackgroundDownload;
- (void)endBackgroundTimer;
- (void)beginBackgroundTimer;
- (void)endBackgroundTask;
- (void)beginBackgroundTask;
- (void)beginBackgroundHelpers;
- (id)downloadScheduler;
- (long long)estimatedTotalBytesForStream:(id)arg1 duration:(double)arg2;
- (long long)estimatedTotalBytesForCurrentVideo;
- (long long)downloadedLengthForCurrentVideo;
- (void)didFinishDownloadingIncompleteSegmentList:(id)arg1;
- (id)incompleteSegmentListForSegment:(id)arg1;
- (_Bool)checkDownloadID:(unsigned long long)arg1;
- (_Bool)checkUserInfo:(id)arg1;
- (void)clear;
- (void)failWithError:(id)arg1;
- (void)scheduleDownloadWithRemoteSegment:(id)arg1 localSegment:(id)arg2 localStream:(id)arg3;
- (void)downloadNextSegmentFromIncompleteSegmentList:(id)arg1;
- (void)beginDownloadWithRemoteStream:(id)arg1 downloadID:(unsigned long long)arg2;
- (void)beginDownloadWithAudioStream:(id)arg1 videoStream:(id)arg2 downloadID:(unsigned long long)arg3;
- (void)appWillEnterForeground:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (unsigned long long)downloadID;
- (void)downloadDidFailWithSegment:(id)arg1 userInfo:(id)arg2 error:(id)arg3;
- (void)downloadDidCompleteWithSegment:(id)arg1 userInfo:(id)arg2;
- (void)downloadDidReceiveData:(id)arg1 withSegment:(id)arg2 userInfo:(id)arg3;
- (void)downloadDidPauseWithSegment:(id)arg1 userInfo:(id)arg2;
- (void)downloadDidStartWithSegment:(id)arg1 userInfo:(id)arg2;
- (void)cancelDownloadWithVideoID:(id)arg1;
- (void)cancelDownload;
- (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)downloadVideo:(id)arg1 audioStream:(id)arg2 videoStream:(id)arg3 allowCellularAccess:(_Bool)arg4 delegate:(id)arg5;
- (void)startBackgroundTaskRestorationWithDelegate:(id)arg1;
@property(readonly, nonatomic) _Bool restoringBackgroundTasks;
@property(readonly, nonatomic) NSString *currentVideoID;
@property(readonly, nonatomic) double currentProgress;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

