//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "YTMacroExpansionProvider-Protocol.h"
#import "YTPlayerMenuProtocol-Protocol.h"
#import "YTPlayerViewLayoutProtocol-Protocol.h"
#import "YTResponder-Protocol.h"

@class NSError, NSString, UIViewController, YTCPN, YTExpectedPlayerLayout, YTIWatchNextResponse, YTPlaybackConfig, YTPlaybackControllerRestorableState, YTPlaybackDebugData, YTPlayerResponse, YTPlayerTransition;
@protocol YTContentVideoPlayerOverlayProtocol, YTPlaybackControllerEventsDelegate, YTPlaybackControllerUIDelegate, YTSingleVideoObservable, YTVideoPlayerOverlayProtocol;

@protocol YTPlaybackController <YTMacroExpansionProvider, YTPlayerMenuProtocol, YTPlayerViewLayoutProtocol, YTResponder>
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) YTPlayerResponse *playerResponse;
@property(readonly, nonatomic) double contentVideoMediaTime;
@property(readonly, nonatomic) double currentVideoTotalMediaTime;
@property(readonly, nonatomic) double currentVideoMediaTime;
@property(readonly, nonatomic) _Bool isVRModeActive;
@property(readonly, nonatomic) id <YTSingleVideoObservable> contentVideo;
@property(readonly, nonatomic) id <YTSingleVideoObservable> activeVideo;
@property(nonatomic, getter=isActivePlayback) _Bool activePlayback;
@property(readonly, nonatomic) UIViewController<YTContentVideoPlayerOverlayProtocol> *contentVideoPlayerOverlay;
@property(readonly, nonatomic) UIViewController<YTVideoPlayerOverlayProtocol> *activeVideoPlayerOverlay;
@property(nonatomic, getter=isTransitioningPlayerViewLayout) _Bool transitioningPlayerViewLayout;
@property(readonly, nonatomic, getter=isExternalPlaybackActive) _Bool externalPlaybackActive;
@property(nonatomic, getter=isExternalPlaybackAllowed) _Bool externalPlaybackAllowed;
@property(nonatomic) _Bool hasNextVideo;
@property(nonatomic) _Bool hasPreviousVideo;
@property(nonatomic) _Bool playlistControlsHidden;
@property(readonly, nonatomic) _Bool isPlayingAdIntro;
@property(readonly, nonatomic) _Bool isPlayingAdSurvey;
@property(readonly, nonatomic) _Bool isPlayingAd;
@property(readonly, nonatomic) _Bool isPlaybackFinished;
@property(readonly, nonatomic) int state;
@property(readonly, nonatomic) _Bool currentVideoIsLocal;
@property(readonly, nonatomic, getter=isCurrentVideoVertical) _Bool currentVideoVertical;
@property(readonly, nonatomic) NSString *currentVideoID;
@property(readonly, nonatomic) YTCPN *contentVideoCPN;
@property(readonly, nonatomic) NSString *contentVideoID;
@property(readonly, nonatomic) long long playerState;
@property(nonatomic) __weak id <YTPlaybackControllerUIDelegate> UIDelegate;
@property(nonatomic) __weak id <YTPlaybackControllerEventsDelegate> eventsDelegate;
- (void)didPressSkipAd;
- (void)setBlackoutActive:(_Bool)arg1;
- (void)setUserAudioOnlyModeActive:(_Bool)arg1;
- (_Bool)isInlinePlaybackActive;
- (void)switchToInlinePlayback:(_Bool)arg1;
- (void)handleRemoteControlEvent:(long long)arg1;
- (void)scrubToTime:(double)arg1;
- (void)setVolume:(float)arg1;
- (void)replay;
- (void)resumePlayback;
- (void)suspendPlayback;
- (_Bool)arePlayerControlsHidden;
- (YTPlaybackDebugData *)playbackDebugData;
- (void)willLoseFocus;
- (void)didGainFocus;
- (void)didPressReplay;
- (void)didPressPause;
- (void)didPressPlay;
- (void)didPressCompanionAd;
- (void)setLiveCaptionsVerticalRatio:(double)arg1;
- (void)setExpansionCoefficient:(double)arg1;
- (void)restoreToState:(YTPlaybackControllerRestorableState *)arg1 playbackConfig:(YTPlaybackConfig *)arg2;
- (YTPlaybackControllerRestorableState *)restorableState;
- (void)resetToLoading;
- (void)reset;
- (void)setWatchNextResponse:(YTIWatchNextResponse *)arg1;
- (_Bool)handlesAutoplayingInternally;
- (void)prepareToLoadWithPlayerTransition:(YTPlayerTransition *)arg1 expectedLayout:(YTExpectedPlayerLayout *)arg2;
- (void)loadWithPlayerTransition:(YTPlayerTransition *)arg1 playbackConfig:(YTPlaybackConfig *)arg2;
@end

