//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "HAMBaseComponent.h"

#import "HAMPixelBufferSource-Protocol.h"
#import "HAMSampleBufferSourceDelegate-Protocol.h"
#import "HAMSystemNotificationsObserver-Protocol.h"
#import "HAMVideoDecoderDelegate-Protocol.h"

@class GIMMe, HAMFormatDescription, HAMSampleBuffer, NSArray, NSDictionary, NSError, NSMutableArray, NSObject, NSString;
@protocol HAMClock, HAMMediaSourceDelegate, HAMPixelBufferSourceDelegate, HAMSampleBufferSource, HAMVideoDecoder, HAMVideoDecoderFactory, OS_dispatch_queue;

@interface HAMVideoDecoderPixelBufferSource : HAMBaseComponent <HAMVideoDecoderDelegate, HAMSampleBufferSourceDelegate, HAMSystemNotificationsObserver, HAMPixelBufferSource>
{
    id <HAMSampleBufferSource> _upstream;
    NSDictionary *_pixelBufferAttributes;
    NSArray *_supportedPixelFormats;
    id <HAMClock> _clock;
    id <HAMVideoDecoderFactory> _decoderFactory;
    HAMFormatDescription *_formatDescription;
    CDStruct_1b6d18a9 _seekPosition;
    CDStruct_1b6d18a9 _decodePosition;
    double _timeOfDecoderFailure;
    NSError *_decoderAsyncError;
    HAMSampleBuffer *_sampleBufferForDecodeRetry;
    id <HAMVideoDecoder> _decoder;
    _Bool _decoderIsTerminating;
    NSMutableArray *_terminatingDecoders;
    unsigned int _frameEra;
    NSObject<OS_dispatch_queue> *_pixelBufferDeliveryQueue;
    _Bool _applicationActive;
    struct CGSize _canvasSize;
    _Bool _canvasSizeDidChange;
    _Bool _didReceiveMemoryWarning;
    CDStruct_d4d03ff8 _config;
    _Bool _prepared;
    id <HAMPixelBufferSourceDelegate> _delegate;
    GIMMe *_gimme;
}

@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(readonly, nonatomic) _Bool prepared; // @synthesize prepared=_prepared;
@property(nonatomic) __weak id <HAMMediaSourceDelegate> delegate;
- (void).cxx_destruct;
- (void)discardPendingFrames;
- (void)clearDecoderError;
- (_Bool)canRetryDecoderError;
- (long long)decodeSampleBuffer:(id)arg1 dropFrame:(_Bool)arg2 andReturnError:(id *)arg3;
- (_Bool)isSeeking;
- (void)terminateDecoderAndWait:(_Bool)arg1;
- (_Bool)setupDecoderAndReturnError:(id *)arg1;
- (struct CGSize)resizedOutputImageSize;
- (long long)readNextSampleBuffer:(id *)arg1 error:(id *)arg2;
- (void)appMemoryPressureLevelDidChange:(unsigned long long)arg1;
- (void)appDidBecomeActive:(id)arg1;
- (void)appWillResignActive:(id)arg1;
- (void)videoDecoderDidPrepare:(id)arg1;
- (void)videoDecoderDidTerminate:(id)arg1;
- (void)videoDecoder:(id)arg1 didFailWithError:(id)arg2;
- (void)sampleBufferSourceFormatDescriptionWillChange:(id)arg1;
- (void)mediaSourceDidFailWithError:(id)arg1;
- (void)mediaSourceSeekableTimeRangeDidChange:(CDStruct_e83c9415)arg1;
- (void)mediaSourceSetCurrentTime:(CDStruct_1b6d18a9)arg1;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)suspend;
- (_Bool)prepareAndReturnError:(id *)arg1;
@property(readonly, nonatomic) int pendingPixelBuffers;
- (void)setCanvasSize:(struct CGSize)arg1;
- (long long)readPixelBuffersWithTargetCount:(int)arg1 andReturnError:(id *)arg2;
- (void)setRate:(float)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 sampleBufferSource:(id)arg2 pixelBufferAttributes:(id)arg3 supportedPixelFormats:(id)arg4 decoderFactory:(id)arg5 configuration:(CDStruct_d4d03ff8)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

