//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "HAMBaseComponent.h"

#import "MLABRPolicy-Protocol.h"

@class GIMMe, HAMChunkBuffer, NSArray, NSDictionary, NSString, YTIHamplayerABRConfig;
@protocol HAMABRPolicyDelegate, HAMTrackRenderer, MLFormatConstraint;

@interface MLTextABRPolicy : HAMBaseComponent <MLABRPolicy>
{
    HAMChunkBuffer *_chunkBuffer;
    id <HAMTrackRenderer> _trackRenderer;
    int _maxMediaSecondsPerRequest;
    double _bufferTrimBeforeSeconds;
    double _bufferTrimAfterSeconds;
    double _bufferTargetReadaheadSeconds;
    _Bool _suspended;
    float _targetReadaheadMultiplier;
    id <MLFormatConstraint> _formatConstraint;
    NSArray *_allFormats;
    NSDictionary *_formatToData;
    YTIHamplayerABRConfig *_config;
    id <HAMABRPolicyDelegate> _delegate;
    GIMMe *_gimme;
}

@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(nonatomic) __weak id <HAMABRPolicyDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)requestFormatReselection;
- (id)firstMediaChunkToLoadForFormat:(id)arg1 index:(id)arg2 currentTimeSeconds:(double)arg3;
- (id)mediaChunksToLoadForFormat:(id)arg1 currentTimeSeconds:(double)arg2 chunkBufferCurrentTime:(CDStruct_1b6d18a9)arg3;
- (_Bool)shouldLoadChunk:(id)arg1 currentTimeSeconds:(double)arg2;
- (void)terminate;
- (void)dataLoadTaskForFormat:(id)arg1 didCompleteWithError:(id)arg2;
- (void)setReadaheadCap:(double)arg1;
- (void)setTrackRenderer:(id)arg1;
- (void)setFormatConstraint:(id)arg1;
- (void)seekDidOccur;
- (id)getABRActionAndReturnError:(id *)arg1;
- (void)setSuspended:(_Bool)arg1;
- (void)setMediaChunkIndex:(id)arg1 forFormat:(id)arg2;
- (void)setChunkBuffer:(id)arg1;
- (void)setRate:(float)arg1;
- (void)setFormats:(id)arg1;
- (id)initWithContext:(id)arg1 config:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

