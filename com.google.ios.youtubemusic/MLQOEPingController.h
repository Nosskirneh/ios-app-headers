//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MLAVPlayerDataTransferObserver-Protocol.h"
#import "MLBandwidthUsageObserver-Protocol.h"
#import "MLPlayerCrossVideoTransitionObserver-Protocol.h"
#import "MLPlayerDroppedFrameCountObserver-Protocol.h"
#import "MLPlayerFormatObserver-Protocol.h"
#import "MLPlayerHostFallbackObserver-Protocol.h"
#import "MLPlayerPreloadObserver-Protocol.h"
#import "MLPlayerQOEErrorObserver-Protocol.h"
#import "MLPlayerRateObserver-Protocol.h"
#import "MLPlayerStateObserver-Protocol.h"
#import "MLPlayerViewportSizeObserver-Protocol.h"
#import "YTReachabilityObserver-Protocol.h"
#import "YTSystemNotificationsObserver-Protocol.h"

@class GIMMe, HAMTimer, MLPlayerEventCenter, MLPlayerFormatChangeEvent, MLQOEError, NSArray, NSDictionary, NSMapTable, NSMutableArray, NSString, YTBasePingController, YTDeviceClassificationURLDecorator, YTIQoeHotConfig, YTReachabilityController, YTUserDefaults;
@protocol HAMClock, MLPlayerInternal, YTIdentityProvider, YTPingControllerConfig;

@interface MLQOEPingController : NSObject <MLBandwidthUsageObserver, MLAVPlayerDataTransferObserver, MLPlayerCrossVideoTransitionObserver, MLPlayerDroppedFrameCountObserver, MLPlayerFormatObserver, MLPlayerHostFallbackObserver, MLPlayerPreloadObserver, MLPlayerQOEErrorObserver, MLPlayerRateObserver, MLPlayerStateObserver, MLPlayerViewportSizeObserver, YTReachabilityObserver, YTSystemNotificationsObserver>
{
    YTBasePingController *_pingController;
    id <YTPingControllerConfig> _pingControllerConfig;
    YTIQoeHotConfig *_hotConfig;
    HAMTimer *_timer;
    long long _otherBandwidthBytes;
    double _otherBandwidthTime;
    int _droppedFrameCount;
    NSString *_CPN;
    NSString *_videoID;
    _Bool _isPrefetch;
    _Bool _userIntentRecorded;
    _Bool _isSuspendedPendingUserIntent;
    double _initialAbsoluteTime;
    MLPlayerFormatChangeEvent *_lastFormatEvent;
    NSArray *_sortedSelectableFormats;
    int _sequenceNumber;
    YTDeviceClassificationURLDecorator *_deviceClassificationURLDecorator;
    id <HAMClock> _clock;
    id <YTIdentityProvider> _identityProvider;
    id <MLPlayerInternal> _player;
    YTReachabilityController *_reachabilityController;
    int _connectionType;
    int _visibility;
    NSString *_baseURL;
    _Bool _baseURLIsIncomplete;
    _Bool _stopped;
    double _flushInterval;
    double _lastFlushTime;
    NSDictionary *_arguments;
    NSMutableArray *_queryItems;
    NSString *_preloadValue;
    _Bool _requestLoggingEnabled;
    _Bool _highResolutionRequestLoggingEnabled;
    double _lastReportedLatencyWallTime;
    _Bool _reportedInitialState;
    double _lastStateAbsoluteTime;
    long long _bytesTransferred;
    double _transferTime;
    _Bool _networkResponseHasBeenReceived;
    int _networkRequestCount;
    double _networkRequestAbsoluteTime;
    long long _networkRequestBytesTransferred;
    NSMapTable *_requestStats;
    MLPlayerEventCenter *_eventCenter;
    YTUserDefaults *_userDefaults;
    GIMMe *_gimme;
    MLQOEError *_fatalError;
}

@property(readonly, nonatomic) MLQOEError *fatalError; // @synthesize fatalError=_fatalError;
@property(readonly, nonatomic) NSString *CPN; // @synthesize CPN=_CPN;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
- (void).cxx_destruct;
- (void)addNetworkInfoToCTMP;
- (id)optimalFormatForViewportSize:(id)arg1;
- (void)syncRecordClientFieldWithKey:(id)arg1 value:(id)arg2;
- (_Bool)hasParametersToSend;
- (double)currentWallTime;
- (double)wallTimeForAbsoluteTime:(double)arg1;
- (void)clearArgumentsAndSendPing;
- (void)sendPingIfNecessary;
- (void)appendParameterValue:(id)arg1 forArgument:(id)arg2;
- (void)appendLatencyParameterWithMediaTime:(CDStruct_d60ef703)arg1;
- (void)appendStateChangeParameter:(id)arg1 wallTime:(double)arg2;
- (void)setConnectionType:(int)arg1;
- (void)startTimer;
- (void)updateBatteryMeasurement;
- (void)reportPreviousManualQualitySelection;
- (void)reportAudioFormatSelectionWithFormat:(id)arg1 lastFormat:(id)arg2 reason:(long long)arg3 wallTime:(double)arg4;
- (void)reportVideoFormatSelectionWithFormat:(id)arg1 reason:(long long)arg2 viewportSize:(id)arg3 wallTime:(double)arg4;
- (void)reportRequestStats:(id)arg1 completionEvent:(id)arg2;
- (void)reportDroppedFramesWithWallTime:(double)arg1;
- (void)reportOtherBandwidthWithWallTime:(double)arg1;
- (void)reportBandwidthEstimateWithWallTime:(double)arg1;
- (void)reportBandwidthWithWallTime:(double)arg1;
- (void)reportPlayerTimesWithWallTime:(double)arg1;
- (void)reportAccumulatedMeasurementsWithWallTime:(double)arg1;
- (void)onTimer;
- (void)requestHostDidFallbackFrom:(id)arg1 to:(id)arg2 requenstNumber:(long long)arg3;
- (void)batteryLevelDidChange;
- (void)batteryStateDidChange;
- (void)recordNonFatalQOEError:(id)arg1;
- (void)player:(id)arg1 didChangeViewportSize:(id)arg2;
- (void)player:(id)arg1 didChangeStateWithEvent:(id)arg2;
- (void)player:(id)arg1 didChangeRate:(float)arg2;
- (void)player:(id)arg1 didEmitQOEErrorEvent:(id)arg2;
- (void)player:(id)arg1 didComputePreload:(float)arg2;
- (void)player:(id)arg1 didChangeFormatWithEvent:(id)arg2;
- (void)player:(id)arg1 didDropFramesWithCount:(int)arg2;
- (void)player:(id)arg1 willTransitionWithEvent:(id)arg2;
- (void)networkRequestDidCompleteWithEvent:(id)arg1;
- (void)networkRequestDidTransferDataWithEvent:(id)arg1;
- (void)networkRequestDidReceiveResponseWithEvent:(id)arg1;
- (void)observeBandwidthUsageWithBytes:(long long)arg1 elapsedTime:(double)arg2;
- (void)player:(id)arg1 AVPlayerDidTransferBytes:(long long)arg2 transferTime:(double)arg3;
- (void)reachabilityDidChange;
- (void)recordPlaybackPrebuffered;
- (void)recordUserIntentToPlayAtTime:(double)arg1;
- (void)recordQOEError:(id)arg1 fatal:(_Bool)arg2;
- (void)recordQOEAlert;
- (void)recordAdPlaybackWithCPN:(id)arg1 adFormat:(id)arg2 adBreakType:(long long)arg3;
- (void)recordLivePlaybackMediaTime:(CDStruct_d60ef703)arg1;
- (void)playerVisibilityDidChange:(int)arg1;
- (void)stop;
- (void)setPlayerStateSuspended;
- (void)appWillBeSuspended;
- (void)flush;
- (void)clearPlayer;
- (void)setPlayer:(id)arg1 eventCenter:(id)arg2;
- (void)setTrackingURL:(id)arg1;
- (id)initWithCPN:(id)arg1 videoID:(id)arg2 isPrefetch:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

