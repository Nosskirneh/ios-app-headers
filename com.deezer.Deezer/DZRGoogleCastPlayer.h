//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DZRExternalAudioPlayback-Protocol.h"

@class DZRGoogleCastQueuer, DZRGoogleCastSender, DZRGoogleCastTrackController, NSArray, NSMutableArray, NSMutableDictionary, NSString, PlayerControllerListeningContext;
@protocol DZRPlayableObject, DZRQueueableCollection;

@interface DZRGoogleCastPlayer : NSObject <DZRExternalAudioPlayback>
{
    _Bool _shuffleIsActivated;
    _Bool _firstLaunch;
    long long _repeatMode;
    long long _receiverPlayerState;
    id <DZRQueueableCollection> _ownedCollection;
    id <DZRQueueableCollection> _pendingCollection;
    NSMutableDictionary *_tracksByIDs;
    DZRGoogleCastSender *_sender;
    DZRGoogleCastTrackController *_trackController;
    id <DZRQueueableCollection> _receiverCollection;
    DZRGoogleCastQueuer *_queuer;
    NSArray *_receiverTracks;
    NSMutableArray *_tracksIds;
    id <DZRPlayableObject> _nowPlayingTrack;
    PlayerControllerListeningContext *_listeningContext;
    id <DZRQueueableCollection> _temporaryCollection;
    unsigned long long _currentTrackIndex;
    NSString *_currentTrackID;
    unsigned long long _currentTrackIndexReceiver;
    NSString *_currentTrackIDReceiver;
    long long _currentTrackQuality;
    NSString *_currentCollectionID;
    NSString *_collectionName;
    NSMutableDictionary *_trackIndexesByIDs;
    NSMutableDictionary *_nowPlayingInfos;
}

@property(retain, nonatomic) NSMutableDictionary *nowPlayingInfos; // @synthesize nowPlayingInfos=_nowPlayingInfos;
@property(retain, nonatomic) NSMutableDictionary *trackIndexesByIDs; // @synthesize trackIndexesByIDs=_trackIndexesByIDs;
@property(nonatomic) _Bool firstLaunch; // @synthesize firstLaunch=_firstLaunch;
@property(retain, nonatomic) NSString *collectionName; // @synthesize collectionName=_collectionName;
@property(retain, nonatomic) NSString *currentCollectionID; // @synthesize currentCollectionID=_currentCollectionID;
@property(nonatomic) long long currentTrackQuality; // @synthesize currentTrackQuality=_currentTrackQuality;
@property(retain, nonatomic) NSString *currentTrackIDReceiver; // @synthesize currentTrackIDReceiver=_currentTrackIDReceiver;
@property(nonatomic) unsigned long long currentTrackIndexReceiver; // @synthesize currentTrackIndexReceiver=_currentTrackIndexReceiver;
@property(retain, nonatomic) NSString *currentTrackID; // @synthesize currentTrackID=_currentTrackID;
@property(nonatomic) unsigned long long currentTrackIndex; // @synthesize currentTrackIndex=_currentTrackIndex;
@property(retain, nonatomic) id <DZRQueueableCollection> temporaryCollection; // @synthesize temporaryCollection=_temporaryCollection;
@property(retain, nonatomic) PlayerControllerListeningContext *listeningContext; // @synthesize listeningContext=_listeningContext;
@property(retain, nonatomic) id <DZRPlayableObject> nowPlayingTrack; // @synthesize nowPlayingTrack=_nowPlayingTrack;
@property(retain, nonatomic) NSMutableArray *tracksIds; // @synthesize tracksIds=_tracksIds;
@property(retain, nonatomic) NSArray *receiverTracks; // @synthesize receiverTracks=_receiverTracks;
@property(retain, nonatomic) DZRGoogleCastQueuer *queuer; // @synthesize queuer=_queuer;
@property(retain, nonatomic) id <DZRQueueableCollection> receiverCollection; // @synthesize receiverCollection=_receiverCollection;
@property(retain, nonatomic) DZRGoogleCastTrackController *trackController; // @synthesize trackController=_trackController;
@property(nonatomic) __weak DZRGoogleCastSender *sender; // @synthesize sender=_sender;
@property(retain, nonatomic) NSMutableDictionary *tracksByIDs; // @synthesize tracksByIDs=_tracksByIDs;
@property(retain, nonatomic) id <DZRQueueableCollection> pendingCollection; // @synthesize pendingCollection=_pendingCollection;
@property(retain, nonatomic) id <DZRQueueableCollection> ownedCollection; // @synthesize ownedCollection=_ownedCollection;
@property(nonatomic) long long receiverPlayerState; // @synthesize receiverPlayerState=_receiverPlayerState;
@property(nonatomic) _Bool shuffleIsActivated; // @synthesize shuffleIsActivated=_shuffleIsActivated;
@property(nonatomic) long long repeatMode; // @synthesize repeatMode=_repeatMode;
- (void).cxx_destruct;
- (_Bool)canResetCurrentTrack;
- (void)updatePlayerWithCollection:(id)arg1;
- (void)goToPlayer;
- (void)requestTrackCustomsReceived;
- (void)setQueuedCollection:(id)arg1 withCurrentItemId:(long long)arg2 withContext:(id)arg3;
- (void)updateNowPlayingCenterPlaybackProgress;
- (void)adjustNowPlayingPlaybackRate;
- (void)clearNowPlayingInfos;
- (void)updateNowPlayingInfosWithCurrentTrack;
- (void)applyNowPlayingInfos;
- (void)applyRepeatModeFromEvent:(id)arg1;
- (void)notifyUIToUpdateCurrentTrack:(id)arg1;
- (void)notifyUIToChangeTrack:(id)arg1;
- (void)notifyUIToPlay:(id)arg1 isCurrentTrack:(_Bool)arg2;
- (void)loadReceiverTrackFromEvent:(id)arg1;
- (void)updateCurrentTrack:(id)arg1;
- (void)loadReceiverCollectionFromEvent:(id)arg1;
- (void)synchronizeWithError:(id)arg1 causedByCommand:(id)arg2;
- (void)synchronizeWithEvent:(id)arg1;
- (_Bool)eventConcernsCurrentTrack:(id)arg1;
- (void)updateTracksMapping;
- (void)clearTracksMapping;
- (void)disconnect;
- (id)externalContextName;
- (_Bool)notificationWasSentByCurrentTrackController:(id)arg1;
- (id)queuedCollectionDisplayTitle;
- (id)queuedCollectionTitle;
- (id)currentTrackTitle;
- (id)currentTrackArtistName;
- (_Bool)isStoppedAfterFailing;
- (float)currentTrackBufferingProgress;
- (_Bool)currentTrackIsStalledBuffering;
- (_Bool)currentTrackIsBuffering;
- (_Bool)repeatIsAllowed;
- (_Bool)shuffleIsAllowed;
- (_Bool)skipNextIsAllowed;
- (_Bool)hasNextTrack;
- (_Bool)skipPreviousIsAllowed;
- (_Bool)hasPreviousTrack;
- (_Bool)seekIsAllowed;
- (double)playbackElaspedTime;
- (double)playbackDuration;
- (float)playbackProgress;
- (_Bool)isPlaying;
- (void)seekToProgress:(float)arg1;
- (void)togglePlayPause;
- (void)stop;
- (void)play;
- (void)pause;
- (id)temporaryCollectionWithTracks:(id)arg1;
- (id)playTrack:(id)arg1 atTime:(unsigned long long)arg2;
- (id)playTrack:(id)arg1;
- (id)playTracks:(id)arg1 startingWithTrackAtIndex:(unsigned long long)arg2 atTime:(unsigned long long)arg3 byShufflingTracks:(_Bool)arg4;
- (id)playTracks:(id)arg1 startingWithTrackAtIndex:(unsigned long long)arg2 atTime:(unsigned long long)arg3;
- (id)playTracks:(id)arg1 startingWithTrackAtIndex:(unsigned long long)arg2;
- (id)playTracks:(id)arg1;
- (void)completePlayCollection:(id)arg1 startingWithTrack:(id)arg2 atIndex:(unsigned long long)arg3 atTime:(unsigned long long)arg4 byShufflingTracks:(_Bool)arg5;
- (_Bool)playCollection:(id)arg1 queuedTracks:(id)arg2 startingAtIndex:(unsigned long long)arg3 atTime:(unsigned long long)arg4 byShufflingTracks:(_Bool)arg5;
- (_Bool)playCollection:(id)arg1 startingAtIndex:(unsigned long long)arg2 atTime:(unsigned long long)arg3 byShufflingTracks:(_Bool)arg4;
- (_Bool)playCollection:(id)arg1 startingAtIndex:(unsigned long long)arg2;
- (_Bool)playCollection:(id)arg1;
- (_Bool)toggleShuffleMode;
- (_Bool)isInShuffleMode;
- (_Bool)setShuffle:(_Bool)arg1;
- (_Bool)isPlayingCollectionTracks:(id)arg1;
- (_Bool)isPlayingCollection:(id)arg1;
- (_Bool)isPlayingCollectionID:(id)arg1;
- (_Bool)isPlayingCurrentContext;
- (_Bool)isPlayingTrackID:(id)arg1;
- (_Bool)isPlayingTrack:(id)arg1;
- (unsigned long long)currentTrackAbsoluteIndex;
- (id)queuedTracks;
- (id)currentTrack;
- (long long)toggleRepeatMode;
- (_Bool)hasAQueuedCollection;
- (id)queuedCollection;
- (_Bool)playTrackAtIndex:(unsigned long long)arg1;
- (_Bool)skipToPreviousTrack;
- (_Bool)skipToNextTrack;
- (id)initWithSender:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

