//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "DZRGateKeeperModule.h"

#import "DZRGoogleCastVolumeControllerDelegate-Protocol.h"
#import "GCKRemoteMediaClientListener-Protocol.h"
#import "_TtP6Deezer30GoogleCastSessionEventListener_-Protocol.h"

@class DZRGoogleCastPlayer, DZRGoogleCastVolumeController, GCKMediaStatus, GCKRemoteMediaClient, NSString, _TtC6Deezer24GoogleCastCommandManager, _TtC6Deezer24GoogleCastSessionManager;

@interface DZRGoogleCastSender : DZRGateKeeperModule <GCKRemoteMediaClientListener, DZRGoogleCastVolumeControllerDelegate, _TtP6Deezer30GoogleCastSessionEventListener_>
{
    _Bool _isOwningPlayback;
    _Bool _flowPlaying;
    GCKRemoteMediaClient *_mediaClient;
    long long _state;
    DZRGoogleCastPlayer *_player;
    DZRGoogleCastVolumeController *_volumeController;
    long long _startingIndex;
    long long _playerType;
    _TtC6Deezer24GoogleCastSessionManager *_castSessionManager;
    _TtC6Deezer24GoogleCastCommandManager *_commandManager;
    GCKMediaStatus *_mediaStatus;
}

+ (id)sharedSender;
+ (id)name;
+ (id)googleCastReceiverApplicationId;
@property(retain, nonatomic) GCKMediaStatus *mediaStatus; // @synthesize mediaStatus=_mediaStatus;
@property(retain, nonatomic) _TtC6Deezer24GoogleCastCommandManager *commandManager; // @synthesize commandManager=_commandManager;
@property(retain, nonatomic) _TtC6Deezer24GoogleCastSessionManager *castSessionManager; // @synthesize castSessionManager=_castSessionManager;
@property(nonatomic) _Bool flowPlaying; // @synthesize flowPlaying=_flowPlaying;
@property(nonatomic) long long playerType; // @synthesize playerType=_playerType;
@property(readonly, nonatomic) long long startingIndex; // @synthesize startingIndex=_startingIndex;
@property(nonatomic) _Bool isOwningPlayback; // @synthesize isOwningPlayback=_isOwningPlayback;
@property(retain, nonatomic) DZRGoogleCastVolumeController *volumeController; // @synthesize volumeController=_volumeController;
@property(retain, nonatomic) DZRGoogleCastPlayer *player; // @synthesize player=_player;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) GCKRemoteMediaClient *mediaClient; // @synthesize mediaClient=_mediaClient;
- (void).cxx_destruct;
- (void)didChangeVolume:(float)arg1;
- (void)remoteMediaClient:(id)arg1 didUpdateMediaStatus:(id)arg2;
- (void)castSessionDidStopFrom:(id)arg1;
- (void)castSessionDidFailFrom:(id)arg1;
- (void)castSessionDidStartWithMediaClient:(id)arg1;
- (void)castSessionWillStart;
- (_Bool)canPerformCommand;
- (void)postNotificationWithName:(id)arg1 receiverName:(id)arg2 withError:(id)arg3 silent:(_Bool)arg4;
- (void)postNotificationWithName:(id)arg1 withError:(id)arg2;
- (void)postNotificationWithName:(id)arg1;
- (void)playerRouteDidChange:(id)arg1;
- (void)setReceiverVolume:(float)arg1;
- (void)sendStartCommandForCollection:(id)arg1 startingAtIndex:(unsigned long long)arg2 andTime:(double)arg3 byShuffling:(_Bool)arg4 withRepeatState:(long long)arg5;
- (void)sendToggleShuffleCommandWithValue:(_Bool)arg1;
- (void)sendToggleRepeatModeCommandWithState:(long long)arg1;
- (_Bool)sendSkipToTrackIndexCommand:(unsigned long long)arg1;
- (void)sendSkipToPreviousTrackCommand;
- (void)sendSkipToNextTrackCommand;
- (void)sendSeekCommandToTime:(double)arg1;
- (void)sendPauseCommand;
- (void)sendPlayCommand;
- (void)disconnect;
- (void)tearDownConnectedState;
- (void)stopCasting;
- (void)handleCastSessionEnding;
- (void)presentCastDialog;
- (void)userDidDisconnect;
- (void)userDidConnect;
- (void)configurePlayer;
- (void)registerAsAudioSessionCondition;
- (void)registerCastSessionListeners;
- (void)setupTasks;
- (void)setupCastSession;
- (void)moduleUnload;
- (id)init;
- (long long)currentTrackQuality;
- (float)receiverVolume;
- (_Bool)isReceiverLoading;
- (_Bool)knowsVisibleReceivers;
- (_Bool)isCastingQueuedCollection;
- (_Bool)isDisconnected;
- (_Bool)isConnected;
- (id)connectedReceiverName;
- (id)connectedReceiver;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

