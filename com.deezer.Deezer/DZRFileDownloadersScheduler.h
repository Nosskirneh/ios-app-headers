//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "FileDownloaderDelegate-Protocol.h"

@class DZRReachabilityFacade, NSMutableArray, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString;

@interface DZRFileDownloadersScheduler : NSObject <FileDownloaderDelegate>
{
    _Bool _canNotifyProgress;
    NSOperationQueue *_streamingQueue;
    NSOperationQueue *_musicLibraryQueue;
    unsigned long long _downloadingExpectedSize;
    double _minimumTimeIntervalBetweenTwoNoSpaceLeftDidStopNotifications;
    double _maximumTimeIntervalBetweenTwoNoSpaceLeftDidStopNotifications;
    double _noSpaceLeftLastDownloadDidStopNotificationTime;
    NSMutableSet *_noSpaceLeftLastDownloadDidStopNotificationCollectionIDs;
    NSMutableArray *_suspendedDownloaders;
    NSMutableDictionary *_delegatesBySuspendedDownloaders;
    NSMutableSet *_observedDownloaders;
    NSMutableDictionary *_delegatesByDownloadIds;
    NSMutableDictionary *_downloadersByDownloadIds;
    DZRReachabilityFacade *_reachability;
    unsigned long long _backgroundTaskIdentifier;
}

+ (id)callbacksQueue;
+ (id)downloadIdForDownloadableObject:(id)arg1;
+ (id)workingQueue;
+ (id)defaultScheduler;
+ (id)sharedNotifier;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(retain) DZRReachabilityFacade *reachability; // @synthesize reachability=_reachability;
@property(retain) NSMutableDictionary *downloadersByDownloadIds; // @synthesize downloadersByDownloadIds=_downloadersByDownloadIds;
@property(retain) NSMutableDictionary *delegatesByDownloadIds; // @synthesize delegatesByDownloadIds=_delegatesByDownloadIds;
@property(retain, nonatomic) NSMutableSet *observedDownloaders; // @synthesize observedDownloaders=_observedDownloaders;
@property(retain, nonatomic) NSMutableDictionary *delegatesBySuspendedDownloaders; // @synthesize delegatesBySuspendedDownloaders=_delegatesBySuspendedDownloaders;
@property(retain, nonatomic) NSMutableArray *suspendedDownloaders; // @synthesize suspendedDownloaders=_suspendedDownloaders;
@property(retain, nonatomic) NSMutableSet *noSpaceLeftLastDownloadDidStopNotificationCollectionIDs; // @synthesize noSpaceLeftLastDownloadDidStopNotificationCollectionIDs=_noSpaceLeftLastDownloadDidStopNotificationCollectionIDs;
@property(nonatomic) double noSpaceLeftLastDownloadDidStopNotificationTime; // @synthesize noSpaceLeftLastDownloadDidStopNotificationTime=_noSpaceLeftLastDownloadDidStopNotificationTime;
@property(nonatomic) double maximumTimeIntervalBetweenTwoNoSpaceLeftDidStopNotifications; // @synthesize maximumTimeIntervalBetweenTwoNoSpaceLeftDidStopNotifications=_maximumTimeIntervalBetweenTwoNoSpaceLeftDidStopNotifications;
@property(nonatomic) double minimumTimeIntervalBetweenTwoNoSpaceLeftDidStopNotifications; // @synthesize minimumTimeIntervalBetweenTwoNoSpaceLeftDidStopNotifications=_minimumTimeIntervalBetweenTwoNoSpaceLeftDidStopNotifications;
@property(nonatomic) unsigned long long downloadingExpectedSize; // @synthesize downloadingExpectedSize=_downloadingExpectedSize;
@property(retain, nonatomic) NSOperationQueue *musicLibraryQueue; // @synthesize musicLibraryQueue=_musicLibraryQueue;
@property(retain, nonatomic) NSOperationQueue *streamingQueue; // @synthesize streamingQueue=_streamingQueue;
@property(nonatomic) _Bool canNotifyProgress; // @synthesize canNotifyProgress=_canNotifyProgress;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopObservingDownloader:(id)arg1;
- (void)startObservingDownloader:(id)arg1;
- (void)fileDownloaderDidStop:(id)arg1;
- (void)downloaderDidFinish:(id)arg1 fileSize:(unsigned long long)arg2 filePath:(id)arg3;
- (void)downloaderFailedToDownload:(id)arg1 error:(id)arg2;
- (void)downloader:(id)arg1 didWriteBytesCount:(unsigned long long)arg2 fileSize:(unsigned long long)arg3 bytesPerSecond:(unsigned long long)arg4;
- (void)downloader:(id)arg1 willStartToDownloadBytesCount:(unsigned long long)arg2 atFilePath:(id)arg3;
- (_Bool)wasDownloaderForStreaming:(id)arg1;
- (id)downloaderWithDownloadableObject:(id)arg1 ofCollectionWithIdentifier:(id)arg2 additionalDelegate:(id)arg3;
- (_Bool)isDownloadScheduledForPlayableObject:(id)arg1 forQualityLevel:(long long)arg2;
- (void)restartScheduler:(id)arg1;
- (void)continueDownloadInBackground:(id)arg1;
- (void)unsafePauseDownloads:(_Bool)arg1;
- (void)resumeDownloads;
- (void)unsafeResumeDownloadForStreaming;
- (_Bool)hasPendingDownloads;
- (_Bool)isDownloading;
- (void)cancelAllDownloads;
- (void)rescheduleSuspendedDownloaders;
- (void)canFileDownloader:(id)arg1 startDownloadWithExpectedSize:(unsigned long long)arg2 forCollectionWithIdentifier:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)removeDelegate:(id)arg1 forDownloadOfDownloadableObject:(id)arg2 withCollectionWithIdentifier:(id)arg3;
- (id)addToPendingDownloadersDelegate:(id)arg1 forPlayableObject:(id)arg2;
- (void)addDelegate:(id)arg1 forDownloadOfDownloadableObject:(id)arg2;
- (void)unsafeAddDelegate:(id)arg1 forDownloadWithId:(id)arg2;
- (id)downloaderWithDownloadableObject:(id)arg1 ofCollectionWithIdentifier:(id)arg2 delegate:(id)arg3;
- (_Bool)unscheduleDownloaderForDownloadableObject:(id)arg1;
- (_Bool)scheduleDownloader:(id)arg1 forStreamableContent:(_Bool)arg2;
- (_Bool)unsafeAddDownloader:(id)arg1 forStreamableContent:(_Bool)arg2;
- (void)downloadThroughMobileNetworkPreferenceChanged:(id)arg1;
- (void)prepareReachabilityCallbacks;
- (void)dealloc;
- (id)init;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

