//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DZRMusicLibraryCollectionsObserverDelegate-Protocol.h"
#import "DZRMusicLibrarySynchronizerObserver-Protocol.h"

@class DZRMusicLibrarySynchronizer, DZRObservationNotifier, NSMutableDictionary, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface DZRMusicLibraryStateCache : NSObject <DZRMusicLibrarySynchronizerObserver, DZRMusicLibraryCollectionsObserverDelegate>
{
    NSMutableDictionary *_statesByPlayableIDs;
    NSMutableDictionary *_collectionIDsByPlayableIDs;
    NSMutableDictionary *_playableIDsByCollectionIDs;
    NSMutableDictionary *_notifiersByCollectionIDs;
    DZRObservationNotifier *_notifier;
    DZRMusicLibrarySynchronizer *_synchronizer;
    NSObject<OS_dispatch_queue> *_backgroundQueue;
    NSOperationQueue *_operationQueue;
    NSObject<OS_dispatch_queue> *_statesQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *statesQueue; // @synthesize statesQueue=_statesQueue;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *backgroundQueue; // @synthesize backgroundQueue=_backgroundQueue;
@property(retain, nonatomic) DZRMusicLibrarySynchronizer *synchronizer; // @synthesize synchronizer=_synchronizer;
@property(retain, nonatomic) DZRObservationNotifier *notifier; // @synthesize notifier=_notifier;
@property(retain, nonatomic) NSMutableDictionary *notifiersByCollectionIDs; // @synthesize notifiersByCollectionIDs=_notifiersByCollectionIDs;
@property(retain, nonatomic) NSMutableDictionary *playableIDsByCollectionIDs; // @synthesize playableIDsByCollectionIDs=_playableIDsByCollectionIDs;
@property(retain, nonatomic) NSMutableDictionary *collectionIDsByPlayableIDs; // @synthesize collectionIDsByPlayableIDs=_collectionIDsByPlayableIDs;
@property(retain, nonatomic) NSMutableDictionary *statesByPlayableIDs; // @synthesize statesByPlayableIDs=_statesByPlayableIDs;
- (void).cxx_destruct;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)removeObserver:(id)arg1 forCollection:(id)arg2;
- (void)addObserver:(id)arg1 forCollection:(id)arg2;
- (void)notifyUpdateOfPlayableState:(id)arg1;
- (void)synchronizerDidFailDownloadingPlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerDidDeletePlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerDidDownloadPlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerDidProgressWithPlayable:(id)arg1 progress:(float)arg2 collectionID:(id)arg3;
- (void)synchronizerDidCancelDownloadOfPlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerWillDownloadPlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerDidUnregisterAllCollections;
- (void)synchronizerDidUnregisterCollectionForSynchronization:(id)arg1;
- (void)synchronizerDidRegisterCollectionForSynchronization:(id)arg1 availablePlayables:(id)arg2;
- (void)musicLibraryCollectionObserverDidStopObservingAllCollections:(id)arg1;
- (void)completeUpdateWithRemovedPlayables:(id)arg1 addedPlayables:(id)arg2 preparedStatesByPlayablesIDs:(id)arg3 forCollection:(id)arg4;
- (void)musicLibraryCollectionObserver:(id)arg1 didObserveRemovedPlayables:(id)arg2 addedPlayables:(id)arg3 availablePlayables:(id)arg4 forCollection:(id)arg5;
- (void)musicLibraryCollectionObserver:(id)arg1 didStopObservingCollections:(id)arg2 didStartObservingCollections:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)musicLibraryCollectionObserver:(id)arg1 didStopObservingCollections:(id)arg2 didStartObservingCollections:(id)arg3;
- (void)queueOperationBlock:(CDUnknownBlockType)arg1;
- (id)stateForRegisteredCollectionWithID:(id)arg1;
- (void)removeStateForPlayableWithID:(id)arg1 collectionID:(id)arg2;
- (id)stateForPlayable:(id)arg1 collection:(id)arg2;
- (id)stateForCollectionWithID:(id)arg1;
- (id)stateForCollection:(id)arg1;
- (_Bool)isCollectionWithIDRegistered:(id)arg1;
- (long long)numberOfSynchronizedCollections;
- (_Bool)hasStateForSomeCollections;
- (id)initWithSynchronizer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

