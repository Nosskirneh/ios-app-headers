//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIWebViewDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"
#import "WKUIDelegate-Protocol.h"

@class NSDate, NSString, UIWebView, WKWebView;
@protocol SASWKWebViewDelegate;

@interface SASWKWebView : UIView <WKUIDelegate, UIWebViewDelegate, WKNavigationDelegate>
{
    _Bool _alwaysAskDelegateBeforeLoading;
    _Bool _webViewLoaded;
    id <SASWKWebViewDelegate> _delegate;
    UIWebView *_legacyWebView;
    WKWebView *_webView;
    NSDate *_lastParallaxWindowRectEventUpdate;
    long long _webViewLoadCount;
}

+ (unsigned long long)enumHelperForUIWebViewNavigationType:(long long)arg1;
+ (unsigned long long)enumHelperForNavigationType:(long long)arg1;
@property(nonatomic) long long webViewLoadCount; // @synthesize webViewLoadCount=_webViewLoadCount;
@property(nonatomic) _Bool webViewLoaded; // @synthesize webViewLoaded=_webViewLoaded;
@property(retain, nonatomic) NSDate *lastParallaxWindowRectEventUpdate; // @synthesize lastParallaxWindowRectEventUpdate=_lastParallaxWindowRectEventUpdate;
@property(retain, nonatomic) WKWebView *webView; // @synthesize webView=_webView;
@property(retain, nonatomic) UIWebView *legacyWebView; // @synthesize legacyWebView=_legacyWebView;
@property(nonatomic) _Bool alwaysAskDelegateBeforeLoading; // @synthesize alwaysAskDelegateBeforeLoading=_alwaysAskDelegateBeforeLoading;
@property(nonatomic) __weak id <SASWKWebViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webViewShouldStartNavigation:(id)arg1 navigationType:(unsigned long long)arg2;
- (void)webViewDidFailToLoad:(id)arg1;
- (void)webViewDidFinishLoad;
- (void)webViewDidStartLoad;
- (void)dispatchWebViewLoaded;
- (void)stopLoading;
- (void)loadCreativeScript:(id)arg1 baseURL:(id)arg2;
- (void)loadRequest:(id)arg1;
- (void)executeJavascriptOnWebView:(id)arg1;
- (void)immediatelyExecuteJavascriptOnWebView:(id)arg1;
- (void)executeParallaxWindowEvent:(struct CGRect)arg1;
- (void)executeParallaxVisibilityJavascriptEvent:(_Bool)arg1;
- (_Bool)canSendParallaxWindowRectEvent;
- (void)enableParallaxJavascriptAPI;
- (void)setFrame:(struct CGRect)arg1;
- (void)instanciateLegacyWebViewWithFrame:(struct CGRect)arg1;
- (void)instanciateWebViewWithFrame:(struct CGRect)arg1;
- (id)initLegacyWebViewWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

