//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DZRRemoteTrackPlayback-Protocol.h"

@class DZRDownloadableObject, DZRGoogleCastSender, NSString, NSTimer;
@protocol DZRTrackPlaybackDelegate;

@interface DZRGoogleCastTrackController : NSObject <DZRRemoteTrackPlayback>
{
    _Bool _isSeeking;
    float _playbackRate;
    float _seekProgressValue;
    id <DZRTrackPlaybackDelegate> _playbackDelegate;
    DZRGoogleCastSender *_sender;
    DZRDownloadableObject *_track;
    double _startingTimePosition;
    double _playbackEndingTime;
    long long _state;
    long long _stateToReplay;
    double _elapsedTimeDuration;
    NSTimer *_playbackTickTimer;
    double _lastTimeElaspedTimeDidChange;
}

@property(nonatomic) float seekProgressValue; // @synthesize seekProgressValue=_seekProgressValue;
@property(nonatomic) _Bool isSeeking; // @synthesize isSeeking=_isSeeking;
@property(nonatomic) double lastTimeElaspedTimeDidChange; // @synthesize lastTimeElaspedTimeDidChange=_lastTimeElaspedTimeDidChange;
@property(retain, nonatomic) NSTimer *playbackTickTimer; // @synthesize playbackTickTimer=_playbackTickTimer;
@property(nonatomic) double elapsedTimeDuration; // @synthesize elapsedTimeDuration=_elapsedTimeDuration;
@property(nonatomic) long long stateToReplay; // @synthesize stateToReplay=_stateToReplay;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) float playbackRate; // @synthesize playbackRate=_playbackRate;
@property(nonatomic) double playbackEndingTime; // @synthesize playbackEndingTime=_playbackEndingTime;
@property(nonatomic) double startingTimePosition; // @synthesize startingTimePosition=_startingTimePosition;
@property(retain, nonatomic) DZRDownloadableObject *track; // @synthesize track=_track;
@property(nonatomic) __weak DZRGoogleCastSender *sender; // @synthesize sender=_sender;
@property(nonatomic) id <DZRTrackPlaybackDelegate> playbackDelegate; // @synthesize playbackDelegate=_playbackDelegate;
- (void).cxx_destruct;
- (void)notifyDidFinishPlayback;
- (void)notifyDidFinishBuffering;
- (void)notifyWillStartBuffering;
- (void)notifyAvailableTimeDidChange;
- (void)notifyTotalTimeDidChange;
- (void)notifyElapsedTimeDidChange;
- (void)notifyControllerDidFailWithError:(id)arg1;
- (id)remoteContextName;
- (void)stopSeekingForward;
- (void)startSeekingForward;
- (void)stopSeekingBackward;
- (void)startSeekingBackward;
- (void)rewind;
- (void)seekToProgress:(float)arg1 userInfo:(id)arg2;
- (void)seekToProgress:(float)arg1;
- (void)seekToPosition:(double)arg1;
- (_Bool)canPausePlayback;
- (_Bool)canStartPlayback;
- (void)stop;
- (void)pause:(_Bool)arg1;
- (void)play;
- (double)accumulatedPlaybackTime;
- (double)remainingDuration;
- (double)elapsedDuration;
- (double)availableDuration;
- (double)totalDuration;
- (long long)streamQuality;
- (void)loadTrack:(id)arg1 ofCollection:(id)arg2 shouldTrimSilence:(_Bool)arg3 startingTimePosition:(double)arg4;
- (void)prepareToPlayTrack:(id)arg1 ofCollection:(id)arg2 shouldTrimSilence:(_Bool)arg3 startingTimePosition:(double)arg4 userInfo:(id)arg5;
- (void)prepareToPlayTrack:(id)arg1 ofCollection:(id)arg2 shouldTrimSilence:(_Bool)arg3 startingTimePosition:(double)arg4;
- (void)prepareToPlayTrack:(id)arg1 ofCollection:(id)arg2;
- (void)stopPlaybackTick;
- (void)playbackTimerDidTick:(id)arg1;
- (void)resumePlaybackTick;
- (void)updateElapsedTimePosition:(double)arg1;
- (void)receiverDidFinishPlaying;
- (void)receiverDidStartLoadingTrack:(id)arg1;
- (void)receiverDidPauseAtTime:(double)arg1;
- (void)receiverDidStartPlayingAtTime:(double)arg1;
- (void)receiverDidUpdateElapsedTime:(double)arg1;
- (void)synchronizeWithError:(id)arg1;
- (void)synchronizeWithEvent:(id)arg1;
- (_Bool)isBuffering;
- (id)initWithSender:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

