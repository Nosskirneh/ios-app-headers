//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ObservationKeeperDelegate-Protocol.h"
#import "_TtP6Deezer21DZRSortableController_-Protocol.h"

@class DZRFilterableGenresDataSource, DZRReachabilityFacade, DZRWatchTopCharts, NSArray, NSDate, NSDictionary, NSMutableDictionary, NSOperationQueue, NSString, ObservationKeeper;

@interface DZRWatchManager : NSObject <_TtP6Deezer21DZRSortableController_, ObservationKeeperDelegate>
{
    _Bool _isLoading;
    DZRReachabilityFacade *_reachability;
    NSOperationQueue *_queue;
    id _playlistLovedTracksObserver;
    long long _currentRightCircleButtonState;
    double _sliderDuration;
    double _progressSlider;
    NSArray *_mixesDataSource;
    NSArray *_tracksDataSource;
    ObservationKeeper *_tracksObservationKeeper;
    ObservationKeeper *_episodesObservationKeeper;
    long long _requestCategory;
    long long _currentDataSource;
    NSMutableDictionary *_userDataSource;
    ObservationKeeper *_userObservationKeeper;
    ObservationKeeper *_topChartsObservationKeeper;
    NSMutableDictionary *_topChartsDataSource;
    DZRWatchTopCharts *_topCharts;
    DZRFilterableGenresDataSource *_topChartsGenresDataSource;
    id _topChartsGenresDataObserver;
    NSArray *_sortedFavoriteTracks;
    NSDictionary *_watchDeviceInfo;
    NSDate *_lastVolumeActionLogDate;
}

@property(retain, nonatomic) NSDate *lastVolumeActionLogDate; // @synthesize lastVolumeActionLogDate=_lastVolumeActionLogDate;
@property(retain, nonatomic) NSDictionary *watchDeviceInfo; // @synthesize watchDeviceInfo=_watchDeviceInfo;
@property(retain, nonatomic) NSArray *sortedFavoriteTracks; // @synthesize sortedFavoriteTracks=_sortedFavoriteTracks;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(retain, nonatomic) id topChartsGenresDataObserver; // @synthesize topChartsGenresDataObserver=_topChartsGenresDataObserver;
@property(nonatomic) __weak DZRFilterableGenresDataSource *topChartsGenresDataSource; // @synthesize topChartsGenresDataSource=_topChartsGenresDataSource;
@property(retain, nonatomic) DZRWatchTopCharts *topCharts; // @synthesize topCharts=_topCharts;
@property(retain, nonatomic) NSMutableDictionary *topChartsDataSource; // @synthesize topChartsDataSource=_topChartsDataSource;
@property(retain, nonatomic) ObservationKeeper *topChartsObservationKeeper; // @synthesize topChartsObservationKeeper=_topChartsObservationKeeper;
@property(retain, nonatomic) ObservationKeeper *userObservationKeeper; // @synthesize userObservationKeeper=_userObservationKeeper;
@property(retain, nonatomic) NSMutableDictionary *userDataSource; // @synthesize userDataSource=_userDataSource;
@property(nonatomic) long long currentDataSource; // @synthesize currentDataSource=_currentDataSource;
@property(nonatomic) long long requestCategory; // @synthesize requestCategory=_requestCategory;
@property(retain, nonatomic) ObservationKeeper *episodesObservationKeeper; // @synthesize episodesObservationKeeper=_episodesObservationKeeper;
@property(retain, nonatomic) ObservationKeeper *tracksObservationKeeper; // @synthesize tracksObservationKeeper=_tracksObservationKeeper;
@property(retain, nonatomic) NSArray *tracksDataSource; // @synthesize tracksDataSource=_tracksDataSource;
@property(retain, nonatomic) NSArray *mixesDataSource; // @synthesize mixesDataSource=_mixesDataSource;
@property(nonatomic) double progressSlider; // @synthesize progressSlider=_progressSlider;
@property(nonatomic) double sliderDuration; // @synthesize sliderDuration=_sliderDuration;
@property(nonatomic) long long currentRightCircleButtonState; // @synthesize currentRightCircleButtonState=_currentRightCircleButtonState;
@property(retain, nonatomic) id playlistLovedTracksObserver; // @synthesize playlistLovedTracksObserver=_playlistLovedTracksObserver;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) DZRReachabilityFacade *reachability; // @synthesize reachability=_reachability;
- (void).cxx_destruct;
- (_Bool)ascending;
- (long long)splitMode;
- (id)propertiesToFilter;
- (id)propertiesToSort;
- (void)observationKeeper:(id)arg1 didObserveChange:(id)arg2 ofValueWithKeyPath:(id)arg3 forObject:(id)arg4;
- (void)requestGenreForTopCharts:(CDUnknownBlockType)arg1;
- (_Bool)canPerformNewtorkAction:(id *)arg1;
- (CDUnknownBlockType)watchErrorHandler;
- (void)sendDataSync:(id)arg1;
- (void)transferData:(id)arg1;
- (_Bool)sendData:(id)arg1;
- (_Bool)isValidData:(id)arg1;
- (void)talkEpisodeRowTapped:(id)arg1 withTalk:(id)arg2;
- (void)talkRowTapped:(id)arg1;
- (void)playlistTrackRowTapped:(id)arg1 withPlaylist:(id)arg2;
- (void)playlistRowTapped:(id)arg1;
- (void)albumTrackRowTapped:(id)arg1 withAlbum:(id)arg2;
- (void)albumRowTapped:(id)arg1;
- (void)favoriteTopTrackRowTapped:(id)arg1;
- (void)trackRowTapped:(long long)arg1 withTrackId:(id)arg2 andParentId:(id)arg3;
- (void)loadTracks:(id)arg1 withCollectionId:(id)arg2 category:(long long)arg3;
- (void)loadEpisodes:(id)arg1 withCollectionId:(id)arg2;
- (void)updateShuffleButton;
- (void)shuffleMenuTapped;
- (_Bool)requestMixesDataSource:(CDUnknownBlockType)arg1;
- (_Bool)requestMixesDataSource;
- (void)mixRowTapped:(id)arg1;
- (id)prepareLibraryParameters:(id)arg1 source:(long long)arg2;
- (id)prepareTopChartsParameters:(id)arg1 source:(long long)arg2;
- (_Bool)requestTopChartsDataSource:(long long)arg1 withCallback:(CDUnknownBlockType)arg2;
- (_Bool)requestTopChartsDataSource:(long long)arg1;
- (void)updateTopChartsDataSource:(id)arg1 source:(long long)arg2;
- (id)requestTopCharts:(long long)arg1;
- (void)downloadTopChartsForPlaylists;
- (void)downloadTopChartsForAlbums;
- (void)downloadTopChartsForTracks;
- (void)queueListRowTapped:(id)arg1;
- (_Bool)requestQueuelist;
- (_Bool)requestLibraryDataSource:(long long)arg1 withCallback:(CDUnknownBlockType)arg2;
- (_Bool)requestLibraryDataSource:(long long)arg1;
- (void)updateUserDataSource:(id)arg1 source:(long long)arg2;
- (id)requestCurrentUser:(long long)arg1;
- (void)filterFavoriteTracksWithCompletion:(CDUnknownBlockType)arg1;
- (void)objectForCategory:(long long)arg1 withDeezerID:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)handleReceiveMessageFromWatch:(id)arg1;
- (void)logWatchMessage:(id)arg1;
- (void)resetProgress;
- (void)setProgressRate:(double)arg1 elapsedTime:(double)arg2;
- (void)refreshTimeInfos;
- (void)updateRepeatButton;
- (void)repeatTapped;
- (void)updateCircleButtonState;
- (id)isFlowMode;
- (id)handleRightCircleButtonState;
- (void)removeTrackFromLovedTracks:(id)arg1 inContext:(id)arg2;
- (void)addTrackToLovedTracks:(id)arg1 inContext:(id)arg2;
- (void)dislikeTrackTapped;
- (void)circleButtonTapped;
- (_Bool)userWillSkipTrack;
- (_Bool)userCanSkipTrack;
- (void)nextTapped;
- (void)previousTapped;
- (_Bool)flowAction;
- (_Bool)playTapped;
- (void)controllerDidChangeElapsedTime:(id)arg1;
- (void)controllerDidChangeTotalTime:(id)arg1;
- (void)resetCircleButtonsState;
- (void)playerDidStopPlaying:(id)arg1;
- (void)playerDidChangeTrack:(id)arg1;
- (id)playerArtistAlbumLabel;
- (void)updateCurrentTrackForPlayer;
- (void)loadingDidChangeTrack;
- (void)updateTrackForPlayer:(_Bool)arg1;
- (void)updateTrackForPlayer;
- (void)trackControllerFailed:(id)arg1;
- (void)trackControllerDidFinishPlayback:(id)arg1;
- (void)trackControllerDidStartPlayback:(id)arg1;
- (void)trackControllerDidPausePlayback:(id)arg1;
- (void)volumeChanged:(id)arg1;
- (void)startObservingPlayback;
- (_Bool)isPlayingTalkEpisode;
- (id)currentTrack;
- (id)player;
- (void)dealloc;
- (id)categoryKey:(long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

