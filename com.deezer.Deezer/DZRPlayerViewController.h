//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CommonController.h"

#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIViewControllerTransitioningDelegate-Protocol.h"

@class DZRAudioButton, DZRExternalAccessoryMonitor, DZRInteractiveDismissTransition, DZRLyricsViewController, DZRPlayerButton, DZRPlayerCoverCollectionViewController, DZRPlayerOverlayViewController, DZRPlayerTrackActionsController, DZRReachabilityFacade, DZRVolumeView, NSDate, NSError, NSLayoutConstraint, NSString, NSTimer, UIAlertController, UIButton, UIImage, UIImageView, UILabel, UIPanGestureRecognizer, UIProgressView, UISlider, UIView;

@interface DZRPlayerViewController : CommonController <UIGestureRecognizerDelegate, UIViewControllerTransitioningDelegate>
{
    _Bool _playerLoading;
    _Bool _playerEmpty;
    _Bool _viewVisible;
    _Bool _shouldDisplayLyricsWhenViewIsVisible;
    _Bool _flowMode;
    _Bool _shouldShowRemainingTime;
    _Bool _forwardPlayProgressValueChanged;
    _Bool _showingQueueListInPortrait;
    _Bool _shouldHideNavigationBar;
    _Bool _feedbackPlayerIsActive;
    float _downloadProgressValue;
    float _playProgressValue;
    double _volume;
    DZRReachabilityFacade *_reachability;
    long long _lastLayoutUpdateInterfaceOrientation;
    UIPanGestureRecognizer *_dismissGestureRecognizer;
    UIPanGestureRecognizer *_navBarDismissGestureRecognizer;
    UIAlertController *_settingsRedirectAlert;
    double _lastTimeSettingsAlertWasPresented;
    NSError *_playerError;
    DZRInteractiveDismissTransition *_dismissTransition;
    UIView *_mainView;
    NSLayoutConstraint *_mainViewTrailingToSuperviewConstraint;
    NSLayoutConstraint *_statusBarHeightConstraint;
    UIImage *_backgroundCoverImageBeforeBlur;
    UIImageView *_backgroundCoverImageView;
    DZRPlayerOverlayViewController *_overlayViewController;
    DZRLyricsViewController *_lyricsViewController;
    UIView *_lyricsView;
    UIButton *_closeButton;
    UIView *_playerView;
    NSLayoutConstraint *_playerViewTopConstraint;
    NSLayoutConstraint *_playerViewToSliderViewConstraint;
    NSLayoutConstraint *_topReferencePadderHeightConstraint;
    NSLayoutConstraint *_bottomReferencePadderHeightConstraint;
    DZRPlayerCoverCollectionViewController *_coversCollectionViewController;
    UIView *_trackInfosAndActionsWrapperView;
    DZRPlayerTrackActionsController *_trackActionsController;
    UIView *_controlView;
    NSLayoutConstraint *_controlViewBottomConstraint;
    UILabel *_playerTitleLabel;
    UILabel *_playerArtistAlbumLabel;
    UIView *_controlsWrapperView;
    UIButton *_repeatButton;
    UIButton *_previousButton;
    UIButton *_playButton;
    UIButton *_nextButton;
    UIButton *_randomButton;
    UIButton *_jumpBackButton;
    UIButton *_jumpForwardButton;
    DZRVolumeView *_volumeView;
    NSLayoutConstraint *_volumeViewHeightConstraint;
    NSLayoutConstraint *_volumeViewToButtonsWrapperConstrait;
    UIView *_buttonsWrapperView;
    DZRAudioButton *_audioSettingsButton;
    UIView *_bottomButtonsSeparator;
    DZRPlayerButton *_queueListButton;
    NSLayoutConstraint *_audioSettingsToSeparatorConstraint;
    NSLayoutConstraint *_audioSettingsCenterXConstraint;
    NSLayoutConstraint *_buttonsWrapperBottomSpaceConstraint;
    UILabel *_elapsedTimeLabel;
    UILabel *_durationLabel;
    UIButton *_durationLabelButton;
    NSLayoutConstraint *_elapsedTimeLabelLeadingToSuperviewConstraint;
    NSLayoutConstraint *_elapsedLayoutConstraint;
    UIView *_sliderView;
    UIProgressView *_bufferProgressView;
    UISlider *_progressSlider;
    double _sliderDuration;
    NSTimer *_progressTimer;
    NSDate *_startDate;
    NSDate *_lastProgressUpdateDate;
    UIView *_queueListView;
    NSLayoutConstraint *_queueListWidthConstraint;
    NSLayoutConstraint *_queueListViewTrailingToSuperviewConstraint;
    UIView *_queueListDimmingView;
    DZRExternalAccessoryMonitor *_externalAccessoryMonitor;
}

+ (long long)preferredTabIndexWithParameters:(id)arg1;
+ (id)sharedController;
@property(nonatomic) _Bool feedbackPlayerIsActive; // @synthesize feedbackPlayerIsActive=_feedbackPlayerIsActive;
@property(nonatomic) _Bool shouldHideNavigationBar; // @synthesize shouldHideNavigationBar=_shouldHideNavigationBar;
@property(retain, nonatomic) DZRExternalAccessoryMonitor *externalAccessoryMonitor; // @synthesize externalAccessoryMonitor=_externalAccessoryMonitor;
@property(nonatomic, getter=isShowingQueueListInPortrait) _Bool showingQueueListInPortrait; // @synthesize showingQueueListInPortrait=_showingQueueListInPortrait;
@property(retain, nonatomic) UIView *queueListDimmingView; // @synthesize queueListDimmingView=_queueListDimmingView;
@property(retain, nonatomic) NSLayoutConstraint *queueListViewTrailingToSuperviewConstraint; // @synthesize queueListViewTrailingToSuperviewConstraint=_queueListViewTrailingToSuperviewConstraint;
@property(retain, nonatomic) NSLayoutConstraint *queueListWidthConstraint; // @synthesize queueListWidthConstraint=_queueListWidthConstraint;
@property(retain, nonatomic) UIView *queueListView; // @synthesize queueListView=_queueListView;
@property(retain, nonatomic) NSDate *lastProgressUpdateDate; // @synthesize lastProgressUpdateDate=_lastProgressUpdateDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(retain, nonatomic) NSTimer *progressTimer; // @synthesize progressTimer=_progressTimer;
@property(nonatomic) _Bool forwardPlayProgressValueChanged; // @synthesize forwardPlayProgressValueChanged=_forwardPlayProgressValueChanged;
@property(nonatomic) float playProgressValue; // @synthesize playProgressValue=_playProgressValue;
@property(nonatomic) float downloadProgressValue; // @synthesize downloadProgressValue=_downloadProgressValue;
@property(nonatomic) _Bool shouldShowRemainingTime; // @synthesize shouldShowRemainingTime=_shouldShowRemainingTime;
@property(nonatomic) double sliderDuration; // @synthesize sliderDuration=_sliderDuration;
@property(retain, nonatomic) UISlider *progressSlider; // @synthesize progressSlider=_progressSlider;
@property(retain, nonatomic) UIProgressView *bufferProgressView; // @synthesize bufferProgressView=_bufferProgressView;
@property(retain, nonatomic) UIView *sliderView; // @synthesize sliderView=_sliderView;
@property(retain, nonatomic) NSLayoutConstraint *elapsedLayoutConstraint; // @synthesize elapsedLayoutConstraint=_elapsedLayoutConstraint;
@property(retain, nonatomic) NSLayoutConstraint *elapsedTimeLabelLeadingToSuperviewConstraint; // @synthesize elapsedTimeLabelLeadingToSuperviewConstraint=_elapsedTimeLabelLeadingToSuperviewConstraint;
@property(retain, nonatomic) UIButton *durationLabelButton; // @synthesize durationLabelButton=_durationLabelButton;
@property(retain, nonatomic) UILabel *durationLabel; // @synthesize durationLabel=_durationLabel;
@property(retain, nonatomic) UILabel *elapsedTimeLabel; // @synthesize elapsedTimeLabel=_elapsedTimeLabel;
@property(retain, nonatomic) NSLayoutConstraint *buttonsWrapperBottomSpaceConstraint; // @synthesize buttonsWrapperBottomSpaceConstraint=_buttonsWrapperBottomSpaceConstraint;
@property(retain, nonatomic) NSLayoutConstraint *audioSettingsCenterXConstraint; // @synthesize audioSettingsCenterXConstraint=_audioSettingsCenterXConstraint;
@property(retain, nonatomic) NSLayoutConstraint *audioSettingsToSeparatorConstraint; // @synthesize audioSettingsToSeparatorConstraint=_audioSettingsToSeparatorConstraint;
@property(retain, nonatomic) DZRPlayerButton *queueListButton; // @synthesize queueListButton=_queueListButton;
@property(retain, nonatomic) UIView *bottomButtonsSeparator; // @synthesize bottomButtonsSeparator=_bottomButtonsSeparator;
@property(retain, nonatomic) DZRAudioButton *audioSettingsButton; // @synthesize audioSettingsButton=_audioSettingsButton;
@property(retain, nonatomic) UIView *buttonsWrapperView; // @synthesize buttonsWrapperView=_buttonsWrapperView;
@property(retain, nonatomic) NSLayoutConstraint *volumeViewToButtonsWrapperConstrait; // @synthesize volumeViewToButtonsWrapperConstrait=_volumeViewToButtonsWrapperConstrait;
@property(retain, nonatomic) NSLayoutConstraint *volumeViewHeightConstraint; // @synthesize volumeViewHeightConstraint=_volumeViewHeightConstraint;
@property(retain, nonatomic) DZRVolumeView *volumeView; // @synthesize volumeView=_volumeView;
@property(retain, nonatomic) UIButton *jumpForwardButton; // @synthesize jumpForwardButton=_jumpForwardButton;
@property(retain, nonatomic) UIButton *jumpBackButton; // @synthesize jumpBackButton=_jumpBackButton;
@property(retain, nonatomic) UIButton *randomButton; // @synthesize randomButton=_randomButton;
@property(retain, nonatomic) UIButton *nextButton; // @synthesize nextButton=_nextButton;
@property(retain, nonatomic) UIButton *playButton; // @synthesize playButton=_playButton;
@property(retain, nonatomic) UIButton *previousButton; // @synthesize previousButton=_previousButton;
@property(retain, nonatomic) UIButton *repeatButton; // @synthesize repeatButton=_repeatButton;
@property(retain, nonatomic) UIView *controlsWrapperView; // @synthesize controlsWrapperView=_controlsWrapperView;
@property(retain, nonatomic) UILabel *playerArtistAlbumLabel; // @synthesize playerArtistAlbumLabel=_playerArtistAlbumLabel;
@property(retain, nonatomic) UILabel *playerTitleLabel; // @synthesize playerTitleLabel=_playerTitleLabel;
@property(retain, nonatomic) NSLayoutConstraint *controlViewBottomConstraint; // @synthesize controlViewBottomConstraint=_controlViewBottomConstraint;
@property(retain, nonatomic) UIView *controlView; // @synthesize controlView=_controlView;
@property(retain, nonatomic) DZRPlayerTrackActionsController *trackActionsController; // @synthesize trackActionsController=_trackActionsController;
@property(retain, nonatomic) UIView *trackInfosAndActionsWrapperView; // @synthesize trackInfosAndActionsWrapperView=_trackInfosAndActionsWrapperView;
@property(retain, nonatomic) DZRPlayerCoverCollectionViewController *coversCollectionViewController; // @synthesize coversCollectionViewController=_coversCollectionViewController;
@property(nonatomic) __weak NSLayoutConstraint *bottomReferencePadderHeightConstraint; // @synthesize bottomReferencePadderHeightConstraint=_bottomReferencePadderHeightConstraint;
@property(nonatomic) __weak NSLayoutConstraint *topReferencePadderHeightConstraint; // @synthesize topReferencePadderHeightConstraint=_topReferencePadderHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *playerViewToSliderViewConstraint; // @synthesize playerViewToSliderViewConstraint=_playerViewToSliderViewConstraint;
@property(retain, nonatomic) NSLayoutConstraint *playerViewTopConstraint; // @synthesize playerViewTopConstraint=_playerViewTopConstraint;
@property(retain, nonatomic) UIView *playerView; // @synthesize playerView=_playerView;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UIView *lyricsView; // @synthesize lyricsView=_lyricsView;
@property(retain, nonatomic) DZRLyricsViewController *lyricsViewController; // @synthesize lyricsViewController=_lyricsViewController;
@property(retain, nonatomic) DZRPlayerOverlayViewController *overlayViewController; // @synthesize overlayViewController=_overlayViewController;
@property(retain, nonatomic) UIImageView *backgroundCoverImageView; // @synthesize backgroundCoverImageView=_backgroundCoverImageView;
@property(retain, nonatomic) UIImage *backgroundCoverImageBeforeBlur; // @synthesize backgroundCoverImageBeforeBlur=_backgroundCoverImageBeforeBlur;
@property(nonatomic) __weak NSLayoutConstraint *statusBarHeightConstraint; // @synthesize statusBarHeightConstraint=_statusBarHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *mainViewTrailingToSuperviewConstraint; // @synthesize mainViewTrailingToSuperviewConstraint=_mainViewTrailingToSuperviewConstraint;
@property(retain, nonatomic) UIView *mainView; // @synthesize mainView=_mainView;
@property(retain, nonatomic) DZRInteractiveDismissTransition *dismissTransition; // @synthesize dismissTransition=_dismissTransition;
@property(retain, nonatomic) NSError *playerError; // @synthesize playerError=_playerError;
@property(nonatomic) _Bool flowMode; // @synthesize flowMode=_flowMode;
@property(nonatomic) double lastTimeSettingsAlertWasPresented; // @synthesize lastTimeSettingsAlertWasPresented=_lastTimeSettingsAlertWasPresented;
@property(retain, nonatomic) UIAlertController *settingsRedirectAlert; // @synthesize settingsRedirectAlert=_settingsRedirectAlert;
@property(retain, nonatomic) UIPanGestureRecognizer *navBarDismissGestureRecognizer; // @synthesize navBarDismissGestureRecognizer=_navBarDismissGestureRecognizer;
@property(retain, nonatomic) UIPanGestureRecognizer *dismissGestureRecognizer; // @synthesize dismissGestureRecognizer=_dismissGestureRecognizer;
@property long long lastLayoutUpdateInterfaceOrientation; // @synthesize lastLayoutUpdateInterfaceOrientation=_lastLayoutUpdateInterfaceOrientation;
@property(nonatomic) _Bool shouldDisplayLyricsWhenViewIsVisible; // @synthesize shouldDisplayLyricsWhenViewIsVisible=_shouldDisplayLyricsWhenViewIsVisible;
@property(nonatomic, getter=isViewVisible) _Bool viewVisible; // @synthesize viewVisible=_viewVisible;
@property(retain, nonatomic) DZRReachabilityFacade *reachability; // @synthesize reachability=_reachability;
@property(nonatomic) double volume; // @synthesize volume=_volume;
- (void).cxx_destruct;
- (id)navigationPath;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)interactionControllerForDismissal:(id)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (void)handlePan:(id)arg1;
- (_Bool)userWillSkipTrack;
- (_Bool)userCanSkipTrack;
- (_Bool)userCanPlayPreviousTrack;
- (_Bool)isPlayingExternalCollection;
- (_Bool)isPlayingLiveStream;
- (_Bool)isPlayingUnknownExternalObject;
- (_Bool)isPlayingTalkEpisode;
- (unsigned long long)currentTrackIndex;
- (id)currentTrackDeezerID;
- (id)currentTrack;
- (id)currentRadio;
- (long long)queuedTracksTotalDuration;
- (id)queuedTracks;
- (id)player;
- (_Bool)shouldDisplayCarModeButton;
- (void)castSenderWasDisconnectedFromReceiver:(id)arg1;
- (void)googleCastSenderDidSendCommandWithLoading:(id)arg1;
- (void)googleCastSenderDidDisconnect:(id)arg1;
- (void)googleCastSenderDidConnect:(id)arg1;
- (_Bool)shouldDisplayGoogleCastIcon;
- (_Bool)supportsGoogleCast;
- (id)trackImageWithColor:(id)arg1 size:(double)arg2;
- (id)sliderRightTrackImage;
- (id)sliderLeftTrackImage;
- (id)thumbImageWithColor:(id)arg1 size:(double)arg2;
- (id)emptyThumbImage;
- (id)highlightedThumbImage;
- (id)thumbImage;
- (void)setBackgroundCoverImage:(id)arg1;
- (void)displayBlurBackgroundCover:(id)arg1 forTrack:(id)arg2;
- (void)displayDefaultBackgroundCover;
- (void)setTitleLabelsWithCurrentTrack:(id)arg1;
- (void)shuffleModeDidChange:(id)arg1;
- (void)repeatModeDidChange:(id)arg1;
- (void)trackControllerDidFinishBuffering:(id)arg1;
- (void)trackControllerWillStartBuffering:(id)arg1;
- (void)trackControllerBufferingSpeedIsTooWeak:(id)arg1;
- (void)queuedTracksDidChange:(id)arg1;
- (void)queuedCollectionDidChange:(id)arg1;
- (void)playerDidStopPlaying:(id)arg1;
- (void)currentTrackDidChangeInfos:(id)arg1;
- (void)didUpdateTrackCover:(id)arg1;
- (void)playerDidChangeTrack:(id)arg1;
- (void)updateControlsForPlayable:(id)arg1 inCollection:(id)arg2;
- (void)trackControllerFailed:(id)arg1;
- (void)trackControllerDidFinishPlayback:(id)arg1;
- (void)trackControllerDidStartPlayback:(id)arg1;
- (void)trackControllerDidPausePlayback:(id)arg1;
- (void)trackControllerIsReadyToStart:(id)arg1;
- (void)trackControllerWillOpen:(id)arg1;
- (void)trackControllerWasReset:(id)arg1;
- (void)controllerDidChangeElapsedTime:(id)arg1;
- (void)controllerDidChangeAvailableTime:(id)arg1;
- (void)controllerDidChangeTotalTime:(id)arg1;
- (void)startObservingPlayback;
- (void)updateProgressSliderButton;
- (void)updateShuffleButton;
- (void)updateRepeatButton;
- (void)activatePlayButton;
- (void)activatePauseButton;
- (void)manageButtonStates;
- (void)customizeControlsWithRadio:(id)arg1;
- (void)updateRepeatShuffleAndJumpButtonsWithCollection:(id)arg1;
- (void)updatePlayerFeedbackActiveState;
- (void)updateVolumeViewSlider:(double)arg1;
- (void)durationLabelTapped:(id)arg1;
- (void)repeatTapped:(id)arg1;
- (void)shuffleTapped:(id)arg1;
- (void)jumpForwardTapped:(id)arg1;
- (void)jumpBackTapped:(id)arg1;
- (void)changePlayProgress:(float)arg1;
- (void)skipCurrentTrack;
- (void)nextTapped:(id)arg1;
- (void)previousTapped:(id)arg1;
- (void)playTapped:(id)arg1;
- (void)queueListButtonTapped:(id)arg1;
- (void)audioButtonTapped:(id)arg1;
- (void)displaySubscriptionMessage:(id)arg1 listeningOrigin:(unsigned long long)arg2;
- (void)displayAudioSettings;
- (void)updateQueueListButton;
- (void)hideQueueList;
- (void)displayQueueList;
- (_Bool)hasQueuedCollection;
- (void)resizeNavigationBar;
- (void)displayNavigationBar;
- (void)hideNavigationBar;
- (void)toggleDurationDisplayMode;
- (void)sliderValueDidChange:(id)arg1 event:(id)arg2;
- (void)sliderValueWillChange:(id)arg1 event:(id)arg2;
- (void)refreshTimeInfos;
- (void)sliderValueChanged:(id)arg1 event:(id)arg2;
- (void)setProgressRate:(double)arg1 elapsedTime:(double)arg2;
- (void)setBufferProgress:(double)arg1;
- (void)enableProgressSlider;
- (void)disableProgressSlider;
- (void)resetProgress;
- (void)reloadLyrics;
- (void)updateConstrainsForLyrics;
- (void)hideLyrics;
- (void)displayLyrics;
- (_Bool)canStartUserFlow:(id *)arg1;
- (void)updateElapsedTimeLabel;
- (void)updateOverlayView;
- (_Bool)hasPlayerError;
- (void)presentError:(id)arg1;
@property(nonatomic, getter=isPlayerLoading) _Bool playerLoading; // @synthesize playerLoading=_playerLoading;
- (void)checkLoading;
@property(nonatomic, getter=isPlayerEmpty) _Bool playerEmpty; // @synthesize playerEmpty=_playerEmpty;
- (void)scrollToTop;
- (void)reset;
- (void)didTapTitleView;
- (_Bool)isInFreeMode;
- (_Bool)shouldEnableTitleViewAction;
- (double)titleFontSize;
- (void)removeConstraint:(id)arg1 fromView:(id)arg2;
- (void)addConstraint:(id)arg1 toView:(id)arg2;
- (void)updateQueueListButtonVisibility;
- (void)updateLayoutForCurrentInterfaceOrientation;
- (long long)interfaceOrientationForLayout;
- (void)updateViewConstraints;
- (void)initializeViewConstraints;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)applicationDidBecomeActive;
- (void)didTapClose:(id)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

