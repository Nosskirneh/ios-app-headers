//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "DeezerRadio.h"

#import "DZRDeeplinkableObject-Protocol.h"
#import "DZRItemCellAdditions-Protocol.h"
#import "DZRItemPeekable-Protocol.h"
#import "DZRItemViewPeeking-Protocol.h"
#import "DZRItemWithViewControllerPoping-Protocol.h"
#import "DZRLibraryItemTableViewDisplayDelegate-Protocol.h"
#import "DZRLibraryObject-Protocol.h"
#import "DZRLoggableQueueableCollection-Protocol.h"
#import "DZRNavigableObject-Protocol.h"
#import "DZRProfileDynamicItem-Protocol.h"
#import "DeezerBrowsable-Protocol.h"
#import "NSCoding-Protocol.h"

@class DZRMixQueuer, DeezerTrack, NSArray, NSDate, NSDictionary, NSString;
@protocol DZRErrorPresenter, DZRMixTrackFetcher;

@interface DZRMix : DeezerRadio <DZRItemCellAdditions, DZRLibraryObject, DZRProfileDynamicItem, DZRNavigableObject, DZRLibraryItemTableViewDisplayDelegate, DZRLoggableQueueableCollection, DZRItemPeekable, DZRItemViewPeeking, DZRItemWithViewControllerPoping, NSCoding, DeezerBrowsable, DZRDeeplinkableObject>
{
    unsigned long long _numberOfTracksToFetch;
    NSArray *_contextDetail;
    long long _contentType;
    NSString *_addToFavoriteDateString;
    NSDate *_addToFavoriteDate;
    NSArray *_tags;
    unsigned long long _listeningOrigin;
    DeezerTrack *_startingTrack;
    NSArray *_genres;
    long long _userRank;
    long long _globalRank;
    NSArray *_tracksInMix;
    NSArray *_artistsInMix;
    NSDictionary *_cachedSortableProperty;
    DZRMixQueuer *_queuer;
    id <DZRMixTrackFetcher> _trackFetcher;
    id <DZRErrorPresenter> _errorPresenter;
    NSArray *_prefetchedTracks;
}

+ (void)initialize;
+ (void)registerToTableView:(id)arg1;
@property(retain, nonatomic) NSArray *prefetchedTracks; // @synthesize prefetchedTracks=_prefetchedTracks;
@property(retain, nonatomic) id <DZRErrorPresenter> errorPresenter; // @synthesize errorPresenter=_errorPresenter;
@property(retain, nonatomic) id <DZRMixTrackFetcher> trackFetcher; // @synthesize trackFetcher=_trackFetcher;
@property(retain, nonatomic) DZRMixQueuer *queuer; // @synthesize queuer=_queuer;
@property(retain, nonatomic) NSDictionary *cachedSortableProperty; // @synthesize cachedSortableProperty=_cachedSortableProperty;
@property(retain, nonatomic) NSArray *artistsInMix; // @synthesize artistsInMix=_artistsInMix;
@property(retain, nonatomic) NSArray *tracksInMix; // @synthesize tracksInMix=_tracksInMix;
@property(nonatomic) long long globalRank; // @synthesize globalRank=_globalRank;
@property(nonatomic) long long userRank; // @synthesize userRank=_userRank;
@property(retain, nonatomic) NSArray *genres; // @synthesize genres=_genres;
@property(retain, nonatomic) DeezerTrack *startingTrack; // @synthesize startingTrack=_startingTrack;
@property(nonatomic) unsigned long long listeningOrigin; // @synthesize listeningOrigin=_listeningOrigin;
@property(retain, nonatomic) NSArray *tags; // @synthesize tags=_tags;
@property(retain, nonatomic) NSDate *addToFavoriteDate; // @synthesize addToFavoriteDate=_addToFavoriteDate;
@property(retain, nonatomic) NSString *addToFavoriteDateString; // @synthesize addToFavoriteDateString=_addToFavoriteDateString;
@property(nonatomic) long long contentType; // @synthesize contentType=_contentType;
@property(retain, nonatomic) NSArray *contextDetail; // @synthesize contextDetail=_contextDetail;
@property(nonatomic) unsigned long long numberOfTracksToFetch; // @synthesize numberOfTracksToFetch=_numberOfTracksToFetch;
- (void).cxx_destruct;
@property(readonly, copy) NSString *debugDescription;
- (id)sortableProperties;
- (_Bool)repeatIsAllowed;
- (_Bool)playerIsAllowedToDisplayNextTracks;
- (_Bool)isFlowMode;
- (_Bool)isCurrentUserFlow;
- (_Bool)isUserFlow;
- (_Bool)isTopChartsMix;
- (_Bool)isMixForCollection:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)deeplink;
- (void)failToStartPlayingMix;
- (void)updateContentTypeForListenginOrigin:(unsigned long long)arg1;
- (_Bool)startPlayingWithListeningContext:(id)arg1;
- (_Bool)shouldSkipWhenContentNotAvailableInOffline;
- (_Bool)isQueueListEditable;
- (_Bool)canBeQueued;
@property(readonly, nonatomic, getter=isMixPageDataLoaded) _Bool mixPageDataLoaded;
- (void)downloadTracks;
- (void)downloadTracksForExternalPlayerWithLimit:(unsigned long long)arg1;
- (void)setTracks:(id)arg1;
- (id)tracks;
- (void)loadPrefetchedTracks:(id)arg1;
- (id)dedicatedQueuer;
- (id)creator;
- (id)extraInfos;
- (id)illustration;
- (id)defaultDisplayType;
- (unsigned long long)collectionType;
- (id)displayType;
- (void)checkName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initMyMusicShuffleMixWithUser:(id)arg1;
- (id)initOfflineMixWithUser:(id)arg1;
- (id)initWithContextID:(id)arg1 startingTrack:(id)arg2 mixName:(id)arg3 mixCoverMD5:(id)arg4;
- (id)initWithContextID:(id)arg1 startingTrack:(id)arg2 mixName:(id)arg3;
- (id)initWithFriend:(id)arg1;
- (id)initWithUser:(id)arg1;
- (id)init;
- (id)initWithIdentifier:(id)arg1 mixName:(id)arg2 trackFetcher:(id)arg3 contentType:(long long)arg4 errorPresenter:(id)arg5;
- (id)defaultMessageForContext:(unsigned long long)arg1;
- (id)remoteMessageForContext:(unsigned long long)arg1;
- (id)subscribeMessageForContext:(unsigned long long)arg1;
- (long long)listeningState;
- (unsigned long long)dzrSearchResultsDirectPlayListeningOrigin;
- (void)removeFromLibraryInContext:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)addToLibraryInContext:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)recentlyPlayedItemInSection:(id)arg1 atIndex:(long long)arg2;
- (void)navigateFromViewController:(id)arg1;
- (_Bool)isNavigationAvailable;
- (void)playbackQueuer:(id)arg1 didPerfomForwardSelection:(id)arg2;
- (_Bool)canSkipFlowFrom:(id)arg1 to:(id)arg2;
- (_Bool)playbackQueuer:(id)arg1 canPerfomForwardSelection:(id)arg2;
- (_Bool)playbackQueuerIsAllowedToSkipForward:(id)arg1;
- (long long)dzrDynamicPageInformationContextMenuItemType;
- (unsigned long long)dzrDynamicPageInformationlisteningContextOrigin;
- (id)mixTypeString;
- (id)cellForTableView:(id)arg1 forIndexPath:(id)arg2 withStyle:(unsigned long long)arg3 delegate:(id)arg4;
- (long long)playlogListeningType;
- (id)dzrSuggestLogID;
- (unsigned long long)dzrSuggestDirectPlayListeningOrigin;
- (long long)dzrSuggestGetSearchResultType;
- (long long)dzrSuggestGetContextMenuType;
- (void)dzrSuggestCellTouchedAtIndexPath:(id)arg1 forController:(id)arg2;
- (id)dzrSuggestCellForController:(id)arg1 forIndexPath:(id)arg2 withStyle:(unsigned long long)arg3;
- (id)dzrGenreSorting;
- (id)dzrGlobalRankSorting;
- (id)dzrUserRankSorting;
- (void)updateContentTypeWithCastRemoteCollectionType:(long long)arg1;
- (long long)illustratonDisplayMode;
- (id)detailLabelString;
- (_Bool)isPlayButtonShown;
- (void)goToRelatedViewController;
- (id)peekViewControllerWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

