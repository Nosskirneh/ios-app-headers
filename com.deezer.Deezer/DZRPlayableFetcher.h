//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DeezerLiveRadio, NSArray, NSCache, NSMutableArray, NSMutableDictionary, NSString;
@protocol DZRPlayableFetcherDelegate, OS_dispatch_queue;

@interface DZRPlayableFetcher : NSObject
{
    NSArray *_queueList;
    id <DZRPlayableFetcherDelegate> _delegate;
    NSMutableArray *_trackIDsToFetch;
    NSMutableArray *_talkIDsToFetch;
    NSString *_liveRadioIDToFetch;
    NSMutableArray *_tracksFetched;
    NSMutableArray *_talksFetched;
    DeezerLiveRadio *_liveRadioFetched;
    NSCache *_playablesCache;
    NSObject<OS_dispatch_queue> *_workingQueue;
    NSMutableDictionary *_playablesRequestsDictionary;
}

@property(retain, nonatomic) NSMutableDictionary *playablesRequestsDictionary; // @synthesize playablesRequestsDictionary=_playablesRequestsDictionary;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workingQueue; // @synthesize workingQueue=_workingQueue;
@property(retain, nonatomic) NSCache *playablesCache; // @synthesize playablesCache=_playablesCache;
@property(retain, nonatomic) DeezerLiveRadio *liveRadioFetched; // @synthesize liveRadioFetched=_liveRadioFetched;
@property(retain, nonatomic) NSMutableArray *talksFetched; // @synthesize talksFetched=_talksFetched;
@property(retain, nonatomic) NSMutableArray *tracksFetched; // @synthesize tracksFetched=_tracksFetched;
@property(retain, nonatomic) NSString *liveRadioIDToFetch; // @synthesize liveRadioIDToFetch=_liveRadioIDToFetch;
@property(retain, nonatomic) NSMutableArray *talkIDsToFetch; // @synthesize talkIDsToFetch=_talkIDsToFetch;
@property(retain, nonatomic) NSMutableArray *trackIDsToFetch; // @synthesize trackIDsToFetch=_trackIDsToFetch;
@property(nonatomic) __weak id <DZRPlayableFetcherDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *queueList; // @synthesize queueList=_queueList;
- (void).cxx_destruct;
- (id)dzrPlayableFetcherError;
- (void)liveRadioIsFetched:(id)arg1;
- (void)fetchLiveRadioIDToFetch:(id)arg1;
- (void)fetchPlayables:(id)arg1 playableType:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)cancelPlayableRequests:(id)arg1;
- (void)reorderQueueList:(id)arg1 tracks:(id)arg2 talks:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)makeDataBuckets:(id)arg1;
- (void)dispatchPlayableIDsByTypeForQueueList:(id)arg1;
- (void)fetchData;
- (id)domainFromPlayableType:(id)arg1;
- (id)uniqueIDWithPlayableID:(id)arg1 playableType:(id)arg2;
- (id)initWithQueueList:(id)arg1 delegate:(id)arg2;

@end

