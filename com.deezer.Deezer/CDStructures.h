//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSObject, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AQBufferParameters {
    unsigned int bufferSize;
    unsigned int packetCount;
};

struct AQBufferState {
    struct AudioQueueBuffer *bufferRef;
    struct AudioTimeStamp timestamp;
    _Bool enqueued;
};

struct AVConnectionType;

struct AVPlayerState;

struct Allocator<capu::GenericListNode<EtchRuntimeListener *>>;

struct Allocator<capu::GenericListNode<const EtchObjectType *>>;

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioSeeker;

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct BMWRemotingClientFactory {
    CDUnknownFunctionPointerType *_field1;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct Comparator;

struct ConsoleLogAppender {
    CDUnknownFunctionPointerType *_field1;
    struct Mutex _field2;
};

struct CoreAudioDecoder {
    int mState;
    _Bool mIsCancelled;
    struct ProtectedFile *mDecodingFile;
    NSObject *mDecodingQueue;
    _Bool mShouldTrimLeadingSilentFrames;
    struct OpaqueAudioFileID *mAudioFile;
    struct OpaqueExtAudioFile *mExtAudioFile;
    struct OpaqueAudioConverter *mAudioConverter;
    struct AudioBufferList *mDecodingBufferList;
    struct AudioStreamBasicDescription mSrcFormat;
    struct AudioStreamBasicDescription mDstFormat;
    unsigned int mAudioFileType;
    struct AudioSeeker *mSeeker;
    float mDecodingRate;
    long long mCurrentFramePosition;
    float decodingToSourceResamplingRate;
    float sourceToDecodingResamplingRate;
};

struct DDListNode {
    void *_field1;
    struct DDListNode *_field2;
    struct DDListNode *_field3;
};

struct DSPSplitComplex {
    float *realp;
    float *imagp;
};

struct DZRDynamicPageSectionMargin {
    double withTitle;
    double withoutTitle;
};

struct DZRFFT {
    float _field1[64];
    int _field2;
};

struct EnvelopeDetector {
    float coef_;
    float ms;
};

struct EtchAsyncResult<EtchBool>;

struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>;

struct EtchAsyncResult<EtchInt32>;

struct EtchAsyncResult<EtchNativeArray<signed char>>;

struct EtchAsyncResult<EtchObject>;

struct EtchAsyncResult<EtchString>;

struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>;

struct EtchAsyncResultNone;

struct EtchBool;

struct EtchByte;

struct EtchComparator<EtchString>;

struct EtchDeliveryService;

struct EtchException;

struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    struct HashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> _field3;
};

struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>;

struct EtchInt32 {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    int _field3;
};

struct EtchLogger {
    CDUnknownFunctionPointerType *_field1;
    struct HashSet<capu::LogContext *, capu::Comparator, capu::CapuDefaultHashFunction> _field2;
    struct HashSet<capu::ILogAppender *, capu::Comparator, capu::CapuDefaultHashFunction> _field3;
    struct LogContext *_field4;
    struct LogContext *_field5;
    struct LogContext *_field6;
    struct LogContext *_field7;
    struct LogContext *_field8;
    struct LogContext *_field9;
    struct LogContext *_field10;
    struct LogContext *_field11;
};

struct EtchNativeArray<capu::SmartPointer<EtchObject>>;

struct EtchNativeArray<signed char>;

struct EtchObject;

struct EtchObjectType;

struct EtchResources {
    struct EtchResources *_field1;
    struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> _field2;
};

struct EtchRuntime {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct EtchLogger _field3;
    struct ConsoleLogAppender _field4;
    unsigned long long _field5;
    struct Mutex _field6;
    struct List<EtchRuntimeListener *, capu::Allocator<capu::GenericListNode<EtchRuntimeListener *>>, capu::Comparator> _field7;
};

struct EtchRuntimeListener;

struct EtchShort;

struct EtchStack;

struct EtchString {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    char *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct EtchValueFactory;

struct FBAdDeviceBatteryInfo {
    long long _field1;
    double _field2;
};

struct FBAdSize {
    struct CGSize size;
};

struct FBAdStarRating {
    double value;
    long long scale;
};

struct FBAspectRatioInfo {
    struct CGSize _field1;
    struct CGSize _field2;
};

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FNFFrameMetadata {
    unsigned int _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    CDStruct_1b6d18a9 _field4;
    unsigned int _field5;
};

struct FNFMP4MoovAtomCompressed {
    struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> trakAtoms;
    struct FNFMP4MvhdAtom mvhdAtom;
};

struct FNFMP4MvhdAtom {
    unsigned int timescale;
    unsigned int duration;
};

struct FNFMP4TrakAtomForSeek;

struct FNFPlayerState {
    _Bool playingRequested;
    _Bool isPlaying;
    _Bool isStalled;
    _Bool endTimeReached;
    _Bool firstAudioFrameEnqueued;
    _Bool stoppedEnqueuingVideo;
    _Bool stoppedEnqueuingAudio;
    _Bool isFirstVideoFrame;
    _Bool recreatedLayerOnError;
    _Bool audioEngineInitialized;
    CDStruct_1b6d18a9 lastStartingTime;
    CDStruct_1b6d18a9 lastRequestedStartTime;
    CDStruct_1b6d18a9 latestEnqueuedVideoPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioDts;
    id playbackTimeObserverForAsset;
    id durationTimerForAsset;
    id stallTimerObserver;
    id seekFrameUpdateObserver;
    id sampleBufferFlushTimerObserver;
    id levelMeterTimerObserver;
    CDStruct_1b6d18a9 backgroundPauseTime;
    unsigned int sampleAudioFrameSize;
    NSString *representationId;
    unsigned long long lastFrameSeekAttempt;
};

struct FNFSeekStatus {
    _Bool _field1;
    CDStruct_1b6d18a9 _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct GenericListNode<EtchRuntimeListener *> {
    struct EtchRuntimeListener *_field1;
    struct GenericListNode<EtchRuntimeListener *> *_field2;
    struct GenericListNode<EtchRuntimeListener *> *_field3;
};

struct GenericListNode<const EtchObjectType *> {
    struct EtchObjectType *_field1;
    struct GenericListNode<const EtchObjectType *> *_field2;
    struct GenericListNode<const EtchObjectType *> *_field3;
};

struct HashSet<capu::ILogAppender *, capu::Comparator, capu::CapuDefaultHashFunction> {
    struct HashTable<capu::ILogAppender *, char, capu::Comparator, capu::CapuDefaultHashFunction> _field1;
};

struct HashSet<capu::LogContext *, capu::Comparator, capu::CapuDefaultHashFunction> {
    struct HashTable<capu::LogContext *, char, capu::Comparator, capu::CapuDefaultHashFunction> _field1;
};

struct HashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned long long _field9;
    _Bool _field10;
    struct EtchComparator<EtchString> _field11;
};

struct HashTable<capu::ILogAppender *, char, capu::Comparator, capu::CapuDefaultHashFunction> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned long long _field9;
    _Bool _field10;
    struct Comparator _field11;
};

struct HashTable<capu::LogContext *, char, capu::Comparator, capu::CapuDefaultHashFunction> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned long long _field9;
    _Bool _field10;
    struct Comparator _field11;
};

struct HashTableEntry;

struct IDEtchSessionCppAdaptor {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct List<EtchRuntimeListener *, capu::Allocator<capu::GenericListNode<EtchRuntimeListener *>>, capu::Comparator> {
    CDUnknownFunctionPointerType *_field1;
    struct GenericListNode<EtchRuntimeListener *> _field2;
    unsigned long long _field3;
    struct Comparator _field4;
    struct Allocator<capu::GenericListNode<EtchRuntimeListener *>> _field5;
};

struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> {
    CDUnknownFunctionPointerType *_field1;
    struct GenericListNode<const EtchObjectType *> _field2;
    unsigned long long _field3;
    struct Comparator _field4;
    struct Allocator<capu::GenericListNode<const EtchObjectType *>> _field5;
};

struct LogContext;

struct LogLevel;

struct MapMode;

struct MovingViewInformations {
    struct CGRect _field1;
    double _field2;
};

struct Mutex {
    struct _opaque_pthread_mutex_t _field1;
    struct _opaque_pthread_mutexattr_t {
        long long _field1;
        char _field2[8];
    } _field2;
};

struct NSDictionary {
    Class _field1;
};

struct NSMapTable {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct OpaqueAudioComponentInstance;

struct OpaqueAudioConverter;

struct OpaqueAudioFileID;

struct OpaqueExtAudioFile;

struct ProtectedFile {
    int _field1;
    void *_field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    void *_field7;
    struct *_field8;
    int _field9;
};

struct RHMIMetaData;

struct RHMIResourceType;

struct RHMIVersion;

struct RemoteBMWRemotingServer {
    CDUnknownFunctionPointerType *_field1;
    struct EtchRuntime *_field2;
    struct EtchDeliveryService *_field3;
    struct EtchValueFactory *_field4;
    struct EtchStack *_field5;
    CDUnknownFunctionPointerType *_field6;
    struct EtchInt32 _field7;
    struct EtchInt32 _field8;
    struct EtchRuntime *_field9;
    CDUnknownFunctionPointerType *_field10;
    CDUnknownFunctionPointerType *_field11;
    struct EtchInt32 _field12;
    struct EtchInt32 _field13;
};

struct SCNVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct SRDelegateAvailableMethods {
    _Bool didReceiveMessage;
    _Bool didReceiveMessageWithString;
    _Bool didReceiveMessageWithData;
    _Bool didOpen;
    _Bool didFailWithError;
    _Bool didCloseWithCode;
    _Bool didReceivePing;
    _Bool didReceivePong;
    _Bool shouldConvertTextFrameToString;
};

struct SimpleCompRms {
    struct EnvelopeDetector att_;
    struct EnvelopeDetector rel_;
    float threshdB;
    float ratio;
    float _rms[2048];
    float _envelopeDB[2048];
    float _gainReduction[2048];
    float envdB_;
    struct EnvelopeDetector ave_;
    float aveOfSqrs_;
};

struct SmartPointer<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>> {
    struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchBool> {
    struct EtchBool *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchByte> {
    struct EtchByte *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchException> {
    struct EtchException *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> {
    struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchInt32> {
    struct EtchInt32 *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchNativeArray<capu::SmartPointer<EtchObject>>> {
    struct EtchNativeArray<capu::SmartPointer<EtchObject>> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchObject> {
    struct EtchObject *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchShort> {
    struct EtchShort *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchString> {
    struct EtchString *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    unsigned long long *_field2;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct VersionInfo;

struct VoicePriorityType;

struct WebPData {
    char *_field1;
    unsigned long long _field2;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct _ABKPushStoryImageLink {
    char *_field1;
    char *_field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __audio_level_monitor_t {
    _Bool monitoringEnabled;
    double meanAccumulator;
    int meanBlockCount;
    float peak;
    float average;
    void *floatConverter;
    struct AudioBufferList *scratchBuffer;
    int channels;
    _Bool reset;
};

struct __callback_table_t {
    int count;
    struct __callback_t {
        void *callback;
        void *userInfo;
        unsigned char flags;
    } callbacks[15];
};

struct __channel_t {
    int _field1;
    void *_field2;
    void *_field3;
    struct _channel_group_t *_field4;
    _Bool _field5;
    float _field6;
    float _field7;
    _Bool _field8;
    struct AudioStreamBasicDescription _field9;
    struct __callback_table_t _field10;
    struct AudioTimeStamp _field11;
    _Bool _field12;
    void *_field13;
    void *_field14;
    void *_field15;
    struct AudioBufferList *_field16;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _channel_group_t {
    struct __channel_t *_field1;
    int _field2;
    struct OpaqueAudioComponentInstance *_field3;
    struct __channel_t *_field4[100];
    int _field5;
    int _field6;
    struct OpaqueAudioComponentInstance *_field7;
    struct __audio_level_monitor_t _field8;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _schedule_t {
    void *block;
    void *responseBlock;
    unsigned long long time;
    int context;
    void *identifier;
};

struct _xmlDoc;

struct _xmlHashTable;

struct _xmlNode;

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlValidState;

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct map<FBDataSegment, NSData *, cmpOfDataSegment, std::__1::allocator<std::__1::pair<const FBDataSegment, NSData *>>> {
    struct __tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
    struct FNFMP4TrakAtomForSeek *__begin_;
    struct FNFMP4TrakAtomForSeek *__end_;
    struct __compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
        struct FNFMP4TrakAtomForSeek *__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
} CDStruct_2fd9fc7b;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool _field1;
} CDStruct_b31ca263;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    float _field1[30];
    float _field2[30];
    float _field3[30];
    unsigned short _field4;
} CDStruct_8587e252;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    void *buffer;
    int length;
    int tail;
    int head;
    int fillCount;
} CDStruct_326dc85f;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    _Bool _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
} CDStruct_4bf883ae;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

// Template types
typedef struct SmartPointer<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    unsigned long long *_field2;
} SmartPointer_40b79cb6;

typedef struct SmartPointer<EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>> {
    struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> *_field1;
    unsigned long long *_field2;
} SmartPointer_7c4c2294;

typedef struct SmartPointer<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    unsigned long long *_field2;
} SmartPointer_9c6f0a57;

typedef struct SmartPointer<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    unsigned long long *_field2;
} SmartPointer_22dd72f2;

typedef struct SmartPointer<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    unsigned long long *_field2;
} SmartPointer_24816b3b;

typedef struct SmartPointer<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    unsigned long long *_field2;
} SmartPointer_f678d524;

typedef struct SmartPointer<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    unsigned long long *_field2;
} SmartPointer_68208fab;

typedef struct SmartPointer<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    unsigned long long *_field2;
} SmartPointer_a510579c;

typedef struct SmartPointer<EtchBool> {
    struct EtchBool *_field1;
    unsigned long long *_field2;
} SmartPointer_56a342d9;

typedef struct SmartPointer<EtchByte> {
    struct EtchByte *_field1;
    unsigned long long *_field2;
} SmartPointer_7914d76a;

typedef struct SmartPointer<EtchException> {
    struct EtchException *_field1;
    unsigned long long *_field2;
} SmartPointer_36f90cf0;

typedef struct SmartPointer<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> {
    struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash> *_field1;
    unsigned long long *_field2;
} SmartPointer_0ac90d3f;

typedef struct SmartPointer<EtchInt32> {
    struct EtchInt32 *_field1;
    unsigned long long *_field2;
} SmartPointer_25c440db;

typedef struct SmartPointer<EtchNativeArray<capu::SmartPointer<EtchObject>>> {
    struct EtchNativeArray<capu::SmartPointer<EtchObject>> *_field1;
    unsigned long long *_field2;
} SmartPointer_c35a0fc3;

typedef struct SmartPointer<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    unsigned long long *_field2;
} SmartPointer_4c5e170f;

typedef struct SmartPointer<EtchObject> {
    struct EtchObject *_field1;
    unsigned long long *_field2;
} SmartPointer_65720f25;

typedef struct SmartPointer<EtchShort> {
    struct EtchShort *_field1;
    unsigned long long *_field2;
} SmartPointer_ba4b74eb;

typedef struct SmartPointer<EtchString> {
    struct EtchString *_field1;
    unsigned long long *_field2;
} SmartPointer_f5ebf141;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    unsigned long long *_field2;
} SmartPointer_3c0c000b;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    unsigned long long *_field2;
} SmartPointer_ae5953d7;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    unsigned long long *_field2;
} SmartPointer_20a53774;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    unsigned long long *_field2;
} SmartPointer_1deffe67;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    unsigned long long *_field2;
} SmartPointer_ecc263ad;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    unsigned long long *_field2;
} SmartPointer_8c758832;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    unsigned long long *_field2;
} SmartPointer_0a136723;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    unsigned long long *_field2;
} SmartPointer_ae2b53a9;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    unsigned long long *_field2;
} SmartPointer_d9d1298e;

