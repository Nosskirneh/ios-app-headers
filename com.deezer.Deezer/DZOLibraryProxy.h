//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DZOLibrarySearch, NSMutableDictionary, NSMutableSet;

@interface DZOLibraryProxy : NSObject
{
    NSMutableDictionary *_detailsFetchCallbacks;
    NSMutableSet *_pendingRequests;
    NSMutableSet *_pendingAlbumsSearchRequests;
    NSMutableSet *_pendingArtistsSearchRequests;
    NSMutableSet *_pendingTracksSearchRequests;
    DZOLibrarySearch *_currentSearch;
}

+ (id)mappedClassesByClassNames;
+ (id)sharedLibraryProxy;
+ (id)workingQueue;
@property(retain, nonatomic) DZOLibrarySearch *currentSearch; // @synthesize currentSearch=_currentSearch;
@property(retain, nonatomic) NSMutableSet *pendingTracksSearchRequests; // @synthesize pendingTracksSearchRequests=_pendingTracksSearchRequests;
@property(retain, nonatomic) NSMutableSet *pendingArtistsSearchRequests; // @synthesize pendingArtistsSearchRequests=_pendingArtistsSearchRequests;
@property(retain, nonatomic) NSMutableSet *pendingAlbumsSearchRequests; // @synthesize pendingAlbumsSearchRequests=_pendingAlbumsSearchRequests;
@property(retain, nonatomic) NSMutableSet *pendingRequests; // @synthesize pendingRequests=_pendingRequests;
@property(retain, nonatomic) NSMutableDictionary *detailsFetchCallbacks; // @synthesize detailsFetchCallbacks=_detailsFetchCallbacks;
- (void).cxx_destruct;
- (void)searchWithString:(id)arg1 fetchingBlocks:(id)arg2 maximumCountOfResults:(unsigned long long)arg3 shouldReturnOpenObjects:(_Bool)arg4;
- (void)searchWithString:(id)arg1 fetchingBlocks:(id)arg2;
- (_Bool)objectCanBePlayedOffline:(id)arg1;
- (_Bool)playlistCanBePlayedOffline:(id)arg1;
- (_Bool)albumCanBePlayedOffline:(id)arg1;
- (_Bool)trackIsStoredForOffline:(id)arg1 withCollection:(id)arg2;
- (_Bool)trackCanBePlayed:(id)arg1;
- (_Bool)cancelDownloadOfPictureWithDownloadId:(id)arg1;
- (id)pictureOfOpenObject:(id)arg1 size:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (id)coverURLForOpenObject:(id)arg1 size:(unsigned long long)arg2;
- (id)placeholderPictureOfOpenObject:(id)arg1 size:(unsigned long long)arg2;
- (void)webApplicationWithDeezerId:(id)arg1 callback:(id)arg2;
- (void)songsWithDeezerId:(id)arg1 callback:(id)arg2;
- (void)songWithDeezerId:(id)arg1 callback:(id)arg2;
- (void)radioWithDeezerId:(id)arg1 callback:(id)arg2;
- (void)artistWithDeezerId:(id)arg1 callback:(id)arg2;
- (void)playlistWithDeezerId:(id)arg1 callback:(id)arg2;
- (void)albumWithDeezerId:(id)arg1 callback:(id)arg2;
- (void)fetchWithBlock:(CDUnknownBlockType)arg1 objectWithNotificationName:(id)arg2 callback:(id)arg3;
- (void)someObjectDetailsReceived:(id)arg1 withError:(id)arg2 callback:(id)arg3;
- (void)someObjectDetailsReceived:(id)arg1;
- (void)favoriteWebApplicationsOfCurrentUserWithCallback:(id)arg1;
- (void)followingsOfCurrentUserWithCallback:(id)arg1;
- (void)uploadedTracksOfCurrentUser:(CDUnknownBlockType)arg1;
- (void)purchasedTracksOfCurrentUser:(CDUnknownBlockType)arg1;
- (void)tracksOfAlbum:(id)arg1 callback:(id)arg2;
- (void)tracksOfAlbum:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)tracksOfPlaylist:(id)arg1 callback:(id)arg2;
- (void)tracksOfPlaylist:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)completeAlbumsOfArtist:(id)arg1 callback:(id)arg2;
- (void)albumsWithSelectionsGenres:(id)arg1 callback:(id)arg2;
- (void)albumsWithReleasesGenres:(id)arg1 callback:(id)arg2;
- (void)whatsHotGenresWithCallback:(id)arg1;
- (id)smartRadioOfArtist:(id)arg1;
- (void)favoriteArtistsWithSmartRadioOfCurrentUserWithCallback:(id)arg1;
- (void)favoriteRadiosOfCurrentUserWithCallback:(id)arg1;
- (void)favoriteRadiosOfCurrentUser:(CDUnknownBlockType)arg1;
- (void)radioCategoriesOfCurrentUserWithCallback:(id)arg1;
- (void)radioCategoriesOfCurrentUser:(CDUnknownBlockType)arg1;
- (void)radiosOfCategory:(id)arg1 callback:(id)arg2;
- (void)radiosOfCategory:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)friendsPlaylistsOfCurrentUserWithCallback:(id)arg1;
- (void)allPlaylistsOfCurrentUserWithCallback:(id)arg1;
- (void)friendsPlaylistsOfCurrentUser:(CDUnknownBlockType)arg1;
- (void)playlistsOfCurrentUserWithCallback:(id)arg1;
- (void)playlistsOfCurrentUser:(CDUnknownBlockType)arg1;
- (void)favoriteAlbumsOfCurrentUserWithCallback:(id)arg1;
- (void)favoriteAlbumsOfCurrentUser:(CDUnknownBlockType)arg1;
- (void)favoriteArtistsOfCurrentUserWithCallback:(id)arg1;
- (void)favoriteArtistsOfCurrentUser:(CDUnknownBlockType)arg1;
- (void)launchRequestOnKeyPathOfCurrentUser:(id)arg1 callback:(id)arg2;
- (void)launchRequestOnKeyPathOfCurrentUser:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)launchRequestOnKeyPath:(id)arg1 ofApplicationObject:(id)arg2 callback:(id)arg3;
- (void)launchRequestOnKeyPath:(id)arg1 ofApplicationObject:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)mapOpenObject:(id)arg1 withApplicationObject:(id)arg2;
- (void)mapApplicationObject:(id)arg1 withOpenObject:(id)arg2;

@end

