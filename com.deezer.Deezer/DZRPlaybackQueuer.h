//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DZRMusicLibrarySynchronizerObserver-Protocol.h"

@class NSArray, NSMutableDictionary, NSOperationQueue, NSSet, NSString;
@protocol DZRQueueableCollection;

@interface DZRPlaybackQueuer : NSObject <DZRMusicLibrarySynchronizerObserver>
{
    _Bool _onHold;
    _Bool _tracksAreShuffled;
    id <DZRQueueableCollection> _queuedCollection;
    long long _repeatMode;
    NSArray *_tracks;
    unsigned long long _currentTrackIndex;
    NSSet *_tracksIdentifiers;
    NSOperationQueue *_operationQueue;
    NSMutableDictionary *_downloadablesByPlayableUniqueIDs;
    unsigned long long _estimatedDurationInFullSeconds;
    NSArray *_supportedRepeatModes;
}

@property(retain, nonatomic) NSArray *supportedRepeatModes; // @synthesize supportedRepeatModes=_supportedRepeatModes;
@property(nonatomic) unsigned long long estimatedDurationInFullSeconds; // @synthesize estimatedDurationInFullSeconds=_estimatedDurationInFullSeconds;
@property(retain, nonatomic) NSMutableDictionary *downloadablesByPlayableUniqueIDs; // @synthesize downloadablesByPlayableUniqueIDs=_downloadablesByPlayableUniqueIDs;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSSet *tracksIdentifiers; // @synthesize tracksIdentifiers=_tracksIdentifiers;
@property(nonatomic) _Bool tracksAreShuffled; // @synthesize tracksAreShuffled=_tracksAreShuffled;
@property(nonatomic) unsigned long long currentTrackIndex; // @synthesize currentTrackIndex=_currentTrackIndex;
@property(readonly, nonatomic) NSArray *tracks; // @synthesize tracks=_tracks;
@property(nonatomic, getter=isOnHold) _Bool onHold; // @synthesize onHold=_onHold;
@property(nonatomic) long long repeatMode; // @synthesize repeatMode=_repeatMode;
@property(retain, nonatomic) id <DZRQueueableCollection> queuedCollection; // @synthesize queuedCollection=_queuedCollection;
- (void).cxx_destruct;
- (void)synchronizerDidDeletePlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerDidDownloadPlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerDidFailDownloadingPlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerDidProgressWithPlayable:(id)arg1 progress:(float)arg2 collectionID:(id)arg3;
- (void)synchronizerDidCancelDownloadOfPlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerWillDownloadPlayable:(id)arg1 collectionID:(id)arg2;
- (void)synchronizerDidUnregisterAllCollections;
- (void)synchronizerDidUnregisterCollectionForSynchronization:(id)arg1;
- (void)synchronizerDidRegisterCollectionForSynchronization:(id)arg1 availablePlayables:(id)arg2;
- (void)turnOffRepeatCurrentTrack;
- (long long)nextRepeatMode;
- (_Bool)shuffleTracksByIDs:(id)arg1 newCurrentIndex:(unsigned long long)arg2;
- (_Bool)shuffleTracksByIDs:(id)arg1;
- (_Bool)setShuffleInternal:(_Bool)arg1;
- (void)resetShuffleMode;
- (_Bool)setShuffle:(_Bool)arg1;
- (_Bool)isInShuffleMode;
- (long long)repeatCurrentTrackModeBackup;
- (void)selectTrackAtIndexInCurrentTrackList:(unsigned long long)arg1;
- (_Bool)canSelectTrack:(id)arg1;
- (_Bool)canSelectTrackAtIndex:(unsigned long long)arg1;
- (void)resetTrackIndex;
- (void)clearQueue;
- (void)removeTrackAtIndex:(unsigned long long)arg1;
- (void)moveTrackFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)completeQueueingDownloadables:(id)arg1;
- (_Bool)queuePlayableTracks:(id)arg1 fromCollection:(id)arg2 atIndex:(unsigned long long)arg3;
- (_Bool)queueMorePlayableTracks:(id)arg1 fromCollection:(id)arg2 atIndex:(unsigned long long)arg3;
- (_Bool)queueMorePlayableTracks:(id)arg1 fromCollection:(id)arg2;
- (_Bool)queueCollection:(id)arg1;
- (void)overrideQueueListWithPlayables:(id)arg1 shuffledTracksIDs:(id)arg2 currentTrackIndex:(unsigned long long)arg3;
- (void)replacePlayables:(id)arg1 shuffledTracksIDs:(id)arg2 currentTrackIndex:(unsigned long long)arg3;
- (void)overrideQueueListWithPlayables:(id)arg1;
- (void)removePlayableAtIndex:(unsigned long long)arg1;
- (void)movePlayableAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)insertPlayables:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addPlayables:(id)arg1;
- (void)resetTracks;
- (id)playableTracksAmongTracks:(id)arg1;
- (id)originalTracks;
- (id)queuedTracks;
- (id)selectionWithPlayableIndex:(unsigned long long)arg1 change:(id)arg2;
- (id)selectionForPreviousTrackWithOfflineAvailability:(_Bool)arg1 change:(id)arg2;
- (id)selectionForNextTrackWithOfflineAvailability:(_Bool)arg1 change:(id)arg2;
- (id)selectionForFirstAvailableTrackStartingAtIndex:(unsigned long long)arg1 withOfflineAvailability:(_Bool)arg2 change:(id)arg3;
- (unsigned long long)indexOfDownloadableWithOfflineAvailability:(_Bool)arg1 find:(CDUnknownBlockType)arg2 canSelect:(CDUnknownBlockType)arg3;
- (unsigned long long)indexOfFirstAvailableTrackStartingAtIndex:(unsigned long long)arg1 withOfflineAvailability:(_Bool)arg2;
- (unsigned long long)indexOfTrackBeforeIndex:(unsigned long long)arg1 withOfflineAvailability:(_Bool)arg2;
- (unsigned long long)indexOfTrackAfterIndex:(unsigned long long)arg1 withOfflineAvailability:(_Bool)arg2;
- (unsigned long long)indexOfTrackBeforeTrackWithIndex:(unsigned long long)arg1 amongNumberOfTracks:(unsigned long long)arg2 inRepeatMode:(long long)arg3;
- (unsigned long long)indexOfTrackAfterTrackWithIndex:(unsigned long long)arg1 amongNumberOfTracks:(unsigned long long)arg2 inRepeatMode:(long long)arg3;
- (id)downloadableAtTrackIndex:(unsigned long long)arg1;
- (_Bool)trackIsReadyForOfflinePlayback:(id)arg1;
- (id)currentTrack;
- (_Bool)hasCurrentTrack;
- (_Bool)isReady;
- (id)initWithSupportedRepeatModes:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

