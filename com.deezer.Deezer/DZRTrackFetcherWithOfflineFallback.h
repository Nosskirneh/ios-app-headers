//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DZRMixTrackFetcher-Protocol.h"

@class DZRDataProvider, DZRFisherYatesShuffler, DZRMusicLibrarySynchronizer, DZRStreamingCache, DeezerUser, NSArray, NSString;

@interface DZRTrackFetcherWithOfflineFallback : NSObject <DZRMixTrackFetcher>
{
    DeezerUser *_deezerUser;
    DZRMusicLibrarySynchronizer *_synchronizer;
    DZRStreamingCache *_streamingCache;
    DZRFisherYatesShuffler *_shuffler;
    unsigned long long _initialTrackBatchSize;
    unsigned long long _regularTrackBatchSize;
    NSArray *_offlineTracks;
    unsigned long long _offlineTrackIndex;
    NSArray *_onlineTracks;
    unsigned long long _onlineTrackIndex;
    DZRDataProvider *_dataProvider;
}

@property(retain, nonatomic) DZRDataProvider *dataProvider; // @synthesize dataProvider=_dataProvider;
@property(nonatomic) unsigned long long onlineTrackIndex; // @synthesize onlineTrackIndex=_onlineTrackIndex;
@property(retain, nonatomic) NSArray *onlineTracks; // @synthesize onlineTracks=_onlineTracks;
@property(nonatomic) unsigned long long offlineTrackIndex; // @synthesize offlineTrackIndex=_offlineTrackIndex;
@property(retain, nonatomic) NSArray *offlineTracks; // @synthesize offlineTracks=_offlineTracks;
@property(nonatomic) unsigned long long regularTrackBatchSize; // @synthesize regularTrackBatchSize=_regularTrackBatchSize;
@property(nonatomic) unsigned long long initialTrackBatchSize; // @synthesize initialTrackBatchSize=_initialTrackBatchSize;
@property(retain, nonatomic) DZRFisherYatesShuffler *shuffler; // @synthesize shuffler=_shuffler;
@property(retain, nonatomic) DZRStreamingCache *streamingCache; // @synthesize streamingCache=_streamingCache;
@property(retain, nonatomic) DZRMusicLibrarySynchronizer *synchronizer; // @synthesize synchronizer=_synchronizer;
@property(retain, nonatomic) DeezerUser *deezerUser; // @synthesize deezerUser=_deezerUser;
- (void).cxx_destruct;
- (id)fetchTracksFromRemoteForListeningOrigin:(unsigned long long)arg1 contextID:(id)arg2 startingTrackID:(id)arg3 numberOfTracksToFetch:(unsigned long long)arg4 paginatedStartIndex:(unsigned long long)arg5 success:(CDUnknownBlockType)arg6 failure:(CDUnknownBlockType)arg7;
- (_Bool)availableOffline;
- (id)cachedPlayables;
- (id)shuffledOfflinePlayables:(unsigned long long)arg1;
- (id)nextOfflineTrack;
- (id)nextOnlineTrack;
- (id)nextTracksWithOfflineAvailability:(_Bool)arg1 count:(unsigned long long)arg2;
- (void)fetchTracksForListeningOrigin:(unsigned long long)arg1 contextID:(id)arg2 configuration:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)fetchTracksForExternalPlayerAndListeningOrigin:(unsigned long long)arg1 contextID:(id)arg2 configuration:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)initWithSynchronizer:(id)arg1 initialTrackBatchSize:(unsigned long long)arg2 regularTrackBatchSize:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

