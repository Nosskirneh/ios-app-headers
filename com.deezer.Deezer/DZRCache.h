//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DZRCachePolicyDelegate-Protocol.h"

@class DZRCachePolicy, DZRCacheStorage, NSString;
@protocol OS_dispatch_queue;

@interface DZRCache : NSObject <DZRCachePolicyDelegate>
{
    DZRCacheStorage *_storage;
    DZRCachePolicy *_policy;
    NSObject<OS_dispatch_queue> *_workingQueue;
    double _houseKeepingTimeInterval;
}

+ (id)callbacksQueue;
+ (id)defaultCache;
@property(nonatomic) double houseKeepingTimeInterval; // @synthesize houseKeepingTimeInterval=_houseKeepingTimeInterval;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workingQueue; // @synthesize workingQueue=_workingQueue;
@property(retain, nonatomic) DZRCachePolicy *policy; // @synthesize policy=_policy;
@property(retain, nonatomic) DZRCacheStorage *storage; // @synthesize storage=_storage;
- (void).cxx_destruct;
- (void)releaseAccessToContentOfItemWithId:(id)arg1 ofCollectionWithId:(id)arg2 evictionBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
- (_Bool)removeContentOfItemWithId:(id)arg1 error:(id *)arg2;
- (void)forceEvictionOfItemWithId:(id)arg1 ofCollectionWithId:(id)arg2 evictionBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
- (_Bool)removeContentOfAllItemsWithError:(id *)arg1;
- (_Bool)hasSmartCachedPlayable:(id)arg1;
- (id)allSmartCachedPlayables;
- (void)cachePolicy:(id)arg1 hasEvictedItemWithId:(id)arg2;
- (id)archivingFilePathForCachePolicy:(id)arg1;
- (unsigned long long)remainingStorageSpaceForCachePolicy:(id)arg1;
- (unsigned long long)occupiedStorageSpaceForCachePolicy:(id)arg1;
- (_Bool)cachePolicy:(id)arg1 canAssociateContentWithItemWithId:(id)arg2;
- (unsigned long long)cachePolicy:(id)arg1 sizeOfContentForItemWithId:(id)arg2;
- (id)cachableItemIdsRetainedByCollectionWithId:(id)arg1;
- (void)removeAllCachedItemsWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)revertAccessToContentOfItemWithId:(id)arg1 ofCollectionWithId:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)releaseAccessToTemporaryContentOfItemWithId:(id)arg1;
- (void)policyHasEvictedPlayableItem:(id)arg1 itemId:(id)arg2 fromCollectionWithId:(id)arg3;
- (void)releaseAccessToPlayableContent:(id)arg1 itemId:(id)arg2 ofCollectionWithId:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)retainAccessToPlayable:(id)arg1 path:(id)arg2 itemWithId:(id)arg3 collectionWithId:(id)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (id)filePathForContentOfItemWithId:(id)arg1 ofCollectionWithId:(id)arg2;
- (void)canProvideAccessToContentOfItemWithId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)canProvideAccessToContentOfItemWithId:(id)arg1 ofCollectionWithId:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)filePathForTemporaryContentOfItemWithId:(id)arg1;
- (id)collectionIdWithOwner:(id)arg1;
- (void)tryFreeSpaceToStoreContentWithExpectedSize:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (id)diffBetweenArray:(id)arg1 andArray:(id)arg2;
- (void)checkPolicyStateConsistency;
- (void)cleanOrphanContent;
- (void)scheduleHouseKeeping;
- (void)updateMaximumSize:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchStorageDetails:(CDUnknownBlockType)arg1;
- (unsigned long long)freeSpaceThreshold;
- (void)dealloc;
- (id)init;
- (id)complementaryCache;
- (id)storageDomain;
- (Class)policyClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

