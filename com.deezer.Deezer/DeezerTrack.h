//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DZRItemCellAdditions-Protocol.h"
#import "DZRLibraryItemTableViewDisplayDelegate-Protocol.h"
#import "DZRLibraryObject-Protocol.h"
#import "DZRLoggableMedia-Protocol.h"
#import "DZROfflineSearchIndexable-Protocol.h"
#import "DZRPlayableObject-Protocol.h"
#import "DZRShareable-Protocol.h"
#import "DeezerBrowsable-Protocol.h"
#import "DeezerFilterableObject-Protocol.h"
#import "NSCoding-Protocol.h"
#import "_TtP6Deezer15DZRSortableItem_-Protocol.h"

@class DBTrack, DeezerAlbum, DeezerArtist, ImageDownloader, MPMediaItemArtwork, NSArray, NSDate, NSDictionary, NSNumber, NSString, NSURL;

@interface DeezerTrack : NSObject <DZROfflineSearchIndexable, DZRItemCellAdditions, DZRLibraryObject, DZRLoggableMedia, DZRLibraryItemTableViewDisplayDelegate, DZRShareable, _TtP6Deezer15DZRSortableItem_, DeezerBrowsable, DeezerFilterableObject, DZRPlayableObject, NSCoding>
{
    NSString *coverSeed;
    NSURL *coverURL30_30;
    NSURL *coverURL50_50;
    NSURL *coverURL80_80;
    NSURL *coverURL220_220;
    NSURL *coverURL340_340;
    NSURL *coverURL750_750;
    NSURL *coverURL800_800;
    DBTrack *dbTrack;
    NSString *deezerId;
    NSString *uploadId;
    NSString *urlRewriting;
    NSString *albumId;
    NSString *albumName;
    NSString *mediaVersion;
    NSURL *url;
    int type;
    long long duration;
    NSString *md5Origin;
    NSString *isrc;
    NSDate *stream_sub;
    NSDate *stream_ads;
    NSDate *download_alc;
    NSString *userId;
    _Bool isUsableInFreeMode;
    long long diskNumber;
    long long trackNumber;
    unsigned long long fileSize;
    unsigned long long fileSize_MP3_128;
    unsigned long long fileSize_MP3_MISC;
    unsigned long long fileSize_AAC_64;
    _Bool accFormatAvailable;
    NSString *oldDeezerId;
    _Bool _isUnseen;
    _Bool _originatesGetRadioEndpoint;
    NSString *_link;
    NSString *_name;
    NSString *_title;
    NSArray *_artists;
    DeezerArtist *_artist;
    NSString *_artistID;
    NSString *_artistName;
    NSString *_mainArtistName;
    NSString *_albumArtistName;
    long long _displayDuration;
    NSString *_mixDetails;
    NSString *_lyricsID;
    unsigned long long _fileSize_MP3_64;
    NSString *_objectID;
    NSString *_uniqueID;
    unsigned long long _uniqueIDHash;
    NSDate *_dateOfAdditionInPlaylist;
    NSString *_radioGroupID;
    NSDictionary *_radioPayload;
    NSNumber *_topChartsVariation;
    MPMediaItemArtwork *_nowPlayingArtwork;
    NSDictionary *_qualityMapping;
    MPMediaItemArtwork *_nowPlayingPlaceholder;
    ImageDownloader *_nowPlayingArtworkDownloader;
    NSDictionary *_buildingDictionary;
    NSDictionary *_sizesByKeys;
    NSDictionary *_cachedSortableProperty;
}

+ (id)generateMixWithStartingTrack:(id)arg1 listeningContext:(id)arg2 contextDetail:(id)arg3;
+ (_Bool)startPlayingTracks:(id)arg1 withListeningContext:(id)arg2 contextDetail:(id)arg3 startingWithTrackAtIndex:(unsigned long long)arg4 shufflingTrack:(_Bool)arg5;
+ (_Bool)startPlayingTracks:(id)arg1 withListeningContext:(id)arg2 contextDetail:(id)arg3 startingWithTrackAtIndex:(unsigned long long)arg4;
+ (_Bool)startPlayingTracks:(id)arg1 withListeningContext:(id)arg2 contextDetail:(id)arg3;
+ (void)initialize;
+ (id)dzrDumpableProperties;
+ (id)mediaType;
+ (void)registerToTableView:(id)arg1;
@property(retain, nonatomic) NSDictionary *cachedSortableProperty; // @synthesize cachedSortableProperty=_cachedSortableProperty;
@property(retain, nonatomic) NSDictionary *sizesByKeys; // @synthesize sizesByKeys=_sizesByKeys;
@property(retain, nonatomic) NSDictionary *buildingDictionary; // @synthesize buildingDictionary=_buildingDictionary;
@property(retain, nonatomic) ImageDownloader *nowPlayingArtworkDownloader; // @synthesize nowPlayingArtworkDownloader=_nowPlayingArtworkDownloader;
@property(retain, nonatomic) MPMediaItemArtwork *nowPlayingPlaceholder; // @synthesize nowPlayingPlaceholder=_nowPlayingPlaceholder;
@property(retain, nonatomic) NSDictionary *qualityMapping; // @synthesize qualityMapping=_qualityMapping;
@property(retain, nonatomic) MPMediaItemArtwork *nowPlayingArtwork; // @synthesize nowPlayingArtwork=_nowPlayingArtwork;
@property(retain, nonatomic) NSNumber *topChartsVariation; // @synthesize topChartsVariation=_topChartsVariation;
@property(retain, nonatomic) NSDictionary *radioPayload; // @synthesize radioPayload=_radioPayload;
@property(retain, nonatomic) NSString *radioGroupID; // @synthesize radioGroupID=_radioGroupID;
@property(retain, nonatomic) NSDate *dateOfAdditionInPlaylist; // @synthesize dateOfAdditionInPlaylist=_dateOfAdditionInPlaylist;
@property(nonatomic) unsigned long long uniqueIDHash; // @synthesize uniqueIDHash=_uniqueIDHash;
@property(retain, nonatomic) NSString *uniqueID; // @synthesize uniqueID=_uniqueID;
@property(retain, nonatomic) NSString *objectID; // @synthesize objectID=_objectID;
@property(nonatomic) unsigned long long fileSize_MP3_64; // @synthesize fileSize_MP3_64=_fileSize_MP3_64;
@property(retain, nonatomic) NSString *lyricsID; // @synthesize lyricsID=_lyricsID;
@property(nonatomic) _Bool originatesGetRadioEndpoint; // @synthesize originatesGetRadioEndpoint=_originatesGetRadioEndpoint;
@property(nonatomic) _Bool isUnseen; // @synthesize isUnseen=_isUnseen;
@property(retain, nonatomic) NSString *mixDetails; // @synthesize mixDetails=_mixDetails;
@property(nonatomic) long long displayDuration; // @synthesize displayDuration=_displayDuration;
@property(retain, nonatomic) NSString *albumArtistName; // @synthesize albumArtistName=_albumArtistName;
@property(retain, nonatomic) NSString *mainArtistName; // @synthesize mainArtistName=_mainArtistName;
@property(retain, nonatomic) NSString *artistName; // @synthesize artistName=_artistName;
@property(retain, nonatomic) NSString *artistID; // @synthesize artistID=_artistID;
@property(retain, nonatomic) DeezerArtist *artist; // @synthesize artist=_artist;
@property(retain, nonatomic) NSArray *artists; // @synthesize artists=_artists;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) __weak NSString *link; // @synthesize link=_link;
@property(retain, nonatomic) NSString *oldDeezerId; // @synthesize oldDeezerId;
@property(retain, nonatomic) NSString *userId; // @synthesize userId;
@property(retain, nonatomic) NSDate *download_alc; // @synthesize download_alc;
@property(retain, nonatomic) NSDate *stream_ads; // @synthesize stream_ads;
@property(retain, nonatomic) NSDate *stream_sub; // @synthesize stream_sub;
@property(retain, nonatomic) NSString *isrc; // @synthesize isrc;
@property(retain, nonatomic) NSString *mediaVersion; // @synthesize mediaVersion;
@property(nonatomic) unsigned long long fileSize_AAC_64; // @synthesize fileSize_AAC_64;
@property(nonatomic) unsigned long long fileSize_MP3_MISC; // @synthesize fileSize_MP3_MISC;
@property(nonatomic) unsigned long long fileSize_MP3_128; // @synthesize fileSize_MP3_128;
@property(nonatomic) unsigned long long fileSize; // @synthesize fileSize;
@property(nonatomic) long long trackNumber; // @synthesize trackNumber;
@property(nonatomic) long long diskNumber; // @synthesize diskNumber;
@property(retain, nonatomic) NSString *uploadId; // @synthesize uploadId;
@property(retain, nonatomic) NSString *md5Origin; // @synthesize md5Origin;
@property(nonatomic) long long duration; // @synthesize duration;
@property(nonatomic) int type; // @synthesize type;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
@property(retain, nonatomic) NSString *albumName; // @synthesize albumName;
@property(retain, nonatomic) NSString *albumId; // @synthesize albumId;
@property(retain, nonatomic) NSString *urlRewriting; // @synthesize urlRewriting;
@property(retain, nonatomic) NSString *deezerId; // @synthesize deezerId;
@property(retain, nonatomic) DBTrack *dbTrack; // @synthesize dbTrack;
@property(retain, nonatomic) NSURL *coverURL800_800; // @synthesize coverURL800_800;
@property(retain, nonatomic) NSURL *coverURL750_750; // @synthesize coverURL750_750;
@property(retain, nonatomic) NSURL *coverURL340_340; // @synthesize coverURL340_340;
@property(retain, nonatomic) NSURL *coverURL220_220; // @synthesize coverURL220_220;
@property(retain, nonatomic) NSURL *coverURL80_80; // @synthesize coverURL80_80;
@property(retain, nonatomic) NSURL *coverURL50_50; // @synthesize coverURL50_50;
@property(retain, nonatomic) NSURL *coverURL30_30; // @synthesize coverURL30_30;
@property(retain, nonatomic) NSString *coverSeed; // @synthesize coverSeed;
- (void).cxx_destruct;
- (id)sortableProperties;
- (_Bool)limitedPlayerActions;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)cancelDownloadOfCoverImageForOffline;
- (void)downloadCoverImageForOffline;
- (unsigned long long)expectedContentSizeForQuality:(long long)arg1;
- (id)contentMIMETypeForQuality:(long long)arg1;
- (long long)fileFormatForQuality:(long long)arg1;
- (long long)availableQualityForRequestedQuality:(long long)arg1;
- (id)downloadableForPreview;
- (id)downloadableWithQualityLevel:(long long)arg1 canBeUsedOffline:(_Bool)arg2;
- (_Bool)startPlayingWithListeningContext:(id)arg1 contextDetail:(id)arg2;
- (void)cancelFetchingNowPlayingArtwork;
- (void)fetchNowPlayingArtwork;
@property(readonly, nonatomic) unsigned long long artworkCoverType;
- (_Bool)allowsAds;
- (double)resumePosition;
- (void)_updateNowPlayingArtworkWithImage:(id)arg1;
- (double)previewDuration;
- (double)announcedFullDuration;
- (id)baseURLFormat;
- (_Bool)hasValidPlaybackProvisioning;
- (_Bool)canBeQueued;
- (_Bool)canPlayPreview;
- (unsigned long long)persistentID;
- (id)lastDeliveryRevision;
- (id)sourceContentHash;
- (id)collectionID;
- (void)overrideObjectIDForOriginalPlayable:(id)arg1;
- (id)objectIDForOriginalPlayable;
- (long long)playableType;
- (id)domain;
- (id)filterKeyPath;
- (_Bool)isSponsored;
- (id)sponsorInfo;
- (id)stream_date;
- (_Bool)hasLyrics;
- (id)globalID;
- (_Bool)isMp3Perso;
- (_Bool)isNewTrackInTopWithTrackListSize:(long long)arg1;
- (_Bool)isUsableInFreeMode;
- (_Bool)canBePlayedOffline;
- (_Bool)canBePlayed;
@property(readonly, nonatomic) __weak NSString *streamId;
@property(readonly, nonatomic, getter=isAACFormatAvailable) _Bool accFormatAvailable; // @synthesize accFormatAvailable;
@property(readonly, nonatomic) __weak DeezerAlbum *album;
- (id)illustrations;
- (id)urlForCoverSize:(struct CGSize)arg1;
- (void)setCoverUrl:(id)arg1;
@property(readonly, nonatomic) NSURL *coverUrl;
- (id)getDeezerTrackFormatAPIKeyMapping;
@property(readonly, copy) NSString *debugDescription;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (CDUnknownBlockType)childrenIndexableItems;
- (id)indexEntries;
- (long long)listeningState;
- (void)removeFromLibraryInContext:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)addToLibraryInContext:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (long long)dzrDynamicPageInformationContextMenuItemType;
- (id)logPayload;
- (void)removeItem;
- (void)indexItem;
- (id)cellForTableView:(id)arg1 forIndexPath:(id)arg2 withStyle:(unsigned long long)arg3 delegate:(id)arg4;
- (id)dzrSuggestLogID;
- (long long)dzrSuggestGetSearchResultType;
- (long long)dzrSuggestGetContextMenuType;
- (void)dzrSuggestCellTouchedAtIndexPath:(id)arg1 forController:(id)arg2;
- (id)dzrSuggestCellForController:(id)arg1 forIndexPath:(id)arg2 withStyle:(unsigned long long)arg3;
- (id)DZROfflineSearchObjectGetState;
- (id)mailSubject;
- (id)messageForActivityType:(id)arg1;
- (id)shareLinkURL;
- (_Bool)canLikeOrAddToPlaylist;
- (_Bool)isPlayingUnknownExternalObject;
- (id)googleCastDeezerId;
- (id)durationComparisonObject;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

