//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "DZRSynchronizerOperation.h"

@interface DZRDownloadPlayableOperation : DZRSynchronizerOperation
{
    _Bool _shouldInvalidateStoredContentOnPreferredQualityChanges;
    long long _quality;
    CDUnknownBlockType _willScheduleDownload;
    CDUnknownBlockType _didImmediatelyCompleteDownload;
    CDUnknownBlockType _wasCancelled;
}

@property(nonatomic) _Bool shouldInvalidateStoredContentOnPreferredQualityChanges; // @synthesize shouldInvalidateStoredContentOnPreferredQualityChanges=_shouldInvalidateStoredContentOnPreferredQualityChanges;
@property(copy, nonatomic) CDUnknownBlockType wasCancelled; // @synthesize wasCancelled=_wasCancelled;
@property(copy, nonatomic) CDUnknownBlockType didImmediatelyCompleteDownload; // @synthesize didImmediatelyCompleteDownload=_didImmediatelyCompleteDownload;
@property(copy, nonatomic) CDUnknownBlockType willScheduleDownload; // @synthesize willScheduleDownload=_willScheduleDownload;
@property(nonatomic) long long quality; // @synthesize quality=_quality;
- (void).cxx_destruct;
- (void)scheduleDownloadOfDownloadable:(id)arg1 collectionID:(id)arg2;
- (void)checkRequestQualityInStreamingCacheWithCollecionID:(id)arg1;
- (void)checkIndexedDownloadableOfAnotherCollection:(id)arg1 downloadID:(id)arg2 downloadingCollectionID:(id)arg3;
- (void)checkIndexedDownloadable:(id)arg1 downloadID:(id)arg2 relatedToCollectionID:(id)arg3;
- (void)fetchIndexedDownloadableWithRelationToCollectionID:(id)arg1;
- (void)checkPendingDownload;
- (void)checkProvisioning;
- (void)cancel;
- (void)start;
- (id)initWithPlayable:(id)arg1 collection:(id)arg2 quality:(long long)arg3 shouldInvalidateStoredContentOnPreferredQualityChanges:(_Bool)arg4 indexer:(id)arg5 scheduler:(id)arg6 cache:(id)arg7;

@end

