//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DZRMessaging-Protocol.h"
#import "XMPPCapabilitiesDelegate-Protocol.h"
#import "XMPPPubSubDelegate-Protocol.h"
#import "XMPPReconnectDelegate-Protocol.h"
#import "XMPPStreamDelegate-Protocol.h"

@class DZRReachabilityFacade, DZRXMPPMessageParser, NSMutableDictionary, NSString, XMPPProcessOne, XMPPPubSub, XMPPReconnect, XMPPStream;
@protocol OS_dispatch_queue, XMPPSASLAuthentication;

@interface DZRXMPPManager : NSObject <XMPPStreamDelegate, XMPPPubSubDelegate, XMPPReconnectDelegate, XMPPCapabilitiesDelegate, DZRMessaging>
{
    _Bool _customCertEvaluationation;
    XMPPStream *_xmppStream;
    XMPPPubSub *_xmppPubSub;
    XMPPReconnect *_xmppReconnect;
    XMPPProcessOne *_xmppProcessOne;
    NSString *_userID;
    NSString *_resourceName;
    NSString *_token;
    NSObject<OS_dispatch_queue> *_eventsQueue;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    unsigned long long _reconnectRetryCount;
    NSMutableDictionary *_actionsByNodeName;
    DZRXMPPMessageParser *_messageParser;
    id <XMPPSASLAuthentication> _authentication;
    DZRReachabilityFacade *_reachability;
}

+ (_Bool)isLogEnabled;
+ (id)defaultXMPPManager;
@property(retain, nonatomic) DZRReachabilityFacade *reachability; // @synthesize reachability=_reachability;
@property(retain, nonatomic) id <XMPPSASLAuthentication> authentication; // @synthesize authentication=_authentication;
@property(retain, nonatomic) DZRXMPPMessageParser *messageParser; // @synthesize messageParser=_messageParser;
@property(retain, nonatomic) NSMutableDictionary *actionsByNodeName; // @synthesize actionsByNodeName=_actionsByNodeName;
@property(nonatomic) unsigned long long reconnectRetryCount; // @synthesize reconnectRetryCount=_reconnectRetryCount;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *eventsQueue; // @synthesize eventsQueue=_eventsQueue;
@property(nonatomic) _Bool customCertEvaluationation; // @synthesize customCertEvaluationation=_customCertEvaluationation;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
@property(retain, nonatomic) NSString *resourceName; // @synthesize resourceName=_resourceName;
@property(retain, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(retain, nonatomic) XMPPProcessOne *xmppProcessOne; // @synthesize xmppProcessOne=_xmppProcessOne;
@property(retain, nonatomic) XMPPReconnect *xmppReconnect; // @synthesize xmppReconnect=_xmppReconnect;
@property(retain, nonatomic) XMPPPubSub *xmppPubSub; // @synthesize xmppPubSub=_xmppPubSub;
@property(retain, nonatomic) XMPPStream *xmppStream; // @synthesize xmppStream=_xmppStream;
- (void).cxx_destruct;
- (_Bool)xmppReconnect:(id)arg1 shouldAttemptAutoReconnect:(unsigned int)arg2;
- (void)xmppReconnect:(id)arg1 didDetectAccidentalDisconnect:(unsigned int)arg2;
- (void)xmppPubSub:(id)arg1 didNotRetrieveItems:(id)arg2 fromNode:(id)arg3;
- (void)xmppPubSub:(id)arg1 didRetrieveItems:(id)arg2 fromNode:(id)arg3;
- (void)xmppDidReceiveMessage:(id)arg1;
- (void)xmppStream:(id)arg1 didReceiveMessage:(id)arg2;
- (_Bool)xmppStream:(id)arg1 didReceiveIQ:(id)arg2;
- (void)xmppStream:(id)arg1 didNotAuthenticate:(id)arg2;
- (void)xmppStreamDidAuthenticate:(id)arg1;
- (void)xmppStreamDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)xmppStreamDidConnect:(id)arg1;
- (void)xmppStream:(id)arg1 didReceiveTrust:(struct __SecTrust *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)xmppStream:(id)arg1 willSecureWithSettings:(id)arg2;
- (void)handleMessage:(id)arg1 receivedFromNode:(id)arg2;
- (_Bool)sendMessage:(id)arg1;
- (void)teardownXmpp;
- (void)sendPasswordAuth;
- (void)connectToHost;
- (void)setupStream;
- (id)JID;
- (void)xmppDisconnect;
- (void)xmppAuthenticationForUserToken:(id)arg1 userID:(id)arg2;
- (void)unregisterLiveEvent:(id)arg1;
- (void)registerLiveEvent:(id)arg1;
- (unsigned long long)protocol;
- (void)willLogout;
- (id)hostName;
- (void)dealloc;
- (void)configureSessionObservers;
- (_Bool)isNotAuthentifiedToXmpp;
- (void)updateReachabilitydMode:(long long)arg1 isOfflineForced:(_Bool)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

