//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "VOXNowPlayingCenterDataSource-Protocol.h"
#import "VOXOfflineModeProtocol-Protocol.h"
#import "VOXPlayerRoutesObserverDelegate-Protocol.h"
#import "VoxPlayerDelegate-Protocol.h"

@class MPRemoteCommandCenter, NSArray, NSString, NSTimer, VOXHistogramManager, VOXNowPlayingCenter, VOXPlayerNotificationCenter, VOXPlayerQueue, VOXPlayerRoutesObserver, VOXPlayerSeekingController, VXBass, VoxPlayableItem, VoxPlayer, _TtC3VOX15CacheController;

@interface VoxPlayerController : NSObject <VoxPlayerDelegate, VOXNowPlayingCenterDataSource, VOXOfflineModeProtocol, VOXPlayerRoutesObserverDelegate>
{
    _Bool _loading;
    id _contextObs;
    id _sourceDisconnectObs;
    MPRemoteCommandCenter *_remoteCenter;
    _Bool _histogramReady;
    _Bool _isStopped;
    _Bool _playbackFinished;
    _Bool _currentItemHasLoadingError;
    _Bool _nextItemFailedToLoad;
    _Bool _isActiveState;
    VOXHistogramManager *_histogramManager;
    NSArray *_originalQueueSection;
    double _currentDownloadPosition;
    VOXPlayerQueue *_playerQueue;
    VoxPlayableItem *_currentTrack;
    VoxPlayer *_player;
    VOXPlayerNotificationCenter *_notificationCenter;
    VOXPlayerRoutesObserver *_routesObserver;
    VOXNowPlayingCenter *_nowPlayingCenter;
    _TtC3VOX15CacheController *_cacheController;
    VOXPlayerSeekingController *_seekingController;
    NSTimer *_deferredStartTimer;
}

+ (id)shared;
@property(retain, nonatomic) NSTimer *deferredStartTimer; // @synthesize deferredStartTimer=_deferredStartTimer;
@property(nonatomic) _Bool isActiveState; // @synthesize isActiveState=_isActiveState;
@property(retain, nonatomic) VOXPlayerSeekingController *seekingController; // @synthesize seekingController=_seekingController;
@property _Bool nextItemFailedToLoad; // @synthesize nextItemFailedToLoad=_nextItemFailedToLoad;
@property _Bool currentItemHasLoadingError; // @synthesize currentItemHasLoadingError=_currentItemHasLoadingError;
@property(retain) _TtC3VOX15CacheController *cacheController; // @synthesize cacheController=_cacheController;
@property(retain, nonatomic) VOXNowPlayingCenter *nowPlayingCenter; // @synthesize nowPlayingCenter=_nowPlayingCenter;
@property(nonatomic) _Bool playbackFinished; // @synthesize playbackFinished=_playbackFinished;
@property(retain, nonatomic) VOXPlayerRoutesObserver *routesObserver; // @synthesize routesObserver=_routesObserver;
@property(retain, nonatomic) VOXPlayerNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(readonly, nonatomic) VoxPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) VoxPlayableItem *currentTrack; // @synthesize currentTrack=_currentTrack;
@property(readonly, nonatomic) _Bool isStopped; // @synthesize isStopped=_isStopped;
@property(retain, nonatomic) VOXPlayerQueue *playerQueue; // @synthesize playerQueue=_playerQueue;
@property(nonatomic) double currentDownloadPosition; // @synthesize currentDownloadPosition=_currentDownloadPosition;
@property(readonly, nonatomic) NSArray *originalQueueSection; // @synthesize originalQueueSection=_originalQueueSection;
@property(readonly, nonatomic) _Bool histogramReady; // @synthesize histogramReady=_histogramReady;
@property(readonly, nonatomic) VOXHistogramManager *histogramManager; // @synthesize histogramManager=_histogramManager;
- (void).cxx_destruct;
- (void)configureOnlineMode;
- (void)configureOfflineMode;
- (void)cleanUpAudioCache;
- (id)cachedURLForPlayableItem:(id)arg1;
- (void)routesObserverRouteChangedFrom:(id)arg1 toPort:(id)arg2;
- (void)routesObserverHeadphonesConnected;
- (void)routesObserverHeadphonesEjected;
- (id)playerPositionsRequiredForNowPlayingCenter:(id)arg1;
- (void)updateCurrentTrackInfo;
- (void)saveCurrentState;
- (void)saveCurrentTrackWithUUID:(id)arg1 position:(double)arg2;
- (void)saveCurrentStateAfter:(double)arg1;
- (void)setTrack:(id)arg1 initPosition:(float)arg2 forcePlay:(_Bool)arg3;
- (void)setTrack:(id)arg1 forcePlay:(_Bool)arg2;
- (void)cancelDelayedTrackLoading;
- (void)loadCurrentTrackAndForcePlay:(_Bool)arg1 initPosition:(float)arg2;
- (void)playerDidSeek;
- (void)playerStationMetaInfoUpdated:(id)arg1;
- (void)playerAvailableOutputsChanged;
- (void)playerOutputDeviceChanged;
- (void)playerPendingStateChanged:(_Bool)arg1;
- (void)playerGaveUpTryingToReloadURL:(id)arg1 userInfo:(id)arg2;
- (_Bool)playersShouldCacheDataForUserInfo:(id)arg1;
- (void)playerDidEndDownloading:(_Bool)arg1 forUserInfo:(id)arg2;
- (unsigned long long)playerDidDownloadData:(id)arg1 atOffset:(unsigned long long)arg2 forUserInfo:(id)arg3;
- (_Bool)playerWillStartDownloadOfSize:(long long)arg1 forUserInfo:(id)arg2;
- (void)playerReportsDownloadProgress:(float)arg1 forUserInfo:(id)arg2;
- (void)playerStateDidChange:(id)arg1 state:(long long)arg2;
- (void)playerDidStartNextTrack:(id)arg1 withUserInfo:(id)arg2;
- (void)playerWantsNextItem:(id)arg1;
- (void)playerSourcePlayingFinished:(id)arg1 withUserInfo:(id)arg2;
- (void)playerEndInterruption:(id)arg1 shouldResume:(_Bool)arg2;
- (void)playerBeginInterruption:(id)arg1;
- (void)playerDidFinishPlaying:(id)arg1;
- (void)updatePlaybackParameters;
- (void)updateAudioParameters;
- (void)updateEQPreset;
- (void)updateDeviceInfo;
@property(readonly, nonatomic) unsigned long long currentTrackQuality;
- (id)currentPlayableItem;
- (_Bool)currentTrackIsLooped;
- (void)stopSeeking;
- (void)startSeekingInBackwardDirrection:(unsigned long long)arg1;
- (void)toggleNextRepeatMode;
- (void)updateRepeatMode:(long long)arg1;
- (void)toggleNextShuffleMode;
- (void)updateShuffleMode:(long long)arg1;
@property(nonatomic) double currentTrackPosition;
- (void)setTrackDelayed:(id)arg1 forcePlay:(_Bool)arg2 initPosition:(float)arg3 loadStartedBlock:(CDUnknownBlockType)arg4;
- (void)setTrackDelayed:(id)arg1 forcePlay:(_Bool)arg2 loadStartedBlock:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) _Bool isWirelessAudioRouteActive;
@property(readonly, nonatomic) _Bool isCurrentItemRadio;
- (id)avaiableEQPresetNames;
@property(readonly, nonatomic) VXBass *bass;
- (double)currentSoundLevel;
- (double)totalTrackDuration;
- (double)currentTrackPositionSeconds;
- (_Bool)isQueueFinished;
- (_Bool)isPaused;
- (_Bool)isPlaying;
- (_Bool)isCurrentItemCantBeLoaded;
- (_Bool)isCurrentItemLoading;
- (_Bool)isLoading;
- (void)pause;
- (void)stop;
- (void)play;
- (void)prev;
- (void)next;
- (void)applicationWillTerminate;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)updateHistogramLevels:(id)arg1 finished:(_Bool)arg2 duration:(double)arg3 item:(id)arg4;
- (void)removeTracksFromQueueWithSourceType:(unsigned long long)arg1;
- (void)removeTracksFromQueue:(id)arg1;
- (_Bool)isPlaylistLoaded;
- (void)addItemsToQueue:(id)arg1;
- (void)playNextItems:(id)arg1;
- (void)playMediaItem:(id)arg1 inCollection:(id)arg2 forcedShuffleMode:(long long)arg3;
- (void)playMediaItem:(id)arg1 inCollection:(id)arg2;
- (void)playItemFromQueue:(id)arg1;
- (void)clearQueue;
- (void)restorePlaybackPosition;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (void)setupRemoteCommandCenter;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

