//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "VOXSoundCloudModel.h"

#import "TrackInfoProvider-Protocol.h"
#import "VOXItemStateIndicatorProvider-Protocol.h"
#import "VoxPlayableItemProtocol-Protocol.h"

@class NSDate, NSNumber, NSString, VOXSoundCloudUserModel;

@interface VOXSoundCloudTrackModel : VOXSoundCloudModel <TrackInfoProvider, VoxPlayableItemProtocol, VOXItemStateIndicatorProvider>
{
    _Bool _isStreamable;
    _Bool _isDownloadable;
    long long _remoteId;
    long long _playlistId;
    NSDate *_createdAt;
    NSString *_title;
    NSString *_username;
    NSString *_artworkURL;
    NSString *_thumbnailURL;
    NSString *_streamURL;
    NSString *_downloadURL;
    NSString *_openInSoundCloudURL;
    NSString *_waveFormURL;
    NSString *_reposterUserName;
    double _duration;
    NSString *_uuid;
    NSString *_genre;
    VOXSoundCloudUserModel *_user;
    long long _hasDownloadsLeft;
    NSNumber *_composedDisableState;
    NSString *_composedMediaURL;
}

+ (id)modelFromSerializedRepresentation:(id)arg1;
@property(retain, nonatomic) NSString *composedMediaURL; // @synthesize composedMediaURL=_composedMediaURL;
@property(retain, nonatomic) NSNumber *composedDisableState; // @synthesize composedDisableState=_composedDisableState;
@property(nonatomic) long long hasDownloadsLeft; // @synthesize hasDownloadsLeft=_hasDownloadsLeft;
@property(retain, nonatomic) VOXSoundCloudUserModel *user; // @synthesize user=_user;
@property(retain, nonatomic) NSString *genre; // @synthesize genre=_genre;
@property(nonatomic) _Bool isDownloadable; // @synthesize isDownloadable=_isDownloadable;
@property(nonatomic) _Bool isStreamable; // @synthesize isStreamable=_isStreamable;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) NSString *reposterUserName; // @synthesize reposterUserName=_reposterUserName;
@property(retain, nonatomic) NSString *waveFormURL; // @synthesize waveFormURL=_waveFormURL;
@property(retain, nonatomic) NSString *openInSoundCloudURL; // @synthesize openInSoundCloudURL=_openInSoundCloudURL;
@property(retain, nonatomic) NSString *downloadURL; // @synthesize downloadURL=_downloadURL;
@property(retain, nonatomic) NSString *streamURL; // @synthesize streamURL=_streamURL;
@property(retain, nonatomic) NSString *thumbnailURL; // @synthesize thumbnailURL=_thumbnailURL;
@property(retain, nonatomic) NSString *artworkURL; // @synthesize artworkURL=_artworkURL;
@property(retain, nonatomic) NSString *username; // @synthesize username=_username;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(nonatomic) long long playlistId; // @synthesize playlistId=_playlistId;
@property(nonatomic) long long remoteId; // @synthesize remoteId=_remoteId;
- (void).cxx_destruct;
- (unsigned long long)musicLibrarySourceType;
- (_Bool)displayLikeIndication;
- (id)itemUUIDForIndication;
- (double)vx_startPosition;
- (_Bool)vx_isPartial;
- (_Bool)vx_isLocal;
- (_Bool)vx_isDownloadable;
- (id)vx_infoURL;
- (id)vx_artistArtworkURL;
- (id)vx_artistExternalId;
- (id)vx_genre;
- (_Bool)vx_isPlayable;
- (id)vx_duration;
- (id)vx_album;
- (id)vx_albumArtist;
- (id)vx_artist;
- (id)vx_artworkURL;
- (id)vx_trackName;
- (id)vx_mediaURL;
- (id)vx_histogramURL;
- (id)vx_sourceType;
- (id)vx_compareId;
- (id)vx_externalId;
- (id)vx_uuid;
- (id)trackMedialPath;
- (id)trackArtworkURL;
- (id)trackArtwork;
- (id)trackAlbum;
- (id)trackArtist;
- (id)vx_trackNumber;
- (id)trackName;
- (void)logErrorToFlurryForKey:(id)arg1;
- (_Bool)isDisabled;
- (id)initWithEntityRepresentation:(id)arg1;
- (id)initWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

