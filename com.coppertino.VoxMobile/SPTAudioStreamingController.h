//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SPTCoreAudioControllerDelegate-Protocol.h"

@class NSString, SPTCoreAudioController, SPTPlaybackMetadata, SPTPlaybackState, SPTReachability;
@protocol SPTAudioStreamingDelegate, SPTAudioStreamingPlaybackDelegate, SPTDiskCaching;

@interface SPTAudioStreamingController : NSObject <SPTCoreAudioControllerDelegate>
{
    void *_esdk_memory_block;
    _Bool _initialized;
    _Bool _loggedIn;
    id <SPTAudioStreamingDelegate> _delegate;
    id <SPTAudioStreamingPlaybackDelegate> _playbackDelegate;
    id <SPTDiskCaching> _diskCache;
    double _volume;
    SPTPlaybackMetadata *_metadata;
    SPTPlaybackState *_playbackState;
    unsigned long long _targetBitrate;
    SPTCoreAudioController *_audioController;
    NSString *_cacheRoot;
    long long _cacheAgeLimit;
    unsigned long long _cacheSizeLimit;
    NSString *_accessToken;
    SPTReachability *_reachability;
}

+ (void)runBackgroundRunloop:(CDUnknownBlockType)arg1;
+ (void)dispatchToAudioThread:(CDUnknownBlockType)arg1;
+ (struct __CFRunLoop *)audioRunloop;
+ (id)sharedInstance;
@property(retain, nonatomic) SPTReachability *reachability; // @synthesize reachability=_reachability;
@property(retain, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(nonatomic) unsigned long long cacheSizeLimit; // @synthesize cacheSizeLimit=_cacheSizeLimit;
@property(nonatomic) long long cacheAgeLimit; // @synthesize cacheAgeLimit=_cacheAgeLimit;
@property(retain, nonatomic) NSString *cacheRoot; // @synthesize cacheRoot=_cacheRoot;
@property(retain, nonatomic) SPTCoreAudioController *audioController; // @synthesize audioController=_audioController;
@property unsigned long long targetBitrate; // @synthesize targetBitrate=_targetBitrate;
@property(retain) SPTPlaybackState *playbackState; // @synthesize playbackState=_playbackState;
@property(retain) SPTPlaybackMetadata *metadata; // @synthesize metadata=_metadata;
@property double volume; // @synthesize volume=_volume;
@property(retain, nonatomic) id <SPTDiskCaching> diskCache; // @synthesize diskCache=_diskCache;
@property(nonatomic) __weak id <SPTAudioStreamingPlaybackDelegate> playbackDelegate; // @synthesize playbackDelegate=_playbackDelegate;
@property(nonatomic) __weak id <SPTAudioStreamingDelegate> delegate; // @synthesize delegate=_delegate;
@property _Bool loggedIn; // @synthesize loggedIn=_loggedIn;
@property _Bool initialized; // @synthesize initialized=_initialized;
- (void).cxx_destruct;
- (void)deallocESDKMemory;
- (void)allocateESDKMemory;
- (void)updatePlaybackState;
- (void)coreAudioController:(id)arg1 didOutputAudioOfDuration:(double)arg2;
- (void)queueSpotifyURI:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)playSpotifyURI:(id)arg1 startingWithIndex:(unsigned long long)arg2 startingWithPosition:(double)arg3 callback:(CDUnknownBlockType)arg4;
- (void)setIsPlaying:(_Bool)arg1 callback:(CDUnknownBlockType)arg2;
- (void)seekTo:(double)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setTargetBitrate:(unsigned long long)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setVolume:(double)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setRepeat:(unsigned long long)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setShuffle:(_Bool)arg1 callback:(CDUnknownBlockType)arg2;
- (void)skipPrevious:(CDUnknownBlockType)arg1;
- (void)skipNext:(CDUnknownBlockType)arg1;
- (void)logout;
- (void)loginWithAccessToken:(id)arg1;
- (id)filterCompanyNameOrAppName:(id)arg1;
- (void)recheckReachability:(id)arg1;
- (void)reachabilityDidChange:(id)arg1;
- (void)dealloc;
- (_Bool)stopWithError:(id *)arg1;
- (_Bool)startWithClientId:(id)arg1 audioController:(id)arg2 allowCaching:(_Bool)arg3 error:(id *)arg4;
- (_Bool)startWithClientId:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

