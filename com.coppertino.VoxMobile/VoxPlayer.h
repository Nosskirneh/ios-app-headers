//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "VXBassPlayDelegate-Protocol.h"

@class NSString, TMCache, VXBass, _TtC3VOX15CacheController;
@protocol VoxPlayerDelegate;

@interface VoxPlayer : NSObject <VXBassPlayDelegate>
{
    _Bool _wasPlayingBeforeInterruption;
    _Bool _isVolumeObserver;
    VXBass *_bass;
    _TtC3VOX15CacheController *_cacheController;
    TMCache *_histogramCache;
    CDUnknownBlockType _histogramUpdateBlock;
    id <VoxPlayerDelegate> _delegate;
}

+ (id)shared;
@property(nonatomic) __weak id <VoxPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) CDUnknownBlockType histogramUpdateBlock; // @synthesize histogramUpdateBlock=_histogramUpdateBlock;
@property(retain) TMCache *histogramCache; // @synthesize histogramCache=_histogramCache;
@property(retain, nonatomic) _TtC3VOX15CacheController *cacheController; // @synthesize cacheController=_cacheController;
@property(readonly, nonatomic) VXBass *bass; // @synthesize bass=_bass;
- (void).cxx_destruct;
- (void)setNetworkRachable:(_Bool)arg1;
- (void)removeVolumeChangeListener;
- (void)setupVolumeChangeListener;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)bass:(id)arg1 didSeekToPosition:(double)arg2 userInfo:(id)arg3;
- (void)bass:(id)arg1 stationMetaInfoUpdated:(id)arg2 userInfo:(id)arg3;
- (void)bassReportsDeviceVolumeChange:(id)arg1;
- (void)bassReportsDeviceLayoutChange:(id)arg1;
- (void)bassReportsDeviceChange:(id)arg1;
- (void)bass:(id)arg1 sourceStallStateChange:(_Bool)arg2;
- (void)bass:(id)arg1 gaveUpTryingToReloadURL:(id)arg2 bassError:(unsigned int)arg3 userInfo:(id)arg4;
- (_Bool)bass:(id)arg1 shouldCacheDataForUserInfo:(id)arg2;
- (void)bass:(id)arg1 didEndDownloadingSource:(id)arg2 success:(_Bool)arg3 forUserInfo:(id)arg4;
- (unsigned long long)bass:(id)arg1 didDownloadData:(id)arg2 atOffset:(unsigned long long)arg3 forUserInfo:(id)arg4;
- (_Bool)bass:(id)arg1 willStartDownloadOfLength:(unsigned long long)arg2 forUserInfo:(id)arg3;
- (void)bass:(id)arg1 downloadProgressChanged:(float)arg2 userInfo:(id)arg3;
- (void)bass:(id)arg1 url:(id)arg2 wasValidated:(_Bool)arg3 bassError:(unsigned int)arg4 userInfo:(id)arg5;
- (void)bass:(id)arg1 url:(id)arg2 isReportingLength:(double)arg3 userInfo:(id)arg4;
- (void)buildHistogramForItem:(id)arg1 actualURL:(id)arg2 duration:(double)arg3;
- (void)buildHistogramForCurrentSource;
- (void)bass:(id)arg1 sourcePlayingStarted:(id)arg2 userInfo:(id)arg3;
- (void)bass:(id)arg1 sourcePlayingFinished:(id)arg2 percentPlayed:(float)arg3 userInfo:(id)arg4;
- (void)bass:(id)arg1 requiresNextURLForUserInfo:(id)arg2;
- (void)bassPlaybackStateChanged:(id)arg1;
- (void)interruptionNotificationRecieved:(id)arg1;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(_Bool)arg2;
- (void)disableEQ;
- (void)enableEQWithParameters:(id)arg1;
- (void)seekToTime:(double)arg1;
- (double)downloadPosition;
- (double)timeLeft;
- (float)positionRatio;
- (double)position;
@property(nonatomic) float rate;
- (double)currentSoundLevel;
- (_Bool)isLossless;
- (_Bool)isHD;
- (id)codec;
- (long long)bitDepth;
- (unsigned long long)sampleRate;
- (unsigned long long)bitrate;
- (double)duration;
- (_Bool)isPaused;
- (_Bool)isPlaying;
- (_Bool)isLoading;
- (id)currentSourceURL;
- (void)pause;
- (void)resume;
- (void)stop;
- (_Bool)_setNextURL:(id)arg1 startPosition:(double)arg2 duration:(double)arg3 userInfo:(id)arg4 urlResolver:(CDUnknownBlockType)arg5;
- (_Bool)_setNextURL:(id)arg1 userInfo:(id)arg2 urlResolver:(CDUnknownBlockType)arg3;
- (_Bool)_setSongWithURL:(id)arg1 startPosition:(double)arg2 duration:(double)arg3 initPosition:(float)arg4 forcePlay:(_Bool)arg5 userInfo:(id)arg6 urlResolver:(CDUnknownBlockType)arg7;
- (void)setNextPlayableItem:(id)arg1;
- (void)startPlayableItem:(id)arg1 initPosition:(float)arg2 forcePlayback:(_Bool)arg3;
- (void)setupReachability;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

