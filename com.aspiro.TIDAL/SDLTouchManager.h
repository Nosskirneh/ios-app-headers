//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class SDLPinchGesture, SDLTouch;
@protocol OS_dispatch_source, SDLFocusableItemHitTester, SDLTouchManagerDelegate;

@interface SDLTouchManager : NSObject
{
    _Bool _enableSyncedPanning;
    _Bool _touchEnabled;
    id <SDLTouchManagerDelegate> _touchEventDelegate;
    CDUnknownBlockType _touchEventHandler;
    double _tapDistanceThreshold;
    double _panDistanceThreshold;
    double _tapTimeThreshold;
    double _movementTimeThreshold;
    SDLTouch *_firstTouch;
    SDLTouch *_previousTouch;
    SDLTouch *_singleTapTouch;
    double _previousPinchDistance;
    SDLPinchGesture *_currentPinchGesture;
    NSObject<OS_dispatch_source> *_singleTapTimer;
    unsigned long long _performingTouchType;
    id <SDLFocusableItemHitTester> _hitTester;
    struct CGPoint _lastStoredTouchLocation;
    struct CGPoint _lastNotifiedTouchLocation;
}

@property(nonatomic) struct CGPoint lastNotifiedTouchLocation; // @synthesize lastNotifiedTouchLocation=_lastNotifiedTouchLocation;
@property(nonatomic) struct CGPoint lastStoredTouchLocation; // @synthesize lastStoredTouchLocation=_lastStoredTouchLocation;
@property(nonatomic) __weak id <SDLFocusableItemHitTester> hitTester; // @synthesize hitTester=_hitTester;
@property(nonatomic) unsigned long long performingTouchType; // @synthesize performingTouchType=_performingTouchType;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *singleTapTimer; // @synthesize singleTapTimer=_singleTapTimer;
@property(retain, nonatomic) SDLPinchGesture *currentPinchGesture; // @synthesize currentPinchGesture=_currentPinchGesture;
@property(nonatomic) double previousPinchDistance; // @synthesize previousPinchDistance=_previousPinchDistance;
@property(retain, nonatomic) SDLTouch *singleTapTouch; // @synthesize singleTapTouch=_singleTapTouch;
@property(retain, nonatomic) SDLTouch *previousTouch; // @synthesize previousTouch=_previousTouch;
@property(retain, nonatomic) SDLTouch *firstTouch; // @synthesize firstTouch=_firstTouch;
@property(nonatomic, getter=isTouchEnabled) _Bool touchEnabled; // @synthesize touchEnabled=_touchEnabled;
@property(nonatomic) _Bool enableSyncedPanning; // @synthesize enableSyncedPanning=_enableSyncedPanning;
@property(nonatomic) double movementTimeThreshold; // @synthesize movementTimeThreshold=_movementTimeThreshold;
@property(nonatomic) double tapTimeThreshold; // @synthesize tapTimeThreshold=_tapTimeThreshold;
@property(nonatomic) double panDistanceThreshold; // @synthesize panDistanceThreshold=_panDistanceThreshold;
@property(nonatomic) double tapDistanceThreshold; // @synthesize tapDistanceThreshold=_tapDistanceThreshold;
@property(copy, nonatomic) CDUnknownBlockType touchEventHandler; // @synthesize touchEventHandler=_touchEventHandler;
@property(nonatomic) __weak id <SDLTouchManagerDelegate> touchEventDelegate; // @synthesize touchEventDelegate=_touchEventDelegate;
- (void).cxx_destruct;
- (void)sdl_cancelSingleTapTimer;
- (void)sdl_initializeSingleTapTimerAtPoint:(struct CGPoint)arg1;
- (void)sdl_setMultiTouchFingerTouchForTouch:(id)arg1;
- (void)sdl_handleTouchCanceled:(id)arg1;
- (void)sdl_handleTouchEnded:(id)arg1;
- (void)sdl_handleTouchMoved:(id)arg1;
- (void)sdl_handleTouchBegan:(id)arg1;
- (void)sdl_onTouchEvent:(id)arg1;
- (void)syncFrame;
- (void)cancelPendingTouches;
- (id)initWithHitTester:(id)arg1;

@end

