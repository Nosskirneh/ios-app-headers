//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SDLProtocolListener-Protocol.h"
#import "SDLStreamingAudioManagerType-Protocol.h"
#import "SDLVideoEncoderDelegate-Protocol.h"

@class CADisplayLink, NSArray, NSDictionary, NSString, SDLAudioStreamManager, SDLCarWindow, SDLH264VideoEncoder, SDLProtocol, SDLStateMachine, SDLTouchManager, SDLVideoStreamingFormat, UIViewController;
@protocol SDLConnectionManagerType, SDLFocusableItemLocatorType, SDLStreamingMediaManagerDataSource;

@interface SDLStreamingMediaLifecycleManager : NSObject <SDLVideoEncoderDelegate, SDLProtocolListener, SDLStreamingAudioManagerType>
{
    _Bool _restartVideoStream;
    _Bool _streamingSupported;
    _Bool _videoEncrypted;
    _Bool _audioEncrypted;
    _Bool _useDisplayLink;
    SDLStateMachine *_appStateMachine;
    SDLStateMachine *_videoStreamStateMachine;
    SDLStateMachine *_audioStreamStateMachine;
    NSString *_hmiLevel;
    SDLTouchManager *_touchManager;
    SDLAudioStreamManager *_audioManager;
    UIViewController *_rootViewController;
    SDLCarWindow *_carWindow;
    id <SDLFocusableItemLocatorType> _focusableItemManager;
    id <SDLStreamingMediaManagerDataSource> _dataSource;
    SDLVideoStreamingFormat *_videoFormat;
    NSArray *_preferredFormats;
    unsigned long long _preferredFormatIndex;
    NSArray *_preferredResolutions;
    unsigned long long _preferredResolutionIndex;
    long long _requestedEncryptionType;
    id <SDLConnectionManagerType> _connectionManager;
    SDLProtocol *_protocol;
    SDLH264VideoEncoder *_videoEncoder;
    NSDictionary *_videoEncoderSettings;
    NSArray *_secureMakes;
    NSString *_connectedVehicleMake;
    struct __CVBuffer *_backgroundingPixelBuffer;
    CADisplayLink *_displayLink;
    struct CGSize _screenSize;
    CDStruct_1b6d18a9 _lastPresentationTimestamp;
}

+ (id)sdl_audioStreamingStateTransitionDictionary;
+ (id)sdl_videoStreamStateTransitionDictionary;
+ (id)sdl_appStateTransitionDictionary;
@property(nonatomic) CDStruct_1b6d18a9 lastPresentationTimestamp; // @synthesize lastPresentationTimestamp=_lastPresentationTimestamp;
@property(nonatomic) _Bool useDisplayLink; // @synthesize useDisplayLink=_useDisplayLink;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(nonatomic) struct __CVBuffer *backgroundingPixelBuffer; // @synthesize backgroundingPixelBuffer=_backgroundingPixelBuffer;
@property(copy, nonatomic) NSString *connectedVehicleMake; // @synthesize connectedVehicleMake=_connectedVehicleMake;
@property(copy, nonatomic) NSArray *secureMakes; // @synthesize secureMakes=_secureMakes;
@property(copy, nonatomic) NSDictionary *videoEncoderSettings; // @synthesize videoEncoderSettings=_videoEncoderSettings;
@property(retain, nonatomic) SDLH264VideoEncoder *videoEncoder; // @synthesize videoEncoder=_videoEncoder;
@property(nonatomic) __weak SDLProtocol *protocol; // @synthesize protocol=_protocol;
@property(nonatomic) __weak id <SDLConnectionManagerType> connectionManager; // @synthesize connectionManager=_connectionManager;
@property(nonatomic) long long requestedEncryptionType; // @synthesize requestedEncryptionType=_requestedEncryptionType;
@property(nonatomic) unsigned long long preferredResolutionIndex; // @synthesize preferredResolutionIndex=_preferredResolutionIndex;
@property(retain, nonatomic) NSArray *preferredResolutions; // @synthesize preferredResolutions=_preferredResolutions;
@property(nonatomic) unsigned long long preferredFormatIndex; // @synthesize preferredFormatIndex=_preferredFormatIndex;
@property(retain, nonatomic) NSArray *preferredFormats; // @synthesize preferredFormats=_preferredFormats;
@property(retain, nonatomic) SDLVideoStreamingFormat *videoFormat; // @synthesize videoFormat=_videoFormat;
@property(readonly, nonatomic) struct CGSize screenSize; // @synthesize screenSize=_screenSize;
@property(readonly, nonatomic, getter=isAudioEncrypted) _Bool audioEncrypted; // @synthesize audioEncrypted=_audioEncrypted;
@property(readonly, nonatomic, getter=isVideoEncrypted) _Bool videoEncrypted; // @synthesize videoEncrypted=_videoEncrypted;
@property(readonly, nonatomic, getter=isStreamingSupported) _Bool streamingSupported; // @synthesize streamingSupported=_streamingSupported;
@property(nonatomic) __weak id <SDLStreamingMediaManagerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(readonly, nonatomic) id <SDLFocusableItemLocatorType> focusableItemManager; // @synthesize focusableItemManager=_focusableItemManager;
@property(readonly, nonatomic) SDLCarWindow *carWindow; // @synthesize carWindow=_carWindow;
@property(retain, nonatomic) UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(readonly, nonatomic) SDLAudioStreamManager *audioManager; // @synthesize audioManager=_audioManager;
@property(readonly, nonatomic) SDLTouchManager *touchManager; // @synthesize touchManager=_touchManager;
@property(readonly, nonatomic, getter=shouldRestartVideoStream) _Bool restartVideoStream; // @synthesize restartVideoStream=_restartVideoStream;
@property(copy, nonatomic) NSString *hmiLevel; // @synthesize hmiLevel=_hmiLevel;
@property(retain, nonatomic) SDLStateMachine *audioStreamStateMachine; // @synthesize audioStreamStateMachine=_audioStreamStateMachine;
@property(retain, nonatomic) SDLStateMachine *videoStreamStateMachine; // @synthesize videoStreamStateMachine=_videoStreamStateMachine;
@property(retain, nonatomic) SDLStateMachine *appStateMachine; // @synthesize appStateMachine=_appStateMachine;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *supportedFormats;
@property(readonly, nonatomic, getter=isHmiStateVideoStreamCapable) _Bool hmiStateVideoStreamCapable;
@property(readonly, nonatomic, getter=isHmiStateAudioStreamCapable) _Bool hmiStateAudioStreamCapable;
@property(readonly, nonatomic, getter=isAppStateVideoStreamCapable) _Bool appStateVideoStreamCapable;
- (void)sdl_sendVideoStartService;
- (void)sdl_requestVideoCapabilities:(CDUnknownBlockType)arg1;
- (void)sdl_sendBackgroundFrames;
- (void)sdl_displayLinkFired:(id)arg1;
- (void)sdl_transitionToStoppedState:(unsigned char)arg1;
- (void)sdl_stopAudioSession;
- (void)sdl_stopVideoSession;
- (void)sdl_startAudioSession;
- (void)sdl_startVideoSession;
- (void)sdl_hmiLevelDidChange:(id)arg1;
- (void)sdl_didReceiveRegisterAppInterfaceResponse:(id)arg1;
- (void)videoEncoder:(id)arg1 hasEncodedFrame:(id)arg2;
- (void)handleProtocolEndServiceNAKMessage:(id)arg1;
- (void)handleProtocolEndServiceACKMessage:(id)arg1;
- (void)sdl_handleAudioStartServiceNak:(id)arg1;
- (void)sdl_handleVideoStartServiceNak:(id)arg1;
- (void)handleProtocolStartServiceNAKMessage:(id)arg1;
- (void)sdl_handleVideoStartServiceAck:(id)arg1;
- (void)sdl_handleAudioStartServiceAck:(id)arg1;
- (void)handleProtocolStartServiceACKMessage:(id)arg1;
- (void)didEnterStateAudioStreamShuttingDown;
- (void)didEnterStateAudioStreamReady;
- (void)didEnterStateAudioStreamStarting;
- (void)didEnterStateAudioStreamStopped;
- (void)didEnterStateVideoStreamShuttingDown;
- (void)didEnterStateVideoStreamSuspended;
- (void)didEnterStateVideoStreamReady;
- (void)didEnterStateVideoStreamStarting;
- (void)didEnterStateVideoStreamStopped;
- (void)didEnterStateAppActive;
- (void)didEnterStateAppInactive;
- (void)sdl_appStateDidUpdate:(id)arg1;
@property(readonly, nonatomic) NSString *currentVideoStreamState;
@property(readonly, nonatomic) NSString *currentAudioStreamState;
@property(readonly, nonatomic) NSString *currentAppState;
@property(readonly, nonatomic) struct __CVPixelBufferPool *pixelBufferPool;
@property(readonly, nonatomic, getter=isVideoStreamingPaused) _Bool videoStreamingPaused;
@property(readonly, nonatomic, getter=isVideoConnected) _Bool videoConnected;
@property(readonly, nonatomic, getter=isAudioConnected) _Bool audioConnected;
- (_Bool)sendAudioData:(id)arg1;
- (_Bool)sendVideoData:(struct __CVBuffer *)arg1 presentationTimestamp:(CDStruct_1b6d18a9)arg2;
- (_Bool)sendVideoData:(struct __CVBuffer *)arg1;
- (void)stop;
- (void)startWithProtocol:(id)arg1;
- (id)initWithConnectionManager:(id)arg1 configuration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

