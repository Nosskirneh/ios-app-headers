//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "GCKDeviceManagerDelegate-Protocol.h"
#import "GCKDeviceScannerListener-Protocol.h"
#import "GCKLoggerDelegate-Protocol.h"
#import "GCKMediaControlChannelDelegate-Protocol.h"
#import "WMPMediaControllerDelegate-Protocol.h"
#import "_TtP4WiMP24TidalCastChannelDelegate_-Protocol.h"

@class GCKDevice, GCKDeviceManager, GCKDeviceScanner, GCKMediaControlChannel, NSArray, NSString, NSTimer, _TtC4WiMP16TidalCastChannel;
@protocol CastServiceDelegate, CastVolumeDelegate;

@interface WMPCastService : NSObject <GCKDeviceScannerListener, GCKDeviceManagerDelegate, GCKMediaControlChannelDelegate, GCKLoggerDelegate, _TtP4WiMP24TidalCastChannelDelegate_, WMPMediaControllerDelegate>
{
    _Bool _isQueueLoaded;
    _Bool _isReconnecting;
    _Bool _isScrubbing;
    _Bool _isConnectedToCast;
    GCKDeviceScanner *_deviceScanner;
    GCKMediaControlChannel *_mediaControlChannel;
    id <CastServiceDelegate> _delegate;
    id <CastVolumeDelegate> _volumeDelegate;
    NSString *_applicationID;
    GCKDeviceManager *_deviceManager;
    GCKDevice *_selectedDevice;
    GCKDevice *_nextDeviceToConnectTo;
    _TtC4WiMP16TidalCastChannel *_castChannel;
    NSArray *_itemsToAdd;
    NSTimer *_streamPositionUpdateTimer;
    double _lastStreamPosition;
    long long _loadQueueRequestID;
    long long _addAsNextRequestID;
    long long _removeItemRequestID;
    long long _moveItemRequestID;
    long long _moveActiveItemsRequestID;
    long long _shuffleItemsRequestID;
    long long _replaceItemsRequestID;
    long long _requestStatusOnConnectRequestID;
    long long _requestStatusOnReConnectRequestID;
}

+ (id)sharedInstance;
@property(nonatomic) long long requestStatusOnReConnectRequestID; // @synthesize requestStatusOnReConnectRequestID=_requestStatusOnReConnectRequestID;
@property(nonatomic) long long requestStatusOnConnectRequestID; // @synthesize requestStatusOnConnectRequestID=_requestStatusOnConnectRequestID;
@property(nonatomic) long long replaceItemsRequestID; // @synthesize replaceItemsRequestID=_replaceItemsRequestID;
@property(nonatomic) long long shuffleItemsRequestID; // @synthesize shuffleItemsRequestID=_shuffleItemsRequestID;
@property(nonatomic) long long moveActiveItemsRequestID; // @synthesize moveActiveItemsRequestID=_moveActiveItemsRequestID;
@property(nonatomic) long long moveItemRequestID; // @synthesize moveItemRequestID=_moveItemRequestID;
@property(nonatomic) long long removeItemRequestID; // @synthesize removeItemRequestID=_removeItemRequestID;
@property(nonatomic) long long addAsNextRequestID; // @synthesize addAsNextRequestID=_addAsNextRequestID;
@property(nonatomic) long long loadQueueRequestID; // @synthesize loadQueueRequestID=_loadQueueRequestID;
@property(nonatomic) double lastStreamPosition; // @synthesize lastStreamPosition=_lastStreamPosition;
@property(retain, nonatomic) NSTimer *streamPositionUpdateTimer; // @synthesize streamPositionUpdateTimer=_streamPositionUpdateTimer;
@property(nonatomic) _Bool isConnectedToCast; // @synthesize isConnectedToCast=_isConnectedToCast;
@property(nonatomic) _Bool isScrubbing; // @synthesize isScrubbing=_isScrubbing;
@property(nonatomic) _Bool isReconnecting; // @synthesize isReconnecting=_isReconnecting;
@property(nonatomic) _Bool isQueueLoaded; // @synthesize isQueueLoaded=_isQueueLoaded;
@property(retain, nonatomic) NSArray *itemsToAdd; // @synthesize itemsToAdd=_itemsToAdd;
@property(retain, nonatomic) _TtC4WiMP16TidalCastChannel *castChannel; // @synthesize castChannel=_castChannel;
@property(retain, nonatomic) GCKDevice *nextDeviceToConnectTo; // @synthesize nextDeviceToConnectTo=_nextDeviceToConnectTo;
@property(retain, nonatomic) GCKDevice *selectedDevice; // @synthesize selectedDevice=_selectedDevice;
@property(retain, nonatomic) GCKDeviceManager *deviceManager; // @synthesize deviceManager=_deviceManager;
@property(copy, nonatomic) NSString *applicationID; // @synthesize applicationID=_applicationID;
@property(nonatomic) __weak id <CastVolumeDelegate> volumeDelegate; // @synthesize volumeDelegate=_volumeDelegate;
@property(nonatomic) __weak id <CastServiceDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) GCKMediaControlChannel *mediaControlChannel; // @synthesize mediaControlChannel=_mediaControlChannel;
@property(retain, nonatomic) GCKDeviceScanner *deviceScanner; // @synthesize deviceScanner=_deviceScanner;
- (void).cxx_destruct;
- (void)logFromFunction:(const char *)arg1 message:(id)arg2;
- (void)enableLogging;
- (_Bool)didUserDisconnectManually;
- (long long)repeatTypeForCastRepeatMode:(long long)arg1;
- (long long)getCurrentRepeatMode;
- (void)fetchCastAuthenticationToken:(CDUnknownBlockType)arg1;
- (id)getMediaInformationFromPlayQueueItem:(id)arg1;
- (id)convertPlayQueueItems:(id)arg1 startIndex:(unsigned long long)arg2 playPosition:(double)arg3 autoPlayCurrent:(_Bool)arg4;
- (void)updateUI;
- (void)clearPreviousSession;
- (void)mediaControlChannelDidUpdateQueue:(id)arg1;
- (void)mediaControlChannel:(id)arg1 requestDidFailWithID:(long long)arg2 error:(id)arg3;
- (void)mediaControlChannel:(id)arg1 requestDidCompleteWithID:(long long)arg2;
- (_Bool)isCastQueueLoaded;
- (void)updateLastPosition;
- (void)mediaControlChannelDidUpdateMetadata:(id)arg1;
- (void)mediaControlChannelDidUpdateStatus:(id)arg1;
- (void)showRequestFailureMessage;
- (void)checkAndHandlePossibleInvalidRequestId:(long long)arg1;
- (void)handleError:(id)arg1;
- (void)deviceManager:(id)arg1 didSuspendConnectionWithReason:(long long)arg2;
- (void)deviceManager:(id)arg1 volumeDidChangeToLevel:(float)arg2 isMuted:(_Bool)arg3;
- (void)deviceManager:(id)arg1 didDisconnectWithError:(id)arg2;
- (void)deviceManager:(id)arg1 didFailToStopApplicationWithError:(id)arg2;
- (void)deviceManager:(id)arg1 didDisconnectFromApplicationWithError:(id)arg2;
- (void)deviceManager:(id)arg1 didFailToConnectWithError:(id)arg2;
- (void)deviceManagerDidResumeConnection:(id)arg1 rejoinedApplication:(_Bool)arg2;
- (void)deviceManager:(id)arg1 didFailToConnectToApplicationWithError:(id)arg2;
- (void)deviceManager:(id)arg1 didConnectToCastApplication:(id)arg2 sessionID:(id)arg3 launchedApplication:(_Bool)arg4;
- (void)deviceManagerDidConnect:(id)arg1;
- (_Bool)deviceHasInvalidIPAddress:(id)arg1;
- (void)connectToSelectedDevice;
- (void)deviceDidGoOffline:(id)arg1;
- (void)deviceDidComeOnline:(id)arg1;
- (id)itemAtIndex:(unsigned long long)arg1;
- (id)currentItem;
- (_Bool)queueIsEmpty;
- (unsigned long long)itemsCount;
- (unsigned long long)currentQueueIndex;
- (void)playQueueItemAtIndex:(unsigned long long)arg1;
- (id)arrayOfItemIDsByIndexes:(id)arg1;
- (_Bool)reorderQueueIndexesWithoutHistory:(id)arg1;
- (_Bool)loadQueue:(id)arg1 startIndex:(unsigned long long)arg2 playPosition:(double)arg3 autoPlayCurrent:(_Bool)arg4;
- (_Bool)moveItemFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 asActive:(_Bool)arg3;
- (void)clearQueueAndStopPlayback;
- (void)replaceItemsAtIndexes:(id)arg1 withItems:(id)arg2;
- (long long)requestRemoveItemsAtIndexes:(id)arg1;
- (_Bool)removeItemAtIndex:(unsigned long long)arg1;
- (_Bool)moveActiveItemsAtIndexes:(id)arg1 beforeIndex:(unsigned long long)arg2;
- (long long)requestAddItems:(id)arg1 beforeIndex:(unsigned long long)arg2;
- (_Bool)addItems:(id)arg1 beforeIndex:(unsigned long long)arg2;
- (double)timeElapsed;
- (_Bool)isPaused;
- (_Bool)isPlaying;
- (void)beginScrubbing;
- (void)stop;
- (void)playPreviousItem;
- (void)playNextItem;
- (void)seekToTime:(double)arg1;
- (void)pause;
- (void)play;
- (void)didReceiveInsufficientPlaybackPrivilegesMessage;
- (void)didReceiveUpdateForAudioQuality:(long long)arg1;
- (void)didReceiveUpdateForRepeatMode:(long long)arg1;
- (void)setRepeat;
- (void)deviceDisconnected;
- (void)connectToDevice:(id)arg1;
- (void)connectToCastDevice:(id)arg1;
- (_Bool)isConnectedToDevice:(id)arg1;
- (id)getConnectedDeviceName;
- (void)preventReconnection;
- (void)disconnect;
- (void)setDeviceVolume:(float)arg1;
- (float)getDeviceVolume;
- (_Bool)hasVideoCapability;
- (_Bool)isConnecting;
- (_Bool)isConnected;
- (_Bool)hasAvailableDevices;
- (long long)connectionState;
- (void)stopDeviceScanning;
- (void)restartDeviceScanning;
- (void)startDeviceScanner;
- (void)applicationDidBecomeActive;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

