//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GCKCastChannel.h"

@class GCKGameManagerConfig, GCKGameManagerState, NSMutableDictionary, NSString;
@protocol GCKGameManagerChannelDelegate;

@interface GCKGameManagerChannel : GCKCastChannel
{
    NSMutableDictionary *_playerTokenMap;
    long long _requestID;
    NSMutableDictionary *_requestTrackers;
    NSString *_castSessionID;
    GCKGameManagerConfig *_gameManagerConfig;
    GCKGameManagerState *_previousState;
    _Bool _previousIsInitialConnectionEstablished;
    id _receiverGameMessage;
    NSString *_receiverGameMessagePlayerID;
    id <GCKGameManagerChannelDelegate> _delegate;
    GCKGameManagerState *_currentState;
    NSString *_lastUsedPlayerID;
}

@property(copy, nonatomic) NSString *lastUsedPlayerID; // @synthesize lastUsedPlayerID=_lastUsedPlayerID;
@property(readonly, nonatomic) GCKGameManagerState *currentState; // @synthesize currentState=_currentState;
@property(nonatomic) __weak id <GCKGameManagerChannelDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didFailToConnectWithError:(id)arg1;
- (void)notifyDidConnect;
- (void)notifyRequestDidFailWithID:(long long)arg1 error:(id)arg2;
- (void)notifyRequestDidSucceedWithID:(long long)arg1 result:(id)arg2;
- (void)notifyDidReceiveGameMessage:(id)arg1 forPlayerID:(id)arg2;
- (void)notifyStateDidChangeTo:(id)arg1 from:(id)arg2;
- (void)requestTracker:(id)arg1 didReplace:(long long)arg2;
- (void)requestTracker:(id)arg1 didTimeOut:(long long)arg2;
- (void)didConnect;
- (long long)gameManagerRequestTypeForPlayerState:(long long)arg1;
- (void)clearData;
- (void)loadData;
- (void)saveData;
- (void)notifyDelegates;
- (long long)errorCodeForGameStatusCode:(long long)arg1;
- (void)handleResponseAndClearTrackerForMessage:(id)arg1;
- (void)updateStateFromMessage:(id)arg1;
- (void)didReceiveTextMessage:(id)arg1;
- (id)getPlayerToken:(id)arg1;
- (id)buildJsonRequest:(long long)arg1 playerID:(id)arg2 gameManagerRequestType:(long long)arg3 extraData:(id)arg4;
- (long long)generateRequestID;
- (long long)sendRequest:(id)arg1 gameManagerRequestType:(long long)arg2 extraData:(id)arg3;
- (long long)sendPlayerRequest:(long long)arg1 extraData:(id)arg2 playerID:(id)arg3;
- (long long)sendPlayerRequest:(long long)arg1 extraData:(id)arg2;
@property(readonly, nonatomic) _Bool isInitialConnectionEstablished;
- (long long)maxPlayers;
- (id)applicationName;
- (void)sendGameMessage:(id)arg1 playerID:(id)arg2;
- (void)sendGameMessage:(id)arg1;
- (long long)sendGameRequest:(id)arg1 playerID:(id)arg2;
- (long long)sendGameRequest:(id)arg1;
- (long long)sendPlayerQuitRequest:(id)arg1 playerID:(id)arg2;
- (long long)sendPlayerQuitRequest:(id)arg1;
- (long long)sendPlayerIdleRequest:(id)arg1 playerID:(id)arg2;
- (long long)sendPlayerIdleRequest:(id)arg1;
- (long long)sendPlayerPlayingRequest:(id)arg1 playerID:(id)arg2;
- (long long)sendPlayerPlayingRequest:(id)arg1;
- (long long)sendPlayerReadyRequest:(id)arg1 playerID:(id)arg2;
- (long long)sendPlayerReadyRequest:(id)arg1;
- (long long)sendPlayerAvailableRequest:(id)arg1 playerID:(id)arg2;
- (long long)sendPlayerAvailableRequest:(id)arg1;
- (id)initWithSessionID:(id)arg1;
- (id)initWithNamespace:(id)arg1;
- (id)init;

@end

