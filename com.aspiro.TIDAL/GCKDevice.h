//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSCoding-Protocol.h"
#import "NSCopying-Protocol.h"

@class NSArray, NSMutableDictionary, NSString;

@interface GCKDevice : NSObject <NSCopying, NSCoding>
{
    NSMutableDictionary *_multizoneDeviceDictionary;
    _Bool _guestModeDevice;
    _Bool _discoveredViaMDNS;
    unsigned short _servicePort;
    NSString *_ipAddress;
    NSString *_deviceID;
    NSString *_friendlyName;
    NSString *_manufacturer;
    NSString *_modelName;
    NSArray *_icons;
    long long _status;
    NSString *_statusText;
    NSString *_deviceVersion;
    NSString *_category;
    NSString *_serviceInstanceName;
    long long _capabilities;
    NSMutableDictionary *_attributes;
    NSString *_guestModePIN;
    NSString *_wiFiBSSID;
    NSString *_uniqueID;
    NSString *_receiverMetricsID;
}

+ (_Bool)validateDeviceCategory:(id)arg1;
+ (id)deviceForGuestModeWithDeviceID:(id)arg1;
+ (id)deviceWithCategory:(id)arg1 deviceID:(id)arg2 ipAddress:(id)arg3 servicePort:(unsigned short)arg4;
@property(copy, nonatomic) NSString *receiverMetricsID; // @synthesize receiverMetricsID=_receiverMetricsID;
@property(copy, nonatomic) NSString *uniqueID; // @synthesize uniqueID=_uniqueID;
@property(nonatomic) _Bool discoveredViaMDNS; // @synthesize discoveredViaMDNS=_discoveredViaMDNS;
@property(copy, nonatomic) NSString *wiFiBSSID; // @synthesize wiFiBSSID=_wiFiBSSID;
@property(copy, nonatomic) NSString *guestModePIN; // @synthesize guestModePIN=_guestModePIN;
@property(nonatomic) _Bool guestModeDevice; // @synthesize guestModeDevice=_guestModeDevice;
@property(retain, nonatomic) NSMutableDictionary *attributes; // @synthesize attributes=_attributes;
@property(nonatomic) long long capabilities; // @synthesize capabilities=_capabilities;
@property(copy, nonatomic) NSString *serviceInstanceName; // @synthesize serviceInstanceName=_serviceInstanceName;
@property(copy, nonatomic) NSString *category; // @synthesize category=_category;
@property(copy, nonatomic) NSString *deviceVersion; // @synthesize deviceVersion=_deviceVersion;
@property(copy, nonatomic) NSString *statusText; // @synthesize statusText=_statusText;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(copy, nonatomic) NSArray *icons; // @synthesize icons=_icons;
@property(copy, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
@property(copy, nonatomic) NSString *manufacturer; // @synthesize manufacturer=_manufacturer;
@property(copy, nonatomic) NSString *friendlyName; // @synthesize friendlyName=_friendlyName;
@property(copy, nonatomic) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(nonatomic) unsigned short servicePort; // @synthesize servicePort=_servicePort;
@property(copy, nonatomic) NSString *ipAddress; // @synthesize ipAddress=_ipAddress;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isOnLocalNetwork; // @dynamic isOnLocalNetwork;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)removeAllAttributes;
- (void)removeAttributeForKey:(id)arg1;
- (id)attributeForKey:(id)arg1;
- (void)setAttribute:(id)arg1 forKey:(id)arg2;
- (void)clearMultizoneMemberDevices;
- (void)addMultizoneMemberDevice:(id)arg1;
- (void)addMultizoneMemberDevices:(id)arg1;
- (void)copyFrom:(id)arg1;
- (_Bool)isSameDeviceAs:(id)arg1;
- (_Bool)hasCapabilities:(long long)arg1;
- (id)multizoneMemberDevices;
- (id)init;
- (id)initWithIPAddress:(id)arg1 servicePort:(unsigned short)arg2;
- (id)initWithCategory:(id)arg1 deviceID:(id)arg2 ipAddress:(id)arg3 servicePort:(unsigned short)arg4;

@end

