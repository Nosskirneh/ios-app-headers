//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class GCKClearcutLogger, NSArray;

@interface GCKEventLogger : NSObject
{
    GCKClearcutLogger *_clearcutLogger;
    NSArray *_sortDescriptors;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)convertBSSIDToLocalNetworkId:(id)arg1;
- (id)createDeviceControllerEvent:(id)arg1 sessionID:(long long)arg2 application:(id)arg3;
- (id)createDeviceFilterEvent:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3;
- (id)createDiscoveryEvent:(id)arg1 loggingSession:(id)arg2;
- (id)getPseudonymousSenderID;
- (int)translateApplicationConnectionError:(long long)arg1;
- (int)translateDeviceConnectionError:(id)arg1;
- (id)convertToSubtypes:(id)arg1;
- (void)logAdaptiveDiscoveryResult:(id)arg1 withExpectedSubtypes:(id)arg2 receivedSubtypes:(id)arg3;
- (void)logEvent:(id)arg1 forAction:(int)arg2;
- (void)logRuntimeConfiguration:(id)arg1;
- (void)logRuntimeConfiguration;
- (void)logDeviceController:(id)arg1 sessionID:(long long)arg2 application:(id)arg3 disconnectedWithError:(long long)arg4;
- (void)logDeviceController:(id)arg1 sessionID:(long long)arg2 applicationConnected:(id)arg3;
- (void)logDeviceController:(id)arg1 sessionID:(long long)arg2 application:(id)arg3 connectionFailedWithError:(long long)arg4;
- (void)logDeviceController:(id)arg1 sessionID:(long long)arg2 joiningApplication:(id)arg3 existingSession:(_Bool)arg4 connectionType:(long long)arg5;
- (void)logDeviceController:(id)arg1 sessionID:(long long)arg2 launchingApplication:(id)arg3 relaunchIfRunning:(_Bool)arg4;
- (void)logDeviceController:(id)arg1 sessionID:(long long)arg2 disconnectedWithError:(long long)arg3 explicit:(_Bool)arg4;
- (void)logDeviceController:(id)arg1 sessionID:(long long)arg2 connectionFailedWithError:(id)arg3;
- (void)logDeviceControllerConnected:(id)arg1 sessionID:(long long)arg2;
- (void)logDeviceControllerConnecting:(id)arg1 sessionID:(long long)arg2;
- (void)logFilterFailedForDevice:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3 withError:(id)arg4;
- (void)logFilterFinishedForDevice:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3 matchedApplicationIDs:(id)arg4 unmatchedApplicationIDs:(id)arg5 matchedNamespaces:(id)arg6 unmatchedNamespaces:(id)arg7;
- (void)logFilterReceivedStatusForDevice:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3;
- (void)logFilterRequestedStatusForDevice:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3;
- (void)logFilterReceivedAppAvailabilityForDevice:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3;
- (void)logFilterRequestedAppAvailabilityForDevice:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3;
- (void)logFilterConnectionFailedToDevice:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3 withError:(id)arg4;
- (void)logFilterConnectedToDevice:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3;
- (void)logFilterConnectingToDevice:(id)arg1 sessionID:(long long)arg2 filterID:(int)arg3;
- (void)logPublishedDevices:(id)arg1 session:(id)arg2;
- (void)logDeviceExpired:(id)arg1 session:(id)arg2;
- (void)logDeviceScanCriteriaChanged:(id)arg1;
- (void)logDeviceScanResumed:(id)arg1;
- (void)logDeviceScanPaused:(id)arg1;
- (void)logDeviceScanStopped:(id)arg1;
- (void)logDeviceScanPing:(id)arg1;
- (void)logDeviceScanStarted:(id)arg1;
- (void)logSlowMdnsResponse:(id)arg1 withType:(int)arg2 session:(id)arg3 expectedSubtypes:(id)arg4 receivedSubtypes:(id)arg5 latency:(double)arg6;
- (void)logAdaptiveDiscoveryFailedToDevice:(id)arg1 withReason:(int)arg2 session:(id)arg3 error:(id)arg4 expectedSubtypes:(id)arg5 receivedSubtypes:(id)arg6;
- (void)logAdaptiveDiscoverySuccess:(id)arg1 withReason:(int)arg2 session:(id)arg3 isSameDevice:(_Bool)arg4 expectedSubtypes:(id)arg5 receivedSubtypes:(id)arg6;
- (void)logMdnsSubtypeFilteringEvent:(id)arg1 session:(id)arg2 subtype:(id)arg3 isPositiveFilteringResult:(_Bool)arg4 wasSubtypePreviouslyDiscovered:(_Bool)arg5 latency:(double)arg6;
- (void)logMdnsSubtypeFilteringEvent:(id)arg1 session:(id)arg2 subtype:(id)arg3 isPositiveFilteringResult:(_Bool)arg4 wasSubtypePreviouslyDiscovered:(_Bool)arg5;
- (void)logDeviceDiscovered:(id)arg1 session:(id)arg2;
- (id)init;

@end

