//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "PersistenceModelExecution.h"

@interface PersistenceModel : PersistenceModelExecution
{
}

- (void)removeDismissal:(struct GTLRMusicPA_GoogleInternalPlayMusicDismissalV1Dismissal *)arg1;
- (id)fetchInnerjamDismissalKeys;
- (id)fetchInnerjamDismissals;
- (void)addInnerjamDismissalWithDismissalToken:(id)arg1 dismissalType:(long long)arg2 dismissalKey:(id)arg3 logToken:(id)arg4;
- (void)insertHistoricalSearchSuggestionFromQuery:(id)arg1;
- (void)saveEmptySearchSuggestions:(id)arg1;
- (id)emptySearchSuggestions;
- (id)musicQueueSyncUpdateRequestForSenderVersion:(long long)arg1 updatedVersion:(long long)arg2 musicQueueSyncPlaySettings:(id)arg3 localShuffleModeOn:(_Bool)arg4;
- (id)musicQueueSyncQueueForCloudQueueVersion:(long long)arg1 musicQueueSyncPlaySettings:(id)arg2;
- (void)clearCloudQueueTombstones;
- (void)updateCloudQueueFromMusicQueueSyncSyncResponse:(id)arg1 localShuffleModeOn:(_Bool)arg2;
- (void)setCloudQueueFromMusicQueueSyncQueue:(id)arg1;
- (void)copyCloudQueueToLocalQueue;
- (void)copyLocalQueueToCloudQueue;
- (id)searchSuggestionLockerForPlaylists:(id)arg1;
- (id)searchSuggestionLockerForStations:(id)arg1;
- (id)searchSuggestionLockerForTracks:(id)arg1;
- (id)searchSuggestionLockerForArtists:(id)arg1;
- (id)searchSuggestionLockerForAlbums:(id)arg1;
- (id)searchLockerForPlaylists:(id)arg1;
- (id)searchLockerForStations:(id)arg1;
- (id)searchLockerForTracks:(id)arg1;
- (id)searchLockerForAlbums:(id)arg1;
- (id)searchLockerForArtists:(id)arg1;
- (unsigned long long)totalCachedTrackCount;
- (id)listenNowDismissalsUpdatedMin;
- (id)radioStationsUpdatedMin;
- (long long)playlistEntriesLastDownSyncMicroseconds;
- (id)playlistsUpdatedMin;
- (void)clearEphemeralThumbsUpTracksDownSyncDate;
- (id)ephemeralThumbsUpTracksDownSyncDate;
- (id)tracksUpdatedMin;
- (void)clearSyncFlagDismissalID:(id)arg1;
- (void)updateDismissalID:(id)arg1 newID:(id)arg2;
- (id)listenNowDismissalsToSync;
- (void)clearRadioStationTombstone:(id)arg1;
- (id)radioStationsToDelete;
- (void)clearUserActivityEvents:(id)arg1;
- (id)userActivityEventsToSyncStartingAfterEventID:(id)arg1;
- (void)clearSyncFlagForRadioStationID:(id)arg1;
- (void)clearTrackTombstone:(id)arg1;
- (id)tracksToDelete;
- (void)clearSyncFlagForTrackNID:(id)arg1;
- (void)clearSyncFlagForTrackLockerID:(id)arg1;
- (void)updateRatingForTrack:(id)arg1;
- (id)trackNIDForTrackId:(id)arg1;
- (void)updateTrackLockerID:(id)arg1 newID:(id)arg2;
- (id)radioStationsToSync;
- (id)tracksToSync;
- (id)followingPlaylistEntryID:(id)arg1;
- (id)precedingPlaylistEntryID:(id)arg1;
- (void)saveUpSyncedPlaylistEntryMutationResponses:(id)arg1 requestedMutations:(id)arg2;
- (id)playlistEntryMutationsToUpSync;
- (void)clearPlaylistTombstone:(id)arg1;
- (id)playlistsToDelete;
- (void)clearSyncFlagForPlaylistID:(id)arg1;
- (void)updatePlaylistID:(id)arg1 newID:(id)arg2;
- (id)playlistsToSync;
- (id)queuedContainers;
- (_Bool)refreshContainer:(id)arg1 withNewTracks:(id)arg2;
- (_Bool)removeDeletedTracksFromQueue;
- (void)clearQueue;
- (void)setQueuedContainerTrackState:(long long)arg1 forTrackAtIndex:(unsigned long long)arg2;
- (id)queueableContainerInfoForTrackAtIndex:(unsigned long long)arg1;
- (unsigned long long)unshuffleQueueWithTrackAtIndex:(unsigned long long)arg1 cloudQueueVersion:(long long)arg2;
- (unsigned long long)shuffleQueueWithTrackAtIndex:(unsigned long long)arg1 cloudQueueVersion:(long long)arg2;
- (void)moveQueuedContainerTrackAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 cloudQueueVersion:(long long)arg3;
- (void)removeQueuedContainerTracksFromIndex:(unsigned long long)arg1 numTracksToRemove:(unsigned long long)arg2;
- (void)removeQueuedContainerTrackAtIndex:(unsigned long long)arg1;
- (void)enqueueContainer:(id)arg1 queueItemState:(long long)arg2 currentPosition:(unsigned long long)arg3 cloudQueueVersion:(long long)arg4;
- (void)enqueueNextContainer:(id)arg1 afterPosition:(unsigned long long)arg2 shouldShuffle:(_Bool)arg3 cloudQueueVersion:(long long)arg4;
- (unsigned long long)enqueuePlayedContainer:(id)arg1 selectedPosition:(unsigned long long)arg2 shouldShuffle:(_Bool)arg3 cloudQueueVersion:(long long)arg4;
- (id)cloudQueueItemIDs;
- (id)tracksInPlayQueue;
- (void)clearBlacklist;
- (void)blacklistTrackID:(id)arg1;
- (id)pinningStatistics;
- (id)tracksPendingDownloadWithLimit:(unsigned long long)arg1;
- (unsigned long long)totalSizeOfCachedTracksWithOwner:(long long)arg1;
- (unsigned long long)totalSizeOfCachedTracks;
- (unsigned long long)totalSizeOfTracksPendingDownload;
- (id)downloadedTrackCacheIDsNoLongerPinned;
- (id)pinnedMusicItems;
- (void)updateAllPinnedContainerTracks;
- (double)downloadProgressForPinnableContainerInfo:(id)arg1;
- (id)tracksOfPinnedContainer:(id)arg1;
- (id)nextPinnedContainerPendingDownload;
- (_Bool)isPinnedContainer:(id)arg1;
- (void)clearAllPinnedContainers;
- (void)deletePinnedContainer:(id)arg1;
- (_Bool)insertPinnedContainer:(id)arg1;
- (_Bool)hasCachedTracksForItem:(id)arg1;
- (_Bool)hasValidTrackCacheEntryForCacheID:(id)arg1;
- (id)clearStaleEphemeralTrackCacheEntries;
- (void)clearOrphanedTrackCacheEntries;
- (void)clearTrackCacheForOwner:(long long)arg1;
- (void)clearTrackCache;
- (void)deleteTrackCacheEntryForCacheID:(id)arg1;
- (id)trackCacheIDToSizeMap;
- (id)trackCacheIDs;
- (id)trackCacheEntriesForOwner:(long long)arg1;
- (id)LRUStreamedTrackCacheEntriesWithOwner:(long long)arg1 limit:(long long)arg2;
- (id)trackCacheEntryForCacheID:(id)arg1;
- (void)insertTrackCacheEntry:(id)arg1;
- (_Bool)hasUserVersionOfSharedPlaylist:(id)arg1;
- (_Bool)isSubscribedSharedPlaylist:(id)arg1;
- (_Bool)hasTracksInLockerForArtist:(id)arg1;
- (_Bool)hasTracksInLockerForAlbum:(id)arg1;
- (_Bool)hasSubscriptionTracksInLockerForAlbum:(id)arg1;
- (_Bool)areAllLockerTracks:(id)arg1 fromSubscriptionOnly:(_Bool)arg2;
- (id)lastPlaylistEntryPositionInPlaylist:(id)arg1;
- (id)pinnedRadioStationsToUpdateWithExecutor:(id)arg1;
- (id)pinnedRadioStationsToUpdate;
- (id)stationIDForRadioStation:(id)arg1;
- (void)deleteTracks:(id)arg1;
- (void)deleteRadioStation:(id)arg1;
- (void)deletePlaylistEntryForPlaylist:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)deletePlaylist:(id)arg1;
- (void)reorderPlaylistEntryForPlaylist:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)insertDismissalForMainstageItem:(id)arg1;
- (void)insertUserActivityEvent:(id)arg1;
- (unsigned long long)insertTracks:(id)arg1 toPlaylist:(id)arg2;
- (void)insertTracks:(id)arg1 replace:(_Bool)arg2 needsSync:(_Bool)arg3;
- (id)updateOrInsertPlaylist:(id)arg1 needsSync:(_Bool)arg2;
- (void)removeMainstageItem:(id)arg1;
- (void)insertMainstageItem:(id)arg1 forReason:(long long)arg2;
- (id)fetchTracksInAutoPlaylist:(id)arg1 shouldFilterCachedOnly:(_Bool)arg2 shouldFilterExplicit:(_Bool)arg3 limit:(unsigned long long)arg4;
- (id)playlistIDForShareToken:(id)arg1;
- (id)autoPlaylists;
- (_Bool)autoPlaylistHasItems:(long long)arg1 filterLockerOnly:(_Bool)arg2;
- (id)mainstageRecommendations;
- (id)recentRadioStationsWithLimit:(unsigned long long)arg1 forMainstage:(_Bool)arg2;
- (id)recentPlaylistsWithLimit:(unsigned long long)arg1 forMainstage:(_Bool)arg2;
- (id)recentAlbumsWithLimit:(unsigned long long)arg1 forMainstage:(_Bool)arg2;
- (void)clearSubscriptionData;
- (void)clearRadio:(long long)arg1;
- (void)populateArtURLsOfArtist:(id)arg1;
- (id)fetchArtURLForAlbum:(id)arg1;
- (id)fetchUniqueArtURLsForGenre:(id)arg1 limit:(unsigned long long)arg2;
- (id)fetchUniqueArtURLsForArtist:(id)arg1 limit:(unsigned long long)arg2;
- (id)fetchUniqueArtURLsForPlaylist:(id)arg1 limit:(unsigned long long)arg2;
- (id)fetchTracksByGenre:(id)arg1 shouldFilterCachedOnly:(_Bool)arg2 shouldFilterExplicit:(_Bool)arg3 limit:(unsigned long long)arg4;
- (id)fetchRadioStationByRadioSeed:(id)arg1;
- (id)fetchLockerRadioStationByRadioSeed:(id)arg1;
- (id)fetchLockerTrackForTrackNID:(id)arg1;
- (id)fetchLockerAlbumForAlbumID:(id)arg1;
- (id)fetchLockerTracksByAlbumID:(id)arg1;
- (id)fetchLockerTracksByArtistID:(id)arg1;
- (id)fetchTrackByLockerID:(id)arg1;
- (id)fetchTrackByMetajamID:(id)arg1;
- (id)fetchTracksByGenre:(id)arg1;
- (id)fetchTracksByArtist:(id)arg1 shouldFilterCachedOnly:(_Bool)arg2 shouldFilterExplicit:(_Bool)arg3 limit:(unsigned long long)arg4;
- (id)fetchTracksByArtist:(id)arg1;
- (id)fetchAlbumsByArtist:(id)arg1;
- (id)fetchTracksInPlaylist:(id)arg1 shouldFilterCachedOnly:(_Bool)arg2 shouldFilterExplicit:(_Bool)arg3 limit:(unsigned long long)arg4;
- (id)fetchTracksInAutoPlaylist:(id)arg1;
- (id)fetchTracksInPlaylist:(id)arg1;
- (id)fetchTracksInAlbum:(id)arg1 shouldFilterCachedOnly:(_Bool)arg2 shouldFilterExplicit:(_Bool)arg3 limit:(unsigned long long)arg4;
- (id)fetchTracksInAlbum:(id)arg1;
- (id)fetchRandomTracksWithLimit:(unsigned long long)arg1;
- (id)fetchAlbumsOfGenre:(id)arg1;
- (unsigned long long)lockerTrackCount;
- (void)removeItem:(id)arg1;
- (void)postProcessLockerDataAfterDownSync;
- (void)clearListenNowRecommendations;
- (void)clearListenNowDismissals;
- (void)saveListenNowRecommendationsFromSJListenNowItems:(id)arg1;
- (void)saveSyncedListenNowDismissals:(id)arg1;
- (void)saveSyncedEphemeralThumbsUpSJTracks:(id)arg1;
- (id)getCachedTracksForPinnedRadioStation:(id)arg1 allowUsedCachedTracks:(_Bool)arg2 maxEntries:(unsigned long long)arg3;
- (void)updateTracksForPinnedRadioStation:(id)arg1;
- (void)saveRadioStation:(id)arg1 needsSync:(_Bool)arg2;
- (void)saveSyncedSJRadioStations:(id)arg1;
- (void)saveSyncedSJTracks:(id)arg1;
- (_Bool)saveSharedSJPlaylistEntries:(id)arg1 shareToken:(id)arg2;
- (void)saveDownSyncSJPlaylistEntries:(id)arg1;
- (void)saveSyncedSJPlaylists:(id)arg1;
- (void)clearLastSyncStatusTable;
- (_Bool)testUpgradeDatabaseFromSchemaVersion:(unsigned long long)arg1;

@end

