//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CBCentralManagerDelegate-Protocol.h"
#import "CLLocationManagerDelegate-Protocol.h"
#import "ULRMonitorable-Protocol.h"

@class CBCentralManager, CLLocationManager, NSMutableArray, NSMutableSet, NSSet, NSString, NSTimer, ULRAnalyticsLogger, ULRBackgroundTask, ULRBleScanRateUpdateCache, ULRLocation, ULRLocationEaterLocationUpdateCache, ULRLocationTriggerRegionCache, ULRMotionActivityManager, ULRPhenotypeFlags;
@protocol OS_dispatch_queue, ULRTriggerManagerDelegate><ULRMonitorableDelegate;

@interface ULRTriggerManager : NSObject <CBCentralManagerDelegate, CLLocationManagerDelegate, ULRMonitorable>
{
    id <ULRTriggerManagerDelegate><ULRMonitorableDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_workQueue;
    CLLocationManager *_locationManager;
    _Bool _locationRegionTriggersAllowed;
    NSMutableSet *_triggerRegions;
    NSMutableArray *_triggeredEnterRegions;
    NSMutableArray *_triggeredExitRegions;
    ULRLocation *_locationTriggerRegionCreateLocation;
    NSSet *_monitorLocationCLRegions;
    ULRPhenotypeFlags *_phenotypeFlags;
    ULRAnalyticsLogger *_analyticsLogger;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    _Bool _started;
    _Bool _visitTriggersAllowed;
    _Bool _motionTriggerAdjustmentAllowed;
    ULRMotionActivityManager *_motionManager;
    CBCentralManager *_bluetoothManager;
    ULRLocationTriggerRegionCache *_eatenLocationTriggerRegionCache;
    ULRLocationEaterLocationUpdateCache *_eatenLocationUpdateCache;
    ULRBleScanRateUpdateCache *_bleScanRateUpdateCache;
    NSTimer *_locationRegionUpdateAttemptTimer;
    ULRBackgroundTask *_locationRegionUpdateAttemptBackgroundTask;
    _Bool _updatingLocationRegions;
    NSTimer *_triggerHeartbeatTimer;
    _Bool _heartbeatTriggerUpdate;
    _Bool _locationRegionTriggersEnabled;
    _Bool _bluetoothScanningTriggersEnabled;
    _Bool _visitTriggersEnabled;
    double _lastBluetoothTriggerTime;
    double _firstConsecutiveBluetoothTriggerTime;
}

+ (_Bool)motionTriggerAdjustmentSupported;
+ (_Bool)visitTriggersSupported;
+ (_Bool)bluetoothScanningTriggersSupported;
+ (_Bool)locationRegionTriggersSupported;
+ (_Bool)triggersSupported;
@property(readonly, nonatomic, getter=isStarted) _Bool started; // @synthesize started=_started;
@property(readonly, nonatomic) __weak id <ULRTriggerManagerDelegate><ULRMonitorableDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)monitorLocationCLRegions;
- (void)setTriggerRegions:(id)arg1;
- (id)triggerRegions;
- (_Bool)testsWaitForAllCacheIOBeforeDate:(id)arg1;
- (void)resumeBluetooothScanningIfNecessary;
- (void)stopBluetoothScanningIfNecessary;
- (_Bool)shouldIgnoreBluetoothScanningTrigger;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (void)centralManagerDidUpdateState:(id)arg1;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didVisit:(id)arg2;
- (void)locationManager:(id)arg1 monitoringDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)locationManager:(id)arg1 didDetermineState:(long long)arg2 forRegion:(id)arg3;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)removeVisitTriggers;
- (void)updateVisitTriggers;
- (void)didStartScanning:(_Bool)arg1;
- (void)removeBluetoothScanningTriggers;
- (void)updateBluetoothScanningTriggers;
- (void)processLocationUpdates:(id)arg1;
- (void)setLocationTriggerRegionsForLocation:(id)arg1;
- (void)setLocationTriggerRegionNamed:(id)arg1 latitude:(double)arg2 longitude:(double)arg3 radius:(double)arg4;
- (void)locationRegionUpdateAttemptFailed:(id)arg1;
- (void)endLocationRegionUpdateAttempt;
- (void)updateLocationTriggerRegions;
- (void)processTriggeredRegion:(id)arg1 withDesignation:(long long)arg2;
- (void)updateListOfTriggeredRegionsWithRegion:(id)arg1;
- (void)fireTrigger;
- (void)fireHeartbeat:(id)arg1;
- (void)resetHeartbeat;
- (void)applicationDidEnterBackground:(id)arg1;
- (_Bool)shouldUseMotionTriggerAdjustment;
- (_Bool)shouldUseVisitTriggers;
- (_Bool)shouldUseBluetoothScanningTriggers;
- (void)performDelegateTask:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)updateMonitorState;
- (void)maybeUpdateLocationRegionTriggersForLocation:(id)arg1;
- (id)stopTriggers;
- (void)processEatenLocationUpdate;
- (void)processEatenLocationTriggerRegions;
- (_Bool)configureMotionActivityManager;
- (_Bool)configureBluetoothManager;
- (_Bool)configureLocationManager;
- (id)startTriggers;
- (void)startBluetoothScanning;
- (void)startLocationAccess;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 delegateQueue:(id)arg2 workQueue:(id)arg3 analyticsLogger:(id)arg4;
@property _Bool motionTriggerAdjustmentAllowed;
@property _Bool visitTriggersAllowed;
@property _Bool locationRegionTriggersAllowed;
- (id)identifiersFromCLRegions:(id)arg1;
- (void)removeAllLocationTriggerRegionsNotifyingMonitor:(_Bool)arg1;
- (_Bool)shouldUseLocationRegionTriggers;
- (_Bool)isMonitoringLocationRegionsIncorrectly;
- (_Bool)isMonitoringLocationRegions;
- (void)updateMonitorWithCurrentTriggerRegions;
- (_Bool)foundUnknownRegionInTriggerRegions;
- (void)removeAllTriggerRegions;
- (void)resetAllTriggerRegions;
- (void)reclaimMonitoredTriggerRegionsFromRegions:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

