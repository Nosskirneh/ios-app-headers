//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GPDBReadWriteExecutor-Protocol.h"

@class GPDBDatabaseDelegateManager, GPDBTransaction, NSCondition, NSHashTable, NSRecursiveLock, NSString;

@interface GPDBDatabaseConnection : NSObject <GPDBReadWriteExecutor>
{
    GPDBDatabaseDelegateManager *_delegateManager;
    struct sqlite3 *_db;
    _Bool _closed;
    NSCondition *_dbOutstandingCondition;
    NSRecursiveLock *_dbExecutionLock;
    unsigned long long _immediateExecutionCount;
    NSHashTable *_activeAssociatedPreparedStatements;
    NSHashTable *_unfinalizedAssociatedPreparedStatements;
    _Bool _hasAssociatedTransaction;
    GPDBTransaction *_associatedTransaction;
    NSString *_path;
}

@property(readonly, copy, nonatomic) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (void)finalizePreparedStatement:(id)arg1;
- (id)executePreparedStatement:(id)arg1 error:(id *)arg2;
- (_Bool)stepPreparedStatement:(id)arg1 error:(id *)arg2;
- (void)forceClose;
- (void)close;
- (void)interrupt;
- (id)preparedStatementForSQL:(id)arg1 statementConnection:(id)arg2 backgroundTask:(id)arg3 error:(id *)arg4;
- (id)preparedStatementForSQL:(id)arg1 error:(id *)arg2;
- (id)executeSQL:(id)arg1 bindValues:(id)arg2 error:(id *)arg3;
- (id)executeSQL:(id)arg1 error:(id *)arg2;
- (_Bool)checkIntegrityWithError:(id *)arg1;
- (_Bool)defineCollationFunction:(CDUnknownFunctionPointerType)arg1 name:(id)arg2 userData:(id)arg3 error:(id *)arg4;
- (_Bool)defineScalarFunction:(CDUnknownFunctionPointerType)arg1 name:(id)arg2 argCount:(long long)arg3 deterministic:(_Bool)arg4 userData:(id)arg5 error:(id *)arg6;
@property(readonly, getter=isClosed) _Bool closed;
@property(readonly, getter=isInUse) _Bool inUse;
- (_Bool)lockedIsInUse;
- (void)dealloc;
- (id)initWithPath:(id)arg1 delegateManager:(id)arg2 error:(id *)arg3;
- (id)init;
- (struct sqlite3 *)databaseHandleForBackup;
- (void)disassociateTransaction:(id)arg1;
- (_Bool)associateTransaction:(id)arg1;
- (id)preparedStatementForSQL:(id)arg1 backgroundTask:(id)arg2 error:(id *)arg3;

@end

