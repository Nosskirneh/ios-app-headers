//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AsyncReader-Protocol.h"

@class NSURL, Track, TrackFetcher;
@protocol TrackFetcherDelegate;

@interface DownloadRequest : NSObject <AsyncReader>
{
    TrackFetcher *_fetcher;
    unsigned long long _targetKBPS;
    long long _streamingQuality;
    _Bool _adaptiveStreamingEnabled;
    long long _networkType;
    _Bool _retryEnabled;
    id <TrackFetcherDelegate> _trackFetcherDelegate;
    _Bool _streaming;
    _Bool _cacheable;
    _Bool _explicitPlay;
    Track *_track;
    unsigned long long _startingOffset;
    double _startTime;
}

+ (id)requestForTrack:(id)arg1 forStreaming:(_Bool)arg2 isCacheable:(_Bool)arg3 explicitPlay:(_Bool)arg4 startingAt:(unsigned long long)arg5 startTime:(double)arg6 targetKBPS:(unsigned long long)arg7 streamingQuality:(long long)arg8 adaptiveStreamingEnabled:(_Bool)arg9 networkType:(long long)arg10 retryEnabled:(_Bool)arg11 trackFetcherDelegate:(id)arg12;
@property(readonly, nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(readonly, nonatomic) unsigned long long startingOffset; // @synthesize startingOffset=_startingOffset;
@property(readonly, nonatomic, getter=isExplicitPlay) _Bool explicitPlay; // @synthesize explicitPlay=_explicitPlay;
@property(readonly, nonatomic, getter=isCacheable) _Bool cacheable; // @synthesize cacheable=_cacheable;
@property(readonly, nonatomic, getter=isStreaming) _Bool streaming; // @synthesize streaming=_streaming;
@property(readonly, nonatomic) Track *track; // @synthesize track=_track;
- (void).cxx_destruct;
- (void)resetDownloading;
- (void)stopDownloading;
- (void)startFetching;
- (id)description;
@property(readonly, nonatomic) _Bool addedToPersistentCache;
@property(readonly, nonatomic) unsigned long long transcodeState;
@property(readonly, nonatomic) long long trackCacheCodec;
@property(readonly, nonatomic, getter=isCached) _Bool cached;
@property(readonly, nonatomic) long long networkType;
@property(readonly, nonatomic) unsigned long long targetKBPS;
@property(readonly, nonatomic) double completeLatency;
@property(readonly, nonatomic) double firstByteLatency;
@property(readonly, nonatomic) unsigned long long bytesDownloaded;
@property(readonly, nonatomic) NSURL *url;
- (void)bufferedSizeWithCallbackQueue:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)totalSizeWithCallbackQueue:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)readFromOffset:(unsigned long long)arg1 length:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (id)initWithTrack:(id)arg1 forStreaming:(_Bool)arg2 isCacheable:(_Bool)arg3 explicitPlay:(_Bool)arg4 startingAt:(unsigned long long)arg5 startTime:(double)arg6 targetKBPS:(unsigned long long)arg7 streamingQuality:(long long)arg8 adaptiveStreamingEnabled:(_Bool)arg9 networkType:(long long)arg10 retryEnabled:(_Bool)arg11 trackFetcherDelegate:(id)arg12;

@end

